// Generated by CoffeeScript 1.7.1
(function() {
  var dnode, http, onSignal, phanta, shoe, spawn, startPhantomProcess, wrap,
    __slice = [].slice;

  dnode = require('dnode');

  http = require('http');

  shoe = require('shoe');

  spawn = require('win-spawn');

  phanta = [];

  startPhantomProcess = function(binary, port, hostname, args) {
    return spawn(binary, args.concat([__dirname + '/shim.js', port, hostname]));
  };

  onSignal = function() {
    var phantom, _i, _len;
    for (_i = 0, _len = phanta.length; _i < _len; _i++) {
      phantom = phanta[_i];
      phantom.exit();
    }
    return process.exit();
  };

  process.on('exit', function() {
    var phantom, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = phanta.length; _i < _len; _i++) {
      phantom = phanta[_i];
      _results.push(phantom.exit());
    }
    return _results;
  });

  process.on('SIGINT', onSignal);

  process.on('SIGTERM', onSignal);

  wrap = function(ph) {
    ph.callback = function(fn) {
      return '__phantomCallback__' + fn.toString();
    };
    ph._createPage = ph.createPage;
    return ph.createPage = function(cb) {
      return ph._createPage(function(page) {
        page._evaluate = page.evaluate;
        page.evaluate = function() {
          var args, cb, fn;
          fn = arguments[0], cb = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
          return page._evaluate.apply(page, [fn.toString(), cb].concat(args));
        };
        page._onResourceRequested = page.onResourceRequested;
        page.onResourceRequested = function() {
          var args, cb, fn;
          fn = arguments[0], cb = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
          return page._onResourceRequested.apply(page, [fn.toString(), cb].concat(args));
        };
        return cb(page);
      });
    };
  };

  module.exports = {
    create: function() {
      var arg, args, cb, httpServer, key, options, phantom, ps, sock, value, _i, _len, _ref;
      args = [];
      options = {};
      for (_i = 0, _len = arguments.length; _i < _len; _i++) {
        arg = arguments[_i];
        switch (typeof arg) {
          case 'function':
            cb = arg;
            break;
          case 'string':
            args.push(arg);
            break;
          case 'object':
            options = arg;
        }
      }
      if (typeof options.parameters === 'object') {
        _ref = options.parameters;
        for (key in _ref) {
          value = _ref[key];
          args.push('--' + key + '=' + value);
        }
      }
      if (options.path == null) {
        options.path = '';
      }
      if (options.binary == null) {
        options.binary = options.path + 'phantomjs';
      }
      if (options.port == null) {
        options.port = 0;
      }
      if (options.hostname == null) {
        options.hostname = 'localhost';
      }
      if (options.dnodeOpts == null) {
        options.dnodeOpts = {};
      }
      ps = null;
      phantom = null;
      httpServer = http.createServer();
      httpServer.listen(options.port, options.hostname);
      httpServer.on('listening', function() {
        var hostname, port;
        port = httpServer.address().port;
        hostname = httpServer.address().address;
        ps = startPhantomProcess(options.binary, port, hostname, args);
        ps.stdout.on('data', options.onStdout || function(data) {
          return console.log("phantom stdout: " + data);
        });
        ps.stderr.on('data', options.onStderr || function(data) {
          return module.exports.stderrHandler(data.toString('utf8'));
        });
        ps.on('error', function(err) {
          httpServer.close();
          if ((err != null ? err.code : void 0) === 'ENOENT') {
            return console.error("phantomjs-node: You don't have 'phantomjs' installed");
          } else {
            throw err;
          }
        });
        return ps.on('exit', function(code, signal) {
          var p;
          httpServer.close();
          if (phantom) {
            if (typeof phantom.onExit === "function") {
              phantom.onExit();
            }
            phanta = (function() {
              var _j, _len1, _results;
              _results = [];
              for (_j = 0, _len1 = phanta.length; _j < _len1; _j++) {
                p = phanta[_j];
                if (p !== phantom) {
                  _results.push(p);
                }
              }
              return _results;
            })();
          }
          if (options.onExit) {
            return options.onExit(code, signal);
          } else {
            console.assert(signal == null, "signal killed phantomjs: " + signal);
            return console.assert(code === 0, "abnormal phantomjs exit code: " + code);
          }
        });
      });
      sock = shoe(function(stream) {
        var d;
        d = dnode({}, options.dnodeOpts);
        d.on('remote', function(phantom) {
          wrap(phantom);
          phantom.process = ps;
          phanta.push(phantom);
          return typeof cb === "function" ? cb(phantom) : void 0;
        });
        d.pipe(stream);
        return stream.pipe(d);
      });
      return sock.install(httpServer, '/dnode');
    },
    stderrHandler: function(message) {
      if (message.match(/(No such method.*socketSentData)|(CoreText performance note)/)) {
        return;
      }
      return console.warn("phantom stderr: " + message);
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,IWZ1bmN0aW9uIGUodCxuLGkpe2Z1bmN0aW9uIG8oYSxzKXtpZighblthXSl7aWYoIXRbYV0pe3ZhciBsPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFzJiZsKXJldHVybiBsKGEsITApO2lmKHIpcmV0dXJuIHIoYSwhMCk7dmFyIGM9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrYSsiJyIpO3Rocm93IGMuY29kZT0iTU9EVUxFX05PVF9GT1VORCIsY312YXIgcD1uW2FdPXtleHBvcnRzOnt9fTt0W2FdWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbYV1bMV1bZV07cmV0dXJuIG8obj9uOmUpfSxwLHAuZXhwb3J0cyxlLHQsbixpKX1yZXR1cm4gblthXS5leHBvcnRzfXZhciByPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO21vZHVsZS5leHBvcnRzPW8oaVswXSl9KHsxOltmdW5jdGlvbihlLHQsbil7dmFyIGksbz1lKCJwYXRoIikscj1lKCJncmFjZWZ1bC1mcyIpLGE9ZSgiZXhwcmVzcyIpLHM9ZSgiY29tcHJlc3Npb24iKSxsPXIucmVhZEZpbGVTeW5jKG8uam9pbihfX2Rpcm5hbWUsInJ1bm5lcnMiLCJicm93c2VyIiwic2FuZGJveC5odG1sIikpLnRvU3RyaW5nKCksYz0iX193YWxsYWJ5X18iLHA9ZSgiLi9maWxlQ2FjaGVNaWRkbGV3YXJlIiksZD1mdW5jdGlvbih0LG4pe3ZhciByPXRoaXM7aT1lKCJkZWJ1ZyIpKCJ3YWxsYWJ5OmJyb3dzZXJSdW5uZXIiKSxyLl9wcm9qZWN0PXQsci5fd29ya2VyUG9vbD1uLHIuX2Jhc2VEaXI9ci5fcHJvamVjdC5faW5zdHJ1bWVudGVkUm9vdCtvLnNlcCxyLl9pbml0aWFsaXplcj10LnNldHRpbmdzKCkuYm9vdHN0cmFwLHIuX3JlcG9ydFVuaGFuZGxlZFByb21pc2VzPSEhdC5zZXR0aW5ncygpLnJlcG9ydFVuaGFuZGxlZFByb21pc2VzLHIuX3NhbmRib3hIdG1sPXt9LHIuX3JlcG9ydDQwNEFzRXJyb3I9dC5zZXR0aW5ncygpLmVudi5yZXBvcnQ0MDRBc0Vycm9yLHIuX2xydUNhY2hlPXIuX3Byb2plY3QuX2xydUNhY2hlLHIuX3dhbGxhYnlGaWxlSWRQcmVmaXg9ci5fd29ya2VyUG9vbC53YWxsYWJ5RmlsZUlkUHJlZml4KCksci5fYXBwPWEoKSxyLl9hcHAudXNlKHMoe2ZpbHRlcjpmdW5jdGlvbihlKXtyZXR1cm5+ZS51cmwuaW5kZXhPZigiX19fX3dhbGxhYnktYnVuZGxlIil9fSkpLHIuX2FwcC51c2UoIi93YWxsYWJ5X3NhbmRib3g6aWQuaHRtbCIsZnVuY3Rpb24oZSx0KXt0LnNlbmQoci5fc2FuZGJveEh0bWxbZS5wYXJhbXMuaWRdKX0pLHQuc2V0dGluZ3MoKS50ZXN0RnJhbWV3b3JrLnBhdGgmJnIuX2FwcC51c2UoIi8iK2MrIi8iK3Quc2V0dGluZ3MoKS50ZXN0RnJhbWV3b3JrLnZlcnNpb24rIi9mcmFtZXdvcmsuanMiLHAuY3JlYXRlKG8uam9pbih0Ll9sb2NhbFJvb3QsdC5zZXR0aW5ncygpLnRlc3RGcmFtZXdvcmsucGF0aCkpKSxyLl9hcHAudXNlKCIvIitjKyIvdHJhY2VyLmpzIixwLmNyZWF0ZShvLmpvaW4oX19kaXJuYW1lLCJ0cmFjZXIuanMiKSkpLHIuX2FwcC51c2UoIi8iK2MscC5jcmVhdGUoby5qb2luKF9fZGlybmFtZSwicnVubmVycyIsImJyb3dzZXIiKSkpLHQuc2V0dGluZ3MoKS5taWRkbGV3YXJlKHIuX2FwcCxhKSxyLl9hcHAudXNlKHAuY3JlYXRlKHIuX2Jhc2VEaXIsci5fbHJ1Q2FjaGUsci5fcmVwb3J0NDA0QXNFcnJvcikpfTtkLnByb3RvdHlwZT17cHJlcGFyZVNhbmRib3g6ZnVuY3Rpb24oZSx0LG4pe3ZhciBvPXRoaXM7ZS5hbGxGaWxlc0hhc2g9Xy5yZWR1Y2UoZS5hbGxGaWxlcy5jb25jYXQoZS5hbGxUZXN0RmlsZXMpLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGVbdC5ub3JtYWxpemVkUmVsYXRpdmVQYXRoXT17dHM6dC50cyxpZDp0LnRtcCYmdC5vcmlnaW5hbElkP3Qub3JpZ2luYWxJZDp0LmlkfSxlfSx7fSk7dmFyIHI9ZS5hbGxGaWxlcy5jb25jYXQoZS5hbGxUZXN0RmlsZXMpLGE9ZS5maWxlc1RvTG9hZC5jb25jYXQoZS50ZXN0RmlsZXNUb0xvYWQpLHM9Xy5yZWR1Y2UoZS50ZXN0RmlsZXNUb0xvYWQsZnVuY3Rpb24oZSx0KXtyZXR1cm4gZVt0LmlkXT10LGV9LHt9KTtpKCJUb3RhbCBmaWxlcyB0byBsb2FkIGluIHNhbmRib3g6ICIrYS5sZW5ndGgpO3ZhciBwPW8uX3dvcmtlclBvb2wucmVjZWl2ZXJQb3J0KCk7by5fYW55SW5jbHVkZWRFc209ITEsby5fc2FuZGJveEh0bWxbbl09bC5yZXBsYWNlKCI8aW5qZWN0Lz4iLGZ1bmN0aW9uKCl7cmV0dXJuIF8ucmVkdWNlKHIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSsoXy5pc051bWJlcih0LmlkKT8iZmlsZSA9IHdpbmRvdy4kXyRjb3ZlcmFnZVsiK3QuaWQrIl09W107IGZvcihpPTAsIGxlbj0iK3QucmFuZ2VzTGVuZ3RoKyI7IGkgPCBsZW47IGkrKykgZmlsZVtpXSA9IHt9OyI6IiIpfSwiPHNjcmlwdD4oZnVuY3Rpb24oKSB7d2luZG93LiRfJHJlY2VpdmVyUG9ydCA9ICIrcCsnO3dpbmRvdy4kXyRzZXNzaW9uPSInK3QrJyI7d2luZG93LiRfJGJhc2VEaXI9JytKU09OLnN0cmluZ2lmeShvLl9iYXNlRGlyKSsiO3dpbmRvdy4kXyRpbml0aWFsU3BlY0lkPSIrMWU1KihuKzEpKyI7d2luZG93LiRfJHJlcG9ydFVuaGFubGVkUHJvbWlzZXM9IitvLl9yZXBvcnRVbmhhbmRsZWRQcm9taXNlcysiO3dpbmRvdy4kXyRjb3ZlcmFnZT1bXTsgdmFyIGZpbGUsIGksIGxlbjsiKSsid2luZG93LiRfJHNsb3c9IitvLl9wcm9qZWN0LnNldHRpbmdzKCkuc2xvd1Rlc3RUaHJlc2hvbGQrIjt3aW5kb3cuJF8kZXhwcmVzc2lvbnNUb0V2YWx1YXRlPSIrSlNPTi5zdHJpbmdpZnkoZS5leHByZXNzaW9uc1RvRXZhbHVhdGUpKyI7d2luZG93LiRfJGZpbGVzPSIrSlNPTi5zdHJpbmdpZnkoZS5hbGxGaWxlc0hhc2gpKyI7d2luZG93LiRfJHRlc3RzPSIrKGUudGVzdHM/SlNPTi5zdHJpbmdpZnkoZS50ZXN0cyk6Im51bGwiKSsiO3dpbmRvdy4kXyR0ZXN0RmlsZXM9IitKU09OLnN0cmluZ2lmeShfLmNoYWluKGUuYWxsVGVzdEZpbGVzKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIWUuc2hhZG93ZWR9KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue3BhdGg6dC5yZWxhdGl2ZVBhdGgsbG9hZGVkOnQuaW5jbHVkZSYmISFzW3QuaWRdLGlkOihlLmFsbEZpbGVzSGFzaFt0Lm5vcm1hbGl6ZWRSZWxhdGl2ZVBhdGhdfHx7fSkuaWR9fSkudmFsdWUoKSkrJzt9KSgpOzwvc2NyaXB0PjxzY3JpcHQgc3JjPSInK2MrJy90cmFjZXIuanMiPjwvc2NyaXB0PjxzY3JpcHQgc3JjPSInK2MrIi8iK2UuZnJhbWV3b3JrLnZlcnNpb24rJy9mcmFtZXdvcmsuanMiPjwvc2NyaXB0PjxzY3JpcHQgc3JjPSInK2MrIi8iK2UuZnJhbWV3b3JrLmNvbmZpZ3VyYXRvcisnL2NvbmZpZ3VyYXRvci5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9IicrYysiLyIrZS5mcmFtZXdvcmsucmVwb3J0ZXIrJy9yZXBvcnRlci5qcyI+PC9zY3JpcHQ+JytfLnJlZHVjZShhLGZ1bmN0aW9uKGUsdCl7by5fYW55SW5jbHVkZWRFc209by5fYW55SW5jbHVkZWRFc218fHQuZXNtO3ZhciBuPXQudG1wLHI9dC50cysobj90Lm9yaWdpbmFsSWQ/by5fd2FsbGFieUZpbGVJZFByZWZpeCt0Lm9yaWdpbmFsSWQ6IiI6by5fd2FsbGFieUZpbGVJZFByZWZpeCt0LmlkKTtzd2l0Y2godC50eXBlKXtjYXNlImpzIjpjYXNlIm1qcyI6Y2FzZSJqc3giOmNhc2UiZXM2IjpjYXNlImVzNyI6cmV0dXJuIGUrIjxzY3JpcHQgIisodC5lc20/J3R5cGU9Im1vZHVsZSInOiIiKSsnIHNyYz0iJyt0Lm5vcm1hbGl6ZWRSZWxhdGl2ZVBhdGgrIj8iK3IrJyI+PC9zY3JpcHQ+JztjYXNlImh0bWwiOmNhc2UiaHRtIjpyZXR1cm4gZSsnPGxpbmsgaHJlZj0iJyt0Lm5vcm1hbGl6ZWRSZWxhdGl2ZVBhdGgrIj8iK3QudHMrJyIgcmVsPSJpbXBvcnQiPic7Y2FzZSJjc3MiOnJldHVybiBlKyc8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSInK3Qubm9ybWFsaXplZFJlbGF0aXZlUGF0aCsiPyIrcisnIj48L2xpbms+JztkZWZhdWx0OnJldHVybiBpKCJGaWxlIHR5cGUgIit0LnR5cGUrIiBjYW4gbm90IGJlIGluY2x1ZGVkIHZpYSBzY3JpcHQvbGluayB0YWcgaW50byBzYW5kYm94IiksZX19LCIiKSsoby5faW5pdGlhbGl6ZXI/IjxzY3JpcHQ+KCIrby5faW5pdGlhbGl6ZXIrIikod2luZG93LndhbGxhYnkpOzwvc2NyaXB0PiI6IiIpKyI8c2NyaXB0ICIrKG8uX2FueUluY2x1ZGVkRXNtPyd0eXBlPSJtb2R1bGUiJzoiIikrJyBzcmM9IicrYysiLyIrZS5mcmFtZXdvcmsuc3RhcnRlcisnL3N0YXJ0ZXIuanMiPjwvc2NyaXB0Pid9KTt2YXIgZD1vLnNhbmRib3hSb290VXJsKCkrIndhbGxhYnlfc2FuZGJveCIrbisiLmh0bWwiO3JldHVybiBpKCJTYW5kYm94IGlzIGdlbmVyYXRlZCBbJXNdOiAlcyIsby5zYW5kYm94TmFtZShuLHQpLGQpLFEud2hlbihkKX0sZG9lc1NhbmRib3hDb250YWluRVNNb2R1bGVzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FueUluY2x1ZGVkRXNtfSxzYW5kYm94Um9vdFVybDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zYW5kYm94Um9vdFVybD90aGlzLl9zYW5kYm94Um9vdFVybDoodGhpcy5fc2FuZGJveFJvb3RVcmw9Imh0dHA6Ly9sb2NhbGhvc3Q6Iit0aGlzLl93b3JrZXJQb29sLnJlY2VpdmVyUG9ydCgpKyIvIix0aGlzLl9zYW5kYm94Um9vdFVybCl9LHdlYkFwcDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hcHB9LHNhbmRib3hOYW1lOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIndvcmtlciAjIitlKyIsIHNlc3Npb24gIyIrdH19LHQuZXhwb3J0cz1kfSx7Ii4vZmlsZUNhY2hlTWlkZGxld2FyZSI6MjIsY29tcHJlc3Npb246dm9pZCAwLGRlYnVnOnZvaWQgMCxleHByZXNzOnZvaWQgMCwiZ3JhY2VmdWwtZnMiOnZvaWQgMCxwYXRoOnZvaWQgMH1dLDI6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaSxvPXRoaXMmJnRoaXMuX19hd2FpdGVyfHxmdW5jdGlvbihlLHQsbixpKXtyZXR1cm4gbmV3KG58fChuPVByb21pc2UpKShmdW5jdGlvbihvLHIpe2Z1bmN0aW9uIGEoZSl7dHJ5e2woaS5uZXh0KGUpKX1jYXRjaCh0KXtyKHQpfX1mdW5jdGlvbiBzKGUpe3RyeXtsKGlbInRocm93Il0oZSkpfWNhdGNoKHQpe3IodCl9fWZ1bmN0aW9uIGwoZSl7ZS5kb25lP28oZS52YWx1ZSk6bmV3IG4oZnVuY3Rpb24odCl7dChlLnZhbHVlKX0pLnRoZW4oYSxzKX1sKChpPWkuYXBwbHkoZSx0fHxbXSkpLm5leHQoKSl9KX0scj10aGlzJiZ0aGlzLl9fZ2VuZXJhdG9yfHxmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIG4oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBpKFtlLHRdKX19ZnVuY3Rpb24gaShuKXtpZihvKXRocm93IG5ldyBUeXBlRXJyb3IoIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy4iKTtmb3IoO2w7KXRyeXtpZihvPTEsciYmKGE9clsyJm5bMF0/InJldHVybiI6blswXT8idGhyb3ciOiJuZXh0Il0pJiYhKGE9YS5jYWxsKHIsblsxXSkpLmRvbmUpcmV0dXJuIGE7c3dpdGNoKHI9MCxhJiYobj1bMCxhLnZhbHVlXSksblswXSl7Y2FzZSAwOmNhc2UgMTphPW47YnJlYWs7Y2FzZSA0OnJldHVybiBsLmxhYmVsKysse3ZhbHVlOm5bMV0sZG9uZTohMX07Y2FzZSA1OmwubGFiZWwrKyxyPW5bMV0sbj1bMF07Y29udGludWU7Y2FzZSA3Om49bC5vcHMucG9wKCksbC50cnlzLnBvcCgpO2NvbnRpbnVlO2RlZmF1bHQ6aWYoYT1sLnRyeXMsIShhPWEubGVuZ3RoPjAmJmFbYS5sZW5ndGgtMV0pJiYoNj09PW5bMF18fDI9PT1uWzBdKSl7bD0wO2NvbnRpbnVlfWlmKDM9PT1uWzBdJiYoIWF8fG5bMV0+YVswXSYmblsxXTxhWzNdKSl7bC5sYWJlbD1uWzFdO2JyZWFrfWlmKDY9PT1uWzBdJiZsLmxhYmVsPGFbMV0pe2wubGFiZWw9YVsxXSxhPW47YnJlYWt9aWYoYSYmbC5sYWJlbDxhWzJdKXtsLmxhYmVsPWFbMl0sbC5vcHMucHVzaChuKTticmVha31hWzJdJiZsLm9wcy5wb3AoKSxsLnRyeXMucG9wKCk7Y29udGludWV9bj10LmNhbGwoZSxsKX1jYXRjaChpKXtuPVs2LGldLHI9MH1maW5hbGx5e289YT0wfWlmKDUmblswXSl0aHJvdyBuWzFdO3JldHVybnt2YWx1ZTpuWzBdP25bMV06dm9pZCAwLGRvbmU6ITB9fXZhciBvLHIsYSxzLGw9e2xhYmVsOjAsc2VudDpmdW5jdGlvbigpe2lmKDEmYVswXSl0aHJvdyBhWzFdO3JldHVybiBhWzFdfSx0cnlzOltdLG9wczpbXX07cmV0dXJuIHM9e25leHQ6bigwKSwidGhyb3ciOm4oMSksInJldHVybiI6bigyKX0sImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmKHNbU3ltYm9sLml0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSksc30sYT1lKCJjaHJvbWUtbGF1bmNoZXIiKSxzPWUoImNocm9tZS1yZW1vdGUtaW50ZXJmYWNlIiksbD1lKCIuL3J1bldvcmtlclBvb2wiKSxjPWUoIi4vYnJvd3NlckVudmlyb25tZW50IikscD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7aT1lKCJkZWJ1ZyIpKCJ3YWxsYWJ5OmNocm9tZVJ1bm5lciIpLHRoaXMuX3NjcmVlblNob3RSZWFkeT1Qcm9taXNlLnJlc29sdmUoKSx0aGlzLl9wcm9qZWN0PXQ7dmFyIG49dC5zZXR0aW5ncygpLmVudjt0aGlzLl9wYXRoPW4ucnVubmVyLG4ucGFyYW1zJiZuLnBhcmFtcy5ydW5uZXImJih0aGlzLl9mbGFncz1uLnBhcmFtcy5ydW5uZXIuc3BsaXQoIiAiKSksdGhpcy5fY2hyb21lUHJvbWlzZT10aGlzLl9sYXVuY2hDaHJvbWVJbnN0YW5jZSgpLHRoaXMuX3dvcmtlclBvb2w9bmV3IGwodGhpcy5fcHJvamVjdCx7Y3JlYXRlOl8uYmluZCh0aGlzLl9jcmVhdGUsdGhpcykscmVjeWNsZTpfLmJpbmQodGhpcy5fcmVjeWNsZSx0aGlzKSxoZWFsdGh5OmZ1bmN0aW9uKCl7cmV0dXJuITB9LHByZXBhcmU6Xy5iaW5kKHRoaXMuX3ByZXBhcmVUYWIsdGhpcyl9KSx0aGlzLl9icm93c2VyRW52aXJvbm1lbnQ9bmV3IGModCx0aGlzLl93b3JrZXJQb29sKX1yZXR1cm4gdC5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl93b3JrZXJQb29sLnJ1bihlKX0sdC5wcm90b3R5cGUuY2FuY2VsPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl93b3JrZXJQb29sLmNhbmNlbChlKX0sdC5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gbyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gcih0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5fd29ya2VyUG9vbC5zdGFydCh0aGlzLl9icm93c2VyRW52aXJvbm1lbnQud2ViQXBwKCkpXTtjYXNlIDE6cmV0dXJuIGU9dC5zZW50KCksdGhpcy5fd29ya2VyUG9vbC5zZXRGaWxlUm9vdCh0aGlzLl9icm93c2VyRW52aXJvbm1lbnQuc2FuZGJveFJvb3RVcmwoKSksWzIsZV19fSl9KX0sdC5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbigpe2lmKHRoaXMuX3dvcmtlclBvb2wuc3RvcCgpLHRoaXMuX2Nocm9tZSl0cnl7cHJvY2Vzcy5raWxsKHRoaXMuX2Nocm9tZS5waWQpfWNhdGNoKGUpe319LHQucHJvdG90eXBlLl9jcmVhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLGZ1bmN0aW9uKG4pe3N3aXRjaChuLmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5fY2hyb21lUHJvbWlzZV07Y2FzZSAxOnJldHVybiBuLnNlbnQoKSx0KHt3b3JrZXJJZDplfSksWzJdfX0pfSl9LHQucHJvdG90eXBlLl9yZWN5Y2xlPWZ1bmN0aW9uKGUpe3RoaXMuX2Nsb3NlVGFiKGUpfSx0LnByb3RvdHlwZS5fcHJlcGFyZVRhYj1mdW5jdGlvbihlLHQpe3JldHVybiBvKHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLG8sYSxzLGw7cmV0dXJuIHIodGhpcyxmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOnJldHVybiBuPXRoaXMsbz1fLnJhbmRvbUlkKCksYT10aGlzLl9icm93c2VyRW52aXJvbm1lbnQuc2FuZGJveE5hbWUodCxvKSxpKCJTdGFydGluZyBzYW5kYm94IFslc10iLGEpLFs0LHRoaXMuX3dvcmtlclBvb2wuZ2V0V29ya2VyKHQpXTtjYXNlIDE6cmV0dXJuIHM9ci5zZW50KCksdGhpcy5fY2hlY2tDYW5jZWxsZWQoKSxpKCJQcmVwYXJpbmcgc2FuZGJveCBbJXNdIixhKSxbNCx0aGlzLl9icm93c2VyRW52aXJvbm1lbnQucHJlcGFyZVNhbmRib3goZSxvLHQpXTtjYXNlIDI6cmV0dXJuIGw9ci5zZW50KCksdGhpcy5fY2hlY2tDYW5jZWxsZWQoKSxpKCJQcmVwYXJlZCBzYW5kYm94IFslc10iLGEpLFsyLHtuYW1lOmEsc2Vzc2lvbklkOm8sd29ya2VySWQ6dCxpbnN0YW5jZTp7cmVzdW1lOmZ1bmN0aW9uKCl7bi5fZXZhbHVhdGVPblRhYihzLmNsaWVudCxmdW5jdGlvbigpeyRfJHRyYWNlci5yZXN1bWUoKX0pfSxwaW5nOmZ1bmN0aW9uKGUpe24uX2V2YWx1YXRlT25UYWIocy5jbGllbnQsZnVuY3Rpb24oKXt9LGUpfSxjbG9zZTpmdW5jdGlvbigpe24uX2Nsb3NlVGFiKHMpfSxjbG9zaW5nOmZ1bmN0aW9uKCl7fSxzdGFydDpmdW5jdGlvbihlKXtuLl9vcGVuVGFiKHMsbCxmdW5jdGlvbih0KXtlKHQuc3RhdHVzKSYmbi5fZXZhbHVhdGVPblRhYihzLmNsaWVudCxmdW5jdGlvbigpeyRfJHRyYWNlci5zdGFydCgpfSl9KX19fV19fSl9KX0sdC5wcm90b3R5cGUuX2NoZWNrQ2FuY2VsbGVkPWZ1bmN0aW9uKCl7aWYodGhpcy5fd29ya2VyUG9vbC5jYW5jZWxsZWQoKSl0aHJvd3tydW5DYW5jZWxsZWQ6ITB9fSx0LnByb3RvdHlwZS5fY29ubmVjdGlvbk9wdGlvbnM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPXt9KSxfLmV4dGVuZCh7cG9ydDp0aGlzLl9jaHJvbWUucG9ydCxob3N0OiIxMjcuMC4wLjEifSxlKX0sdC5wcm90b3R5cGUuX2V2YWx1YXRlT25UYWI9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj1fLm5vb3ApLG8odGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG87cmV0dXJuIHIodGhpcyxmdW5jdGlvbihyKXtzd2l0Y2goci5sYWJlbCl7Y2FzZSAwOnJldHVybiByLnRyeXMucHVzaChbMCwyLCwzXSksZS5SdW50aW1lP1s0LGUuUnVudGltZS5ldmFsdWF0ZSh7ZXhwcmVzc2lvbjoiKCIrdC50b1N0cmluZygpKyIpKCkifSldOlsyXTtjYXNlIDE6cmV0dXJuIHIuc2VudCgpLG4oKSxbMywzXTtjYXNlIDI6cmV0dXJuIG89ci5zZW50KCksaSgiRmFpbGVkIHRvIGV2YWx1YXRlIGNvZGUgb24gQ2hyb21lIFRhYjogIitvLm1lc3NhZ2UpLFszLDNdO2Nhc2UgMzpyZXR1cm5bMl19fSl9KX0sdC5wcm90b3R5cGUuX29wZW5UYWI9ZnVuY3Rpb24oZSx0LG4pe3JldHVybiB2b2lkIDA9PT1uJiYobj1fLm5vb3ApLG8odGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGksbyxhLGwsYyxwLGQsdSxoLG0sXz10aGlzO3JldHVybiByKHRoaXMsZnVuY3Rpb24ocil7c3dpdGNoKHIubGFiZWwpe2Nhc2UgMDppZihyLnRyeXMucHVzaChbMCwxOCwsMTldKSwhdGhpcy5fY2hyb21lKXRocm93IG5ldyBFcnJvcigiQ2hyb21lIGlzIG5vdCBydW5uaW5nIik7cmV0dXJuWzQscy5OZXcodGhpcy5fY29ubmVjdGlvbk9wdGlvbnMoe3VybDp0fSkpXTtjYXNlIDE6cmV0dXJuIGk9ci5zZW50KCksZS5jbGllbnQ9e3RhcmdldDp7aWQ6aS5pZH19LHRoaXMuX2NoZWNrQ2FuY2VsbGVkKCksWzQscyh7dGFiOml9KV07Y2FzZSAyOm89ci5zZW50KCksZS5jbGllbnQ9byx0aGlzLl9jaGVja0NhbmNlbGxlZCgpLGE9by5QYWdlLGw9by5OZXR3b3JrLHIubGFiZWw9MztjYXNlIDM6cmV0dXJuIHIudHJ5cy5wdXNoKFszLDE2LCwxN10pLGM9ISF0aGlzLl9icm93c2VyRW52aXJvbm1lbnQuZG9lc1NhbmRib3hDb250YWluRVNNb2R1bGVzKCkscD1bYS5lbmFibGUoKV0sYyYmcC5wdXNoKGwuZW5hYmxlKCkpLFs0LFByb21pc2UuYWxsKHApXTtjYXNlIDQ6aWYoci5zZW50KCksdGhpcy5fY2hlY2tDYW5jZWxsZWQoKSwhYylyZXR1cm5bMywxM107bC5yZXF1ZXN0SW50ZXJjZXB0ZWQoZnVuY3Rpb24oZSl7dmFyIHQ9ZS5pbnRlcmNlcHRpb25JZCxuPWUucmVxdWVzdDtyZXR1cm4gbC5jb250aW51ZUludGVyY2VwdGVkUmVxdWVzdCh7aW50ZXJjZXB0aW9uSWQ6dCx1cmw6Xy5fdXBkYXRlVHJhY2tlZEZpbGVVcmxJZlJlcXVpcmVkKG4udXJsKX0pWyJjYXRjaCJdKGZ1bmN0aW9uKGUpe30pfSksci5sYWJlbD01O2Nhc2UgNTpyZXR1cm4gci50cnlzLnB1c2goWzUsNywsMTJdKSxbNCxvLnNlbmQoIk5ldHdvcmsuc2V0UmVxdWVzdEludGVyY2VwdGlvbiIse3BhdHRlcm5zOlt7dXJsUGF0dGVybjoiKiJ9XX0pXTtjYXNlIDY6cmV0dXJuIHIuc2VudCgpLFszLDEyXTtjYXNlIDc6ZD1yLnNlbnQoKSxyLmxhYmVsPTg7Y2FzZSA4OnJldHVybiByLnRyeXMucHVzaChbOCwxMCwsMTFdKSxbNCxsLnNldFJlcXVlc3RJbnRlcmNlcHRpb25FbmFibGVkKHtlbmFibGVkOiEwfSldO2Nhc2UgOTpyZXR1cm4gci5zZW50KCksWzMsMTFdO2Nhc2UgMTA6cmV0dXJuIHU9ci5zZW50KCksY29uc29sZS53YXJuKCJVbmFibGUgdG8gY29uZmlndXJlIG5ldHdvcmsgcmVxdWVzdCBpbnRlcmNlcHRpb24gaW4gQ2hyb21lIiksWzMsMTFdO2Nhc2UgMTE6cmV0dXJuWzMsMTJdO2Nhc2UgMTI6dGhpcy5fY2hlY2tDYW5jZWxsZWQoKSxyLmxhYmVsPTEzO2Nhc2UgMTM6cmV0dXJuWzQsYS5uYXZpZ2F0ZSh7dXJsOnR9KV07Y2FzZSAxNDpyZXR1cm4gci5zZW50KCksdGhpcy5fY2hlY2tDYW5jZWxsZWQoKSxbNCxhLmxvYWRFdmVudEZpcmVkKCldO2Nhc2UgMTU6cmV0dXJuIHIuc2VudCgpLHRoaXMuX2NoZWNrQ2FuY2VsbGVkKCksbih7c3RhdHVzOiJzdWNjZXNzIn0pLFszLDE3XTtjYXNlIDE2OnJldHVybiBoPXIuc2VudCgpLHRoaXMuX2Nsb3NlVGFiKGUpLG4oe3N0YXR1czoiZmFpbGVkOiAiKyhoLm1lc3NhZ2V8fCJ1bmtub3duIil9KSxbMywxN107Y2FzZSAxNzpyZXR1cm5bMywxOV07Y2FzZSAxODpyZXR1cm4gbT1yLnNlbnQoKSxuKHtzdGF0dXM6ImZhaWxlZDogIisobS5tZXNzYWdlfHwidW5rbm93biIpfSksWzMsMTldO2Nhc2UgMTk6cmV0dXJuWzJdfX0pfSl9LHQucHJvdG90eXBlLl9jbG9zZVRhYj1mdW5jdGlvbihlKXtyZXR1cm4gbyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxuO3JldHVybiByKHRoaXMsZnVuY3Rpb24obyl7c3dpdGNoKG8ubGFiZWwpe2Nhc2UgMDppZighZXx8IWUuY2xpZW50KXJldHVyblszLDVdO3Q9ZS5jbGllbnQsZGVsZXRlIGUuY2xpZW50LG8ubGFiZWw9MTtjYXNlIDE6cmV0dXJuIG8udHJ5cy5wdXNoKFsxLDMsLDRdKSxbNCxzLkNsb3NlKHRoaXMuX2Nvbm5lY3Rpb25PcHRpb25zKHtpZDp0LnRhcmdldC5pZH0pKV07Y2FzZSAyOnJldHVybiBvLnNlbnQoKSxbMyw0XTtjYXNlIDM6cmV0dXJuIG49by5zZW50KCksaSgiRmFpbGVkIHRvIGNsb3NlIENocm9tZSBUYWI6ICIrbi5tZXNzYWdlKSxbMyw0XTtjYXNlIDQ6dHJ5e3QuY2xvc2UoKX1jYXRjaChyKXtpKCJGYWlsZWQgdG8gY2xvc2UgQ2hyb21lIFRhYiBjbGllbnQ6ICIrci5tZXNzYWdlKX1vLmxhYmVsPTU7Y2FzZSA1OnJldHVyblsyXX19KX0pfSx0LnByb3RvdHlwZS5fbGF1bmNoQ2hyb21lSW5zdGFuY2U9ZnVuY3Rpb24oKXtyZXR1cm4gbyh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgdCxuLGksbztyZXR1cm4gcih0aGlzLGZ1bmN0aW9uKHIpe3N3aXRjaChyLmxhYmVsKXtjYXNlIDA6cmV0dXJuIHIudHJ5cy5wdXNoKFswLDIsLDNdKSx0PVsiLS1oZWFkbGVzcyIsIi0tZGlzYWJsZS1ncHUiLCItLWRldGVybWluaXN0aWMtZmV0Y2giXSxuPWUoIm9zIiksIkxpbnV4Ij09PW4udHlwZSgpJiYodC5wdXNoKCItLW5vLXNhbmRib3giKSx0LnB1c2goIi0tZGlzYWJsZS1zZXR1aWQtc2FuZGJveCIpKSxpPXRoaXMsWzQsYS5sYXVuY2goe2Nocm9tZUZsYWdzOnRoaXMuX2ZsYWdzfHx0LGNocm9tZVBhdGg6dGhpcy5fcGF0aCxsb2dMZXZlbDoic2lsZW50In0pXTtjYXNlIDE6cmV0dXJuIGkuX2Nocm9tZT1yLnNlbnQoKSxbMywzXTtjYXNlIDI6cmV0dXJuIG89ci5zZW50KCksdGhpcy5faGFuZGxlSG9zdEVycm9yKG8pLFszLDNdO2Nhc2UgMzpyZXR1cm5bMl19fSl9KX0sdC5wcm90b3R5cGUuX3VwZGF0ZVRyYWNrZWRGaWxlVXJsSWZSZXF1aXJlZD1mdW5jdGlvbihlKXtpZighZXx8fmUuaW5kZXhPZigid2FsbGFieUZpbGVJZCIpfHx+ZS5pbmRleE9mKCJfX3dhbGxhYnlfXyIpKXJldHVybiBlO3ZhciB0PWU7aWYodD10LnJlcGxhY2UodGhpcy5fYnJvd3NlckVudmlyb25tZW50LnNhbmRib3hSb290VXJsKCksIiIpLHQ9PT1lKXJldHVybiBlO3ZhciBuPXQubGFzdEluZGV4T2YoIj8iKTtuPj0wJiYodD10LnN1YnN0cmluZygwLG4pKTt2YXIgaT10JiZ0aGlzLl9wcm9qZWN0LmdldEZpbGVNZXRhZGF0YUJ5UGF0aCh0KTtyZXR1cm4gaT9lKyh+bj8iJiI6Ij8iKStpLmNoYW5nZVRzKyImd2FsbGFieUZpbGVJZD0iK2kuaWQ6ZX0sdC5wcm90b3R5cGUuX2hhbmRsZUhvc3RFcnJvcj1mdW5jdGlvbihlKXtlPWV8fHt9LHRoaXMuX3Byb2plY3QuX2NsZWFuU3RhY2soZSk7dmFyIHQ9IkNocm9tZSBydW5uZXIgZXJyb3I6ICIrKGUubWVzc2FnZXx8InVua25vd24iKSxuPWUuc3RhY2t8fHQ7Y29uc29sZS5lcnJvcihuKSx0aGlzLl9wcm9qZWN0Ll9lbWl0VGVzdFJ1bkVycm9yKHQpfSx0fSgpO3QuZXhwb3J0cz1wfSx7Ii4vYnJvd3NlckVudmlyb25tZW50IjoxLCIuL3J1bldvcmtlclBvb2wiOjI2LCJjaHJvbWUtbGF1bmNoZXIiOnZvaWQgMCwiY2hyb21lLXJlbW90ZS1pbnRlcmZhY2UiOnZvaWQgMCxkZWJ1Zzp2b2lkIDAsb3M6dm9pZCAwfV0sMzpbZnVuY3Rpb24oZSx0LG4pe3ZhciBpLG89ZSgicGF0aCIpLHI9ZSgiY2hpbGRfcHJvY2VzcyIpLGE9ZSgiLi9ydW5Xb3JrZXJQb29sIikscz1lKCIuL2Jyb3dzZXJFbnZpcm9ubWVudCIpLGw9MCxjPWZ1bmN0aW9uKHQpe3ZhciBuPXRoaXM7aT1lKCJkZWJ1ZyIpKCJ3YWxsYWJ5OmVsZWN0cm9uUnVubmVyIiksbi5fcHJvamVjdD10LG4uX3NjcmVlblNob3RSZWFkeT1RLndoZW4oITApLG4uX3BhcmFtcz10LnNldHRpbmdzKCkuZW52LnBhcmFtcyxuLl9ydW5uZXI9dC5zZXR0aW5ncygpLmVudi5ydW5uZXIsbi5fZW52T3B0aW9ucz10LnNldHRpbmdzKCkuZW52Lm9wdGlvbnMsbi5fY2xlYXJNZW1vcnlDYWNoZT10LnNldHRpbmdzKCkuZW52LmNsZWFyTWVtb3J5Q2FjaGUsbi5faG9zdD12b2lkIDAsbi5fY2FsbGJhY2tzPU9iamVjdC5jcmVhdGUobnVsbCksbi5faG9zdFByb21pc2U9US5wcm9taXNlKGZ1bmN0aW9uKGUsdCl7dHJ5e3ZhciBpPV8uZXh0ZW5kKHt9LHByb2Nlc3MuZW52LG4uX3BhcmFtcy5lbnY/Xy5yZWR1Y2Uobi5fcGFyYW1zLmVudi5zcGxpdCgiOyIpLGZ1bmN0aW9uKGUsdCl7dmFyIG49dC5zcGxpdCgiPSIpO3JldHVybiBlW25bMF1dPW5bMV0sZX0se30pOnt9KTtkZWxldGUgaS5BVE9NX1NIRUxMX0lOVEVSTkFMX1JVTl9BU19OT0RFLGRlbGV0ZSBpLkVMRUNUUk9OX1JVTl9BU19OT0RFLGkuRUxFQ1RST05fRElTQUJMRV9TRUNVUklUWV9XQVJOSU5HUz0hMCxuLl9ob3N0PXIuZm9yayhvLmpvaW4oX19kaXJuYW1lLCJydW5uZXJzIiwiYnJvd3NlciIsImVsZWN0cm9uSG9zdC5qcyIpLFtdLHtleGVjUGF0aDpuLl9ydW5uZXIsZW52OmksZXhlY0FyZ3Y6bi5fcGFyYW1zLnJ1bm5lcj9uLl9wYXJhbXMucnVubmVyLnNwbGl0KCIgIik6W119KSxuLl9ob3N0Lm9uKCJlcnJvciIsZnVuY3Rpb24oZSl7bi5faGFuZGxlSG9zdEVycm9yKGUpfSksbi5faG9zdC5vbigibWVzc2FnZSIsZnVuY3Rpb24odCl7dHJ5e3QuaWQ/bi5fcmVzcG9uc2VXaXRoQ29ycmVsYXRpb25JZCh0KToicmVhZHkiPT09dC50eXBlP2Uobi5faG9zdCk6ImVycm9yIj09PXQudHlwZSYmbi5faGFuZGxlSG9zdEVycm9yKHQuZXJyb3IpfWNhdGNoKGkpe24uX2hhbmRsZUhvc3RFcnJvcihpKX19KX1jYXRjaChhKXt0KGEpfX0pWyJjYXRjaCJdKGZ1bmN0aW9uKGUpe24uX2hhbmRsZUhvc3RFcnJvcihlKX0pLG4uX3dvcmtlclBvb2w9bmV3IGEobi5fcHJvamVjdCx7Y3JlYXRlOl8uYmluZChuLl9jcmVhdGUsbikscmVjeWNsZTpfLmJpbmQobi5fcmVjeWNsZSxuKSxoZWFsdGh5OmZ1bmN0aW9uKCl7cmV0dXJuITB9LHByZXBhcmU6Xy5iaW5kKG4uX3ByZXBhcmUsbil9KSxuLl9icm93c2VyRW52aXJvbm1lbnQ9bmV3IHModCxuLl93b3JrZXJQb29sKX07Yy5wcm90b3R5cGU9e3J1bjpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiB0Ll93b3JrZXJQb29sLnJ1bihlKX0sX2hhbmRsZUhvc3RFcnJvcjpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2U9ZXx8e30sdC5fcHJvamVjdC5fY2xlYW5TdGFjayhlKTt2YXIgbj0iRWxlY3Ryb24gcnVubmVyIGVycm9yOiAiKyhlLm1lc3NhZ2V8fCJ1bmtub3duIiksaT1lLnN0YWNrfHxuO2NvbnNvbGUuZXJyb3IoaSksdC5fcHJvamVjdC5fZW1pdFRlc3RSdW5FcnJvcihuKX0sX2NyZWF0ZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7bi5faG9zdFByb21pc2UudGhlbihmdW5jdGlvbigpe3Qoe3BhZ2VJZDplfSl9KX0sX3JlY3ljbGU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9ob3N0JiZ0Ll9ob3N0LnNlbmQoe3R5cGU6ImNsb3NlUGFnZSIscGFnZUlkOmUucGFnZUlkfSl9LF9ldmFsdWF0ZU9uUGFnZTpmdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxvPXt0eXBlOiJldmFsdWF0ZU9uUGFnZSIscGFnZUlkOmUsYWN0aW9uOiIoIit0LnRvU3RyaW5nKCkrIikoKSJ9O2kuX3JlcXVlc3RXaXRoQ29ycmVsYXRpb25JZChvLG58fF8ubm9vcCl9LF9vcGVuUGFnZTpmdW5jdGlvbihlLHQsbixpKXt2YXIgbz10aGlzLHI9e3R5cGU6Im9wZW5QYWdlIixwYWdlSWQ6ZSx1cmw6dCxvcHRpb25zOm59O28uX3JlcXVlc3RXaXRoQ29ycmVsYXRpb25JZChyLGl8fF8ubm9vcCl9LF9jbG9zZVBhZ2U6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9ob3N0LnNlbmQoe3R5cGU6ImNsb3NlUGFnZSIscGFnZUlkOmV9KX0sX2NhcHR1cmVQYWdlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxpPVEuZGVmZXIoKTt0cnl7bi5fcmVxdWVzdFdpdGhDb3JyZWxhdGlvbklkKHt0eXBlOiJjYXB0dXJlUGFnZSIsZmlsZTp0LHBhZ2VJZDplfSxmdW5jdGlvbigpe2kucmVzb2x2ZSgpfSksbi5fc2NyZWVuU2hvdFJlYWR5PWkucHJvbWlzZX1jYXRjaChvKXtpLnJlamVjdChuZXcgRXJyb3IoIkZhaWxlZCB0byByZW5kZXIgdGVzdCBydW4gc2NyZWVuIHNob3QiKSksY29uc29sZS5lcnJvcigiRmFpbGVkIHRvIHJlbmRlciB0ZXN0IHJ1biBzY3JlZW4gc2hvdCIsby5tZXNzYWdlKX19LF9wcmVwYXJlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxvPV8ucmFuZG9tSWQoKSxyPW4uX2Jyb3dzZXJFbnZpcm9ubWVudC5zYW5kYm94TmFtZSh0LG8pO3JldHVybiBpKCJTdGFydGluZyBzYW5kYm94IFslc10iLHIpLG4uX3dvcmtlclBvb2wuZ2V0V29ya2VyKHQpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gbi5fd29ya2VyUG9vbC5jYW5jZWxsZWQoKT9RLnJlamVjdCh7cnVuQ2FuY2VsbGVkOiEwfSk6KGkoIlByZXBhcmluZyBzYW5kYm94IFslc10iLHIpLG4uX2Jyb3dzZXJFbnZpcm9ubWVudC5wcmVwYXJlU2FuZGJveChlLG8sdCkpfSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gbi5fd29ya2VyUG9vbC5jYW5jZWxsZWQoKT9RLnJlamVjdCh7cnVuQ2FuY2VsbGVkOiEwfSk6KGkoIlByZXBhcmVkIHNhbmRib3ggWyVzXSIsciksUS53aGVuKHtpbnN0YW5jZTp7cmVzdW1lOmZ1bmN0aW9uKCl7bi5fZXZhbHVhdGVPblBhZ2UodCxmdW5jdGlvbigpeyRfJHRyYWNlci5yZXN1bWUoKX0pfSxwaW5nOmZ1bmN0aW9uKGUpe24uX2V2YWx1YXRlT25QYWdlKHQsZnVuY3Rpb24oKXt9LGUpfSxjbG9zZTpmdW5jdGlvbigpe24uX2Nsb3NlUGFnZSh0KX0sY2xvc2luZzpmdW5jdGlvbigpe24uX3NjcmVlblNob3RSZWFkeT1RLndoZW4oKX0sc3RhcnQ6ZnVuY3Rpb24oaSl7bi5fb3BlblBhZ2UodCxlLG4uX2Vudk9wdGlvbnMsZnVuY3Rpb24oZSl7aShlLnN0YXR1cykmJm4uX2V2YWx1YXRlT25QYWdlKHQsZnVuY3Rpb24oKXskXyR0cmFjZXIuc3RhcnQoKX0pfSl9fSxuYW1lOnIsc2Vzc2lvbklkOm8sd29ya2VySWQ6dH0pKX0pfSxjYW5jZWw6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gdC5fd29ya2VyUG9vbC5jYW5jZWwoZSl9LHN0YXJ0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gZS5fd29ya2VyUG9vbC5zdGFydChlLl9icm93c2VyRW52aXJvbm1lbnQud2ViQXBwKCkpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGUuX3dvcmtlclBvb2wuc2V0RmlsZVJvb3QoZS5fYnJvd3NlckVudmlyb25tZW50LnNhbmRib3hSb290VXJsKCkpLFEud2hlbih0KX0pfSxzdG9wOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9ob3N0JiYoZS5faG9zdC5zZW5kKHt0eXBlOiJzdG9wIn0pLGUuX2hvc3QuZGlzY29ubmVjdCgpLGRlbGV0ZSBlLl9jYWxsYmFja3MsZGVsZXRlIGUuX2hvc3QpLGUuX3dvcmtlclBvb2wuc3RvcCgpfSxfcmVxdWVzdFdpdGhDb3JyZWxhdGlvbklkOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxpPSsrbCxvPW4uX2NhbGxiYWNrc1tpXT17ZG9uZTp0fTtlLmlkPWksbi5faG9zdC5zZW5kKGUpLG8udGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZGVsZXRlIG4uX2NhbGxiYWNrc1tpXX0sMTJlNSl9LF9yZXNwb25zZVdpdGhDb3JyZWxhdGlvbklkOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2NhbGxiYWNrc1tlLmlkXTtkZWxldGUgdGhpcy5fY2FsbGJhY2tzW2UuaWRdLHQmJihjbGVhclRpbWVvdXQodC50aW1lb3V0KSx0LmRvbmUoZSkpfX0sdC5leHBvcnRzPWN9LHsiLi9icm93c2VyRW52aXJvbm1lbnQiOjEsIi4vcnVuV29ya2VyUG9vbCI6MjYsY2hpbGRfcHJvY2Vzczp2b2lkIDAsZGVidWc6dm9pZCAwLHBhdGg6dm9pZCAwfV0sNDpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1nbG9iYWwuRGF0ZTtpZigiZnVuY3Rpb24gRGF0ZSgpIHsgW25hdGl2ZSBjb2RlXSB9IiE9PWkudG9TdHJpbmcoKXx8ImZ1bmN0aW9uIHRvU3RyaW5nKCkgeyBbbmF0aXZlIGNvZGVdIH0iIT09aS50b1N0cmluZy50b1N0cmluZygpKXJldHVybiB2b2lkKHQuZXhwb3J0cz17Y3JlYXRlOmZ1bmN0aW9uKCl7fX0pO3ZhciBvPWUoInBhdGgiKSxyPWZ1bmN0aW9uKHQpe3ZhciBuLGk9ZSgiLi9leHRlbnNpb24vdWkvc2VydmljZSIpO2lmKHQuX21vZGVsKW49dC5fbW9kZWw7ZWxzZXt2YXIgbz1lKCIuL2V4dGVuc2lvbi9zZXJ2ZXIvbW9kZWwiKTtuPW5ldyBvKHtmaWxlSWRCeVBhdGg6ZnVuY3Rpb24oZSl7cmV0dXJuIHQuaWRCeVBhdGgoZSl9LHByb2plY3Q6dH0pfXQuX3VpU2VydmljZT1uZXcgaShuKSx0Ll91aVNlcnZpY2Uub24oIm1lc3NhZ2UiLGZ1bmN0aW9uKGUpe3JldHVybiJuYXZpZ2F0aW9uUmVxdWVzdGVkIj09PWUudHlwZSYmdC5lbWl0KCJtZXNzYWdlIixlKX0pfTt0LmV4cG9ydHM9e2NyZWF0ZTpmdW5jdGlvbih0LG4pe2lmKG4pe2lmKHQuZXhwaXJ5RGF0ZSl0cnl7dmFyIGE9dC5leHBpcnlEYXRlLnNwbGl0KCItIikscz1uZXcgaShhWzFdKyIvIithWzBdKyIvIithWzJdKTtzLnNldERhdGUocy5nZXREYXRlKCkrMSk7dmFyIGw9bmV3IGkoMTU1MDU0NjM5NjUwOCk7aWYobC5zZXRIb3VycygwLDAsMCwwKSwhcHJvY2Vzcy5lbnYucXVva2thJiZzPGx8fHByb2Nlc3MuZW52LnF1b2trYSYmdC5pbnZhbGlkVmVyc2lvbil7dmFyIGM9cHJvY2Vzcy5lbnYucXVva2thPyJRdW9ra2EuanMgJ1BybyciOiJ3YWxsYWJ5LmpzIixwPXByb2Nlc3MuZW52LnF1b2trYT8iaHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvIjoiaHR0cHM6Ly93YWxsYWJ5anMuY29tL2xpY2Vuc2UvIjtyZXR1cm4gUS5yZWplY3Qoe21lc3NhZ2U6IlRoZSBpbnN0YWxsZWQgIitjKyIgdmVyc2lvbiBpcyBub3QgY292ZXJlZCBieSB5b3VyIGN1cnJlbnQgbGljZW5zZS5cblBsZWFzZSB2aXNpdCBvdXIgd2Vic2l0ZSB0byB1cGdyYWRlIHlvdXIgbGljZW5zZTogIitwKyIuIi5zcGxpdCgiIikucmV2ZXJzZSgpLmpvaW4oIiIpLG5vRGV0YWlsczohMH0pfX1jYXRjaChkKXt9cHJvY2Vzcy5lbnYucXVva2thfHxyKG4pO3ZhciB1PWUoIi4vZXh0ZW5zaW9uL3NlcnZlci9tdWx0aWNhc3RlciIpLGg9MmUzO2lmKHQubGljZW5zZSYmdC5saWNlbnNlIT09bi5fd2FsbGFieUVtYWlsKXt2YXIgbT1zZXRJbnRlcnZhbChmdW5jdGlvbigpe3UuZW1pdCgibGljZW5zZS51c2UiLHQubGljZW5zZSl9LGgpO3Uub24oImxpY2Vuc2UudXNlIixmdW5jdGlvbihlLGkpe3QubGljZW5zZSYmZSYmdC5saWNlbnNlPT09ZSYmbi5fZW1pdCh7dHlwZToibGljZW5zZUNvbGxpc2lvbiIsYWRkcmVzczppfSl9KSxuLl9tdWx0aWNhc3Rlcj17c3RvcDpmdW5jdGlvbigpe2NsZWFySW50ZXJ2YWwobSksdS5zdG9wKCl9fX1yZXR1cm4gdC5saWNlbnNlP1Eud2hlbighMCk6bi5fZmlsZVN0YXRQcm9taXNlKG8uZGlybmFtZShuLl9waGFudG9tanMpKVsiY2F0Y2giXShmdW5jdGlvbigpe3JldHVybiBRLndoZW4oe30pfSkudGhlbihmdW5jdGlvbihlKXtpZihlJiZlLm10aW1lKXt2YXIgdD1lLm10aW1lO2lmKHQuc2V0RGF0ZShlLm10aW1lLmdldERhdGUoKSszMCksbmV3IGk+dClyZXR1cm4gUS5yZWplY3Qoe21lc3NhZ2U6Im1vYy5zanliYWxsYXdAb2xsZWggdGEgbGlhbWUgYWl2IHN1IHRjYXRub2MgZXNhZWxwICxtYWV0IHJ1b3kgcm8gZmxlc3J1b3kgcm9mIGRvaXJlcCBsYWlydCByZWdub2wgYSBlZ25hcnJhIG90IGVraWwgZGx1b3cgdW95IGZJXG4uZXNuZWNpbCBhIGVzYWhjcnVwIG90IGVzYWhjcnVwL21vYy5zanliYWxsYXcvLzpwdHRoIHRhIGV0aXNiZXcgcnVvIHRpc2l2IGVzYWVscCAsdGNlam9ycCBlaHQgdHJvcHB1cyBkbmEgdGkgZ25pc3UgZXVuaXRub2Mgb3QgZWtpbCBkbHVvdyB1b3kgZG5hICx5dGl2aXRjdWRvcnAgcnVveSBkZXNhZXJjbmkgc2FoIHNqLnliYWxsYXcgZklcbi50dW8gdGkgZ25peXJ0IHJvZiBza25haHQgLHJldm8gc2kgZG9pcmVwIGxhaXJ0IHNqLnliYWxsYXcgcnVvWSIuc3BsaXQoIiIpLnJldmVyc2UoKS5qb2luKCIiKSxub0RldGFpbHM6ITB9KX1yZXR1cm4gUS53aGVuKCEwKX0pfXJldHVybiBlKCIuL2V4dGVuc2lvbi9jb3JlIil9fX0seyIuL2V4dGVuc2lvbi9jb3JlIjo1LCIuL2V4dGVuc2lvbi9zZXJ2ZXIvbW9kZWwiOjE1LCIuL2V4dGVuc2lvbi9zZXJ2ZXIvbXVsdGljYXN0ZXIiOjE2LCIuL2V4dGVuc2lvbi91aS9zZXJ2aWNlIjoyMSxwYXRoOnZvaWQgMH1dLDU6W2Z1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fGZ1bmN0aW9uKCl7dmFyIGU9T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKGUsdCl7ZS5fX3Byb3RvX189dH18fGZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShuKSYmKGVbbl09dFtuXSl9O3JldHVybiBmdW5jdGlvbih0LG4pe2Z1bmN0aW9uIGkoKXt0aGlzLmNvbnN0cnVjdG9yPXR9ZSh0LG4pLHQucHJvdG90eXBlPW51bGw9PT1uP09iamVjdC5jcmVhdGUobik6KGkucHJvdG90eXBlPW4ucHJvdG90eXBlLG5ldyBpKX19KCksbz1nbG9iYWwuRGF0ZTtpZigiZnVuY3Rpb24gRGF0ZSgpIHsgW25hdGl2ZSBjb2RlXSB9IiE9PW8udG9TdHJpbmcoKXx8ImZ1bmN0aW9uIHRvU3RyaW5nKCkgeyBbbmF0aXZlIGNvZGVdIH0iIT09by50b1N0cmluZy50b1N0cmluZygpKXQuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGV9KCk7ZWxzZXt2YXIgcixhPWUoInBhdGgiKSxzPWUoImNyeXB0byIpLGw9ZSgiLi9xdW9ra2FFZGl0b3JWZXJzaW9ucyIpLGM9ZSgiY2hpbGRfcHJvY2VzcyIpLmV4ZWNTeW5jLHA9ZSgidGltZXJzIikuc2V0VGltZW91dCxkPWUoInRpbWVycyIpLmNsZWFyVGltZW91dCx1PWUoIi4vc2VydmVyL2ZpbGVTeXN0ZW0iKSxoPWUoIi4vc2VydmVyL21vZGVsIiksbT1lKCIuL3NoYXJlZC91dGlscyIpLGY9NmU1LFM9N2UzLHc9NSx2PTE0LGc9ImFjdGl2YXRlLWxpbmsiLHk9ImNvbnRpbnVlLXRyaWFsLWxpbmsiLFY9InVzZS1jb21tdW5pdHktbGluayIsRD0iRnJlZWRvbSIsYj0idmFsdWVFeHBsb3JlckV4cGFuc2lvbkxpbWl0YXRpb25JbkNvbW11bml0eUVkaXRpb24iLFQ9e0F0b206Ii0tLS0tQkVHSU4gUFVCTElDIEtFWS0tLS0tXG5NSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXF5ZFFCWnBlNHZQbVd2SDJ5cmlIXG44Zi9CbW9rcWNsRHFKTkpVQ29WK1JRYXcxNnJ0L2kza1JVVUhxWVhWMW96eFB2UXNOekFwUHJhcCsyMU1xVlRUXG5nenBTSkI2SG5oWWFiQU9NYWh1dnphWmx4dEVVVkFvZFp3R1huN2JkREw2dGI3V0lqb2hoR215ZnNES3YrMnBpXG5WVm5CUCtxR1JYdHRhdE55S2swbVRPZmJVYjgwbXNxNlMzTW5maE04U3VPbzgzK3hZL3RaNWlQR3d6ajExYlNGXG50dmtiTUFjWDNZY0tob0ZSbXk4S2dEdU94alE4bWU4MkR5NlNnc2hsc2FlOC8yU05WejBpTWNnQ0lUQVNYT3VYXG4wRjBRRkNyZWp4WFRUemdoN1RCZTlhNHg1MWlZS01mTTF3cXFYaFYvM3ljc3pIWnJ3R0VmOEZjbzczTFd0Zm9tXG5Id0lEQVFBQlxuLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tIixWU0NvZGU6Ii0tLS0tQkVHSU4gUFVCTElDIEtFWS0tLS0tXG5NSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdmMFJuNnJnRk1WTnVhZWczS2c5XG5rakxOVVQ4WjJmbklyalVoREdNOEZTN281azROVDFGZHpucXNvQnByTGRyTFJka016akg4SVByckVVNXJLaVdsXG5WTzBpS1U3UTdBbU1mQVRTdGV6dmZ5czBBQWwrbzNmL2tRaVNaeEQyVTVQL0szOGtsWXB3ZjlMOE1NdGhBZUVGXG55NHh6QTVlQnVQekJkUkh4dlV3VXFoQ0I5bzczWjRNYXhIbnJhejVoeDBmNmFnRWRMVlU2WHNOa281d1huOFpOXG5QNkJia09PbS9IZ1U4S2tXdUpiVTU4eWdYeFBmL2ZuWkh1Mmd0dnJ6L3JOZW1vWFkxZkR5ZGl6TnhEeStaUGdQXG5pd2VTZHFuTGhsRm9KRXV4bkl3b1BsWU03SndLaDNKaWhPekFxUVE1VTVKa001ZS9tRlEvbEZxQ1Z4TWxtQlFXXG5Wd0lEQVFBQlxuLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tIixTdWJsaW1lOiItLS0tLUJFR0lOIFBVQkxJQyBLRVktLS0tLVxuTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1MUVFRFp6USsrbDZ0ejJpb0NQYVxuSHhPU2NqeTJrUkRkUG9YdVE4OHpaRzZWZXZ4cW1JemFkSFBGR2pWNXAzWm04T1k5UitTZjYxa2R6Ulp6dldSZ1xueG9ybGFub09sdXR2ZkJmRzJsa3YySjRIL0I3NVhwb0FlR3ZkdklsT01vRHhmd2oydk1JUTRvSE5hQ0oyeStPL1xuaW9oVEZPQzA3blk3dWYyc2EwdXNPQVo3emcrYlh5ejYzL2Z1U2VWb3VGQ0tHZVlLdnExWUM5OTFGMkhqMFRoTVxueHhlbGxjNngxQWFGdXl5RzVIbWRZcWJ1S05TK2lBdDd3OHBZVEpvWHhpOWpFMDIxNEdmMHNic0ZuQWJCRmoyc1xua09hZWU0UFNwbHlTWlhFbVlSZXBQMSt3NmFEa3ViVnRzSE12RnQrQXI0d3U0ZEx1QWo3Uzh5eFZWcktFRzlSelxuNHdJREFRQUJcbi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLSIsRnJlZWRvbToiLS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS1cbk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNHBEb3RlanR6aGlUL2xwTmZkMEhcbjJEdjA4TlRTSjgvaXh1UXozaUppVlJ4UWtvdDVTbjQ1d3U0UWlRRW9ZNU5RL3REZjhWOW1EZWVQTlUvWmQ4S1lcbmR5UkZvcTZid09sSGMwSEFhNTB0ZWNSQ0VDRVNCK3QzVFZjcUxNb2dYMzJ2Z1FrU21seTBzRnh0R0ZCak44V3hcblYrUTdXUThuZWZ0N0pLYVh0bSsyRnQ3UDQxb25kK1NmQmVUb2g5bW45REZmdCtPdUkydno3czBPU2pkK1AyYndcbitHRUlyM290bDNDQTVScklIOVdSc0FWamF3dit6NUx2YWtRWHRPNkpOTm1KZ0VySFdabWtCSWx2MlZIRHNvU2Rcbk1MZ2EyalRpRUhya1p5bEtQRm96L2hPZGgvaVZINC9yMUFXeEJoajhJZ1FsUmNMSmd2U0J6Sm80T2xCaGxZaDZcbnh3SURBUUFCXG4tLS0tLUVORCBQVUJMSUMgS0VZLS0tLS0iLFF1b2trYToiLS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS1cbk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb2hSL084WDVwdGdQYmVsc1NzYVpcbldKSFo3RmtxbzM5Q3g5VVlQczJyWXpidzk0YVpySWVSZGRmZ0Q1NWdTWlozSmtSWFJkWjdLYm0rWFRyaTZWMC9cbjBaZXQrRkthZVcweGtvdEh2TVAwZlR6R25halE2QzgzNk04d1FSOWYxbmRxZDdUc2EzMGtBZWd2UHFoS3VJK1dcbmFXMUdaclNlZWV5cTMvdVo0dGhQRUd2RkRYajZQMm9nRWFFeDM2V3VxRDlEVjFVdVk3dmNtL2ZQWVpwZkdnUHVcbjhKNEhBeks1RzBPeXJTZW5UWC8rSk84cEtqT3RGNkpIS2FRbWkzQ0YxdENBMWV3OHN2WjBaTGtLOUFHb00rOE9cbmE5a3gxc0JwNFl2Q2pBMFZSeGRPLzY2T3RCUmhGbktWNkpib1BUUTRTRzJiRkFLWVJKTzd0blM3bm5oaWNnSHNcbkV3SURBUUFCXG4tLS0tLUVORCBQVUJMSUMgS0VZLS0tLS0ifSxSPXsiUTBkQ0lFVnVkR1Z5Y0hKcGMyVnpJQ055WVhKNk5BcGthVzVoYUM1d2JHRnVZMmhoY21SQVkyZGlMbU52YlN4WFlXeHNZV0o1TG1weklHTnZiWEJoYm5rZ2JHbGpaVzV6WlNBb1ZsTWdRMjlrWlNrS01URXZNRFV2TWpBeE53cE9UMlpVYURaV05VeEdZblZGU1U1emJVeFlSVEozT1ZNek1UWmpTSGhsVlZwR1RXSkRjRE0zUml0MFIzSnNURkZ3YmxwRGIxWkZRbnBEVFVOUWRqWkVhVFJXTVRGTFVFNU1TR2w0WkdkM2NrTkdlRGhQVUZCT05qUTRjMnBKTVhwV1RVbDBUWEJyUkhSaUx5dExkelI2TW1KU1NVRjJjRWwyWnl0NFIwNXZRMUl6VjBOT1NUbGhXV1UxVlhCM1VVRjNkR0YyYTJkaVUwOWtkSGRHYW0xSkwyMXBVekJYTm1wWFlVZDFUblJDUjNWa1JWTlZjbXBOTUZSbE0zUmpSbEJEVFZSM01GSllOWGxwU1hKc1pWTmtRa3BWZUU5VFdreFRjR1l3WjJ3MVlWa3JUWE5MVlRrNGRIcE5hbFYxYzJ0R1pHczNTWFpxVkUxbFEwdE1iMXA2ZDJoM01YUkxNVzExY0ZCT2JVTmlWVWQxYTFNcmQxUlZSbEpXVUVGdmJFTnpWSHBITDFKRVJXaFdkMk5MWmt3ck9DOXlSMDExVVVKck5GWjRaelpDY25wcE9IbzVXVXBNUkhac2EyaGtja0ZPZGtGWFpuYzlQUT09IjoxLFFXMWhlbTl1SUVOdmNuQnZjbUYwWlNCTVRFTWdJM2hoWlRsMkNtRnNaWGhmYzJOb2FXTnJiR2x1WjBCemFHa3VZMjl0TEZkaGJHeGhZbmt1YW5NZ1kyOXRjR0Z1ZVNCc2FXTmxibk5sSUNoQmRHOXRLUW95Tnk4d05DOHlNREUzQ2tWalNHdDJLMWhyZVc1amVGSkVXVmRGVUZGaWJ6ZFlWbXhxVUVRM1ZHNHdlakJ3ZW0xRVpTczNiMjVQVlhCbllUVkJjMnRMU1RBeWNrUlVXU3RGSzJSV05DOXBMMlpoV0c0d2RsRnFkRUozTjBWU2EzZE1NM2RYVlRGTmVISjROVTFvYUhOdWRsb3lTak5NWTNCcWIybDFNbFJLYUd4aVVIbEpNWFpXUnk5R1FVNDNXRFZ0VjBWc2RYSnVVbEZIYWxkQmNGZE9VME5DTDJZNFVHWmxaRlZpYlVOdWFTOXpaVzVOT0RsUlRuSXJXRE0wWnpCamFqZGFRMUV6V1ZoMmJ6ZDBTMDF3TTFGcmQyNVBlVWhvZVRCdE5DdDFhVGhZWkVwWVJrODRVelJxV0ZOUFNFa3ZlaXR5TlRNeVYwRXZTVUZMZVV0dE0xZzBWV2xUV21sTVZITk1ka1kxTlVaaVIya3hTbFl4WVd4UGVVWnJSSEJXVG5oNFNqSkxVVVJQTW5sRk0yOHJZMmxzWWxZNE1tdFRkeXN4ZEVac0x6WnROMnh1YjNkaE0wTklXbXRPZFZoWWVsZEZMMHczT1VFd1IwaGlPRVp4WnowOToxLCJTblZ6ZEdsdUlFeGxaRzkxZUFwcWRYTjBhVzR1YkdWa2IzVjRRR3AxYzNScGJuZGxZaTV3Y204c1YyRnNiR0ZpZVM1cWN5QndaWEp6YjI1aGJDQnNhV05sYm5ObElDaFRkV0pzYVcxbElGUmxlSFFwQ2pBMkx6QTJMekl3TVRjS2IybzVkRUZSWVV0dlEwZGFUR3h0WVdkeFpVNHpWRVZDVlc5d1VURnhjR05QVWtsak1IZG5WalVyVkVRek5FNWhhRWRRVldoWGFGVlNZUzlhZEhwc04wVmFiM1YwTXpaalpWSjBUVWN5VWt3d0sybGFOMFpsWTJOU1ZuZ3lWVFJOYlU5dFNHcE9iRUZYWmtOdEt6QTRkRFpWZDJrM1FTOU9kMDlUY2tsdU1rUldXVFp5VjA5alRXbEZTbGs0YVdKWlpYcG5RVmQxZERjclYwRXZUa1l4VjAxMVpFY3ZlbGRuZFZkUE5UbDFRV0ZRZUVkMFJuUlpUamRCVHpkU1drUkRiR0Z5YjNJclMwOU5UbWR6V2pRdlltTTJORU5tVGpONGRXWXlSRTlrVGpCSU4yODJWVXBMYTAxS2FVTndaR05GVFhsVE0xWjFTRkpzUlZaa1ZVMXFNMnBsWmxObFEwMUdSbUZpYkhCWE1GbHpRMlZDUVRVM1dsTjNXWEJJSzA1S05Xa3JhMWxrTTNaamJDdHpjMUZSZVZSSE5XeFpVaXRpTW5GV1dEVkVXbFZWVFhWME1GZFVUWFlyTTBoS1FucE5jRk51VGpaM1BUMD0iOjEsIlVHRjFiQ0JKY21semFBcHdZWFZzTG1seWFYTm9RR2R0WVdsc0xtTnZiU3hYWVd4c1lXSjVMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVnS0ZaVElFTnZaR1VwQ2pBeEx6QTNMekl3TVRjS2NXNXlXR2R0WTNSVUsyUTRRVVUzTUVsdk1WVlJieXMzU0d4b1RrVnRjVWhVVm5OcGNtSlpWQ3Q2TWpoTFRqVndkVFo2YVdZNVFrZEhOMFJaTUZOMmVteEJUME5RZVhKYVRub3piM2hKT1VOdWQxbFVNbVpoUkdNNWVHcGlVbXhtWW1wd01EbFZUVEJpTjI5eU1EVnpXRVpITWtzelNGVm1ZM1pOTmtNNGFHMDVkVmx5WldsWE5FdE1NV3d3UlROR2RVaG9aWGgxUjNsdlptRkNkVzVHTWpGMVkwVmljVmN4U0V4dWNIVkRiRTRyS3pSb1lpdFZaMGhXYlhoTGVqVTNUekIyVGxWbFRHc3JhbkZVVlN0Q1JVMVllazVOWTFsTFZWRjZiMGR4TUZRd2Mxb3ZXbTUxWjAxNVZqSlNVV3hRZUcxVWFHMW5SM2hFU1N0UlVUSjZjWGRwUjIxUmVXRnpTRlJMYVRWV1IydFFXRFpXYWxWbE1HTlZja1ZRTDBKdE5DOVdkWGRvYlZkcVJXVlNURFowYjA0NU5IcHZSV0ZsVUVOSkszbHVRbmRHVHpGTGRrUjNiM1kyWmtsWU1ESmhiekp0ZGt0M1BUMD0iOjEsIlZHOWlhV0Z6SUVGdVpHVnljMlZ1Q25SdlltbGhjMEF5YldsdVpDNWtheXhYWVd4c1lXSjVMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVnS0ZaVElFTnZaR1VwQ2pBeUx6QTVMekl3TVRjS1lqTjJUVGhuUm5OdWFIZHhPR1VyWm5VeWVIVndWVVZpVGt4WGMxTldVakowWW1WVFJIVk1UR3BKTjBONVEyNVJXRTk2ZDJWb0wwUlBMMlJNTmlzMmRrOVlWemRhVTFBM1RTOURUM1l4ZW5kdEwxZDZTRVl4VjB0S1pWTlpjbGR2VkZkWU5EbG1TRUpXVEU5TVRtSkZkMDVJZVZoME0wUjNXbmwxYTJaa1FVSlZVMWxWUTJGMGF6QjJPR0Z4Y0c1ME5EazJMMVJWVkVkbldYWkZhazVKUzI5YU1rNVhOSFJ5U2tKNVF6Y3ZLMmd5UzB4RVUxTnhZMmRvWVdwalFTdGFZMFY2TnpaT2IzSkJTbTRyTldORVIySk5VRzlaWTI4MmNGbHJZWGgzY2l0UWEwdHdWRUpvY25VNFdIUlVWSGw0ZUZaWk1EQXhTbUpXYm1sVk4zWlFZbVZYV1ZoalJUTm5WblJ0Y1ZFMFpqTkxjMk5XWlRoRWNqWXdZelpwU1VvMUszWnJVRk0zTHpSclJsTTBTMDVDUlZsUlkxVnhMM0ZpT1U1b1ZrTjVVVkZVYUdGRlkwZHJiazFQZEUxbFVHTjNkV0ZMU1V4QlBUMD0iOjEsIlYybHVJRlJsWTJodWIyeHZaMmxsY3lBb1ZVc3BJRXgwWkNBamRuZHVkV2tLY0hWeVkyaGhjMlZ6UUhkcGJuUmxZMmh1YjJ4dloybGxjeTV1WlhRc1YyRnNiR0ZpZVM1cWN5QmpiMjF3WVc1NUlHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqQTNMekV3THpJd01UY0tRemgwWlhwUGVGbGxiMUZJYTIxVE9VOTRTRFppTTNSMGMzZGpSelp3V2pKeWFUY3pSRE5EZEN0NGJWRnhTSG96Y1RoYVYyRnlPVEpYS3pKVVZYSnBXSGxvVDA1R1VuUmpaVmR3ZUVseU5GaGpZWE0wU2pGc2JuTlNhamx6WkhabE0zWnJRVzB6SzBsVU9XVnZTRTEwV21kTlQwSkZUamRsYjNaVVZrRm9PVFJMSzI4MVFuZGFPRU5MWVRKUWVtVktUVWh6ZEVaeWQydEdjMHRTTWxCb1MwUXZNRFZ3WkRkTE56YzRkRGx2UTNoUGREVkROM0ZzWVRWc1RXZDVTbHB1VVVOcFQzRkdlakpNUzNGMlNUZ3JjRFZ5Tnprd1dqaE1SVFJQVUZGalVETnRUa3dyTlhkMlMxZHlaMmh6VFRZd2FYVlVNM0ZIYkhWNVVrRkxlUzl6Ymt3NGRYUXliak4zZG5wdk5IZ3JWRlZ0WW5GSlYyeGpZMEZFUzNoc1RERkZUaXQxYVZwSVp6RnJiV2wxZW5KQ1VsTlZWelpuYWk5RmFYSnRhVFJNYzNaaFNsaHBRMnB0Y1c4eVFpOTRTRVIxTkhZMWNtWlJQVDA9IjoxLCJWMmx1SUZSbFkyaHViMnh2WjJsbGN5QW9WVXNwSUV4MFpDQWpjV05vT0hVS2NIVnlZMmhoYzJWelFIZHBiblJsWTJodWIyeHZaMmxsY3k1dVpYUXNWMkZzYkdGaWVTNXFjeUJqYjIxd1lXNTVJR3hwWTJWdWMyVWdLRlpUSUVOdlpHVXBDakEzTHpFd0x6SXdNVGNLZGt0ak1XY3dPRXh2ZFhCUFVFTklSMWxIU2tkSGJHTm1XV3BxUms4NU4xWkZlV3RLZGs1WFNuRndjVGg1ZEZOT1FrSlZXa0ZrVTBsVk9YSkRaV0ZGU204NFkySm9Ua3BaWnpWVmRtSktZVFY1V1hsa2QzUTJlVnBDYjBwb1JrdFpXakJWYkZFcmRVTlJkazlJU2xoR1pFdDZTR05tVG5sclluazRUMlpQY3poTVVtRlBTR05HZFVnMk4wTTRTMlpTYW1GSWFXNXFkekZ6VEZKVVowSlJkVFkyWkVOdFZIWm5Tbmw2VUhSM2FsQlRPVFZST1ZOV2R6aFJTelYzYUdJd1V6SnlUSEF2UW14TmNtZzFXV2cyYWtWcFJrUnhOMVl6VFhnclFXVnpSV3hrV0hwS1lsZElaak5xWkV4S1NuRkVWeTlXTWk5U1p6Y3lRblp0YjFobWNFUnFUV1ozZG1Rd1RsWXhTSE5JVXpnNGRIRk1aM2xDY0hsb2JsWlpTRGxsUzBWU1VrbHlibk5ZYTFabVQyZFFhVFJzVjJSVFNtZFBkVVY1VVdsWWVreG5SR3hITVZJM1FYVnZaR2RVWlVvNGN5OWtXVlpSUFQwPSI6MSwiVTNSbFptRnVJRlJvYjIxaGN3cHRiMjl1UUdwMWMzUnRiMjl1TG1SbExGZGhiR3hoWW5rdWFuTWdjR1Z5YzI5dVlXd2diR2xqWlc1elpTQW9SbkpsWldSdmJTa0tNVEl2TVRFdk1qQXhOd3A2TVZKa1VqVkZaV2RwVnpGWUx6WXlUa3MyUjBWSlpsQnFXV2dyVVVGaFJYZE1WVXR1YjB3eFFWTlZhMFl4WjNoSk1XbDFZVWRZU1hsS1ptUmpOR2xPTm1GSmJqVk9hV2hXVm05c2Qxa3dhRXhFUjNwdFlXWkpRMnRYUlZKdFkxRXdjRzkwUjNZM04wWXdabkV4YVRaUFFVVjZTRk56UzNwUGVqWjBWVThyY21sV2NGWmpVSEJVYkVKMmRVSmtUSE0wZVdjelptczJjbGxMVm5wSWEyTkhlaTh3WW5sTGRVVllTVE5FVEVSb1EzRktVMjh4VlhaTmFVZFBWbEJLVVdOWldHcHJka3BYVVhjelFWVklha3QxTlhCVVRWTkJUbU5JZEZKc1VWaHhhbEZJUzFsYVozSlpNMGg0V0RSbWNGVnFTMHBXU0RaalRWaHBTVFI1TVVsbk9FODNPVGRWZFVFeU5HZzVaM051UmxWMVYxaGFWVmhsZEU1R1dsVk1ZbkpNZFZoeFRVaGhhSEV4WWpSbFdtdHJhVUp0V1dsRVpHRTFORXd3S3pSTVRuTmFTRlpPUWtkUlFURndjMjAyYkM5SmExZDZOM2M5UFE9PSI6MSwiVEhWallTQlRkR1ZsWWdwamIyNTBZV04wUUd4MVkyRXRjM1JsWldJdVkyOXRMRmRoYkd4aFlua3Vhbk1nY0dWeWMyOXVZV3dnYkdsalpXNXpaU0FvUm5KbFpXUnZiU2tLTXpFdk1USXZNakF4TndweWVGWXJOVlpzTmxOVFEydFJOM0F2Ymt0b2IwOTRkM2MxZEVNck1tbzVhRzl1TkVKYWVFaFdUMjE1UWtGcU1tMVplRTg0UkZCUVRYTnZjVmwzTm1OT1VqZG1VVUp3VkhaamVreG5hbUl6YzNodWFHcDVPRVIyVGt0dGExRmxjV3BWZFZocWFUQkhSMWxUU2tkWk9WWlhSamxxWjJsMVVtaE5aMFZPTDFjd016VlpkRk0wUTBNeVJpOHdjVUZaTVZkV1ZqaFNNalpRVkROT2N5OHZVRWQyYlRFMmVIb3JWamhHY2tSbGVrNDVhelJqYUZGTE9EUkJSakJHZFZveE1FcHROalIxWkVoTlUzbEllbWRrZVdGTFYzZFBUR1JpWVdzd1ZuWTVTamdyT0RremMxWkVNVXQ2V2paWVNtazBaVFl3WmxZM1IxSjJiVmhVZEZwbWFsRkhNVEF3ZFdSSU5HOU9PVWx3T0hkVVJIWTRia2RMZURoS1dIVnVaRzgyTWxGNGNISTJUMHBuV2l0WVdDOHhRbEZtVDFSb2MyOXFUV1JuUkd4WFEwNHdka05aTDA1cVJVWmtVR3RqVUZwUVpFdGFRVTkyUVVFOVBRPT0iOjEsVEc5MWFYTWdWbUZ1SUdSbElFTmhiSE5sZVdSbENuWmtZeTVzYjNWcGMwQm5iV0ZwYkM1amIyMHNWMkZzYkdGaWVTNXFjeUJ3WlhKemIyNWhiQ0JzYVdObGJuTmxJQ2hXVXlCRGIyUmxLUW94T0M4d01TOHlNREU0Q2tSNFkweFpUVkUwVUM4MmJHUnBiMnBUVlU5UVowWmxlWHBwYjNGSFowNWhaMWMyYzNKTk5qTnhPRFpYUXpGMFFVNTJXRlZJYWl0M2NYcHlRbmQ2UmtkTVpHRlZkWGhUUlRWRlJrWXlhRWhPUTBkTk0wWlpkbGRPY0RsVE9VUkljQ3R1TkRNd1VIZE5NMkYwV1ZRNU1VTkJOWFZMWWpkamFreDJPVU5pVFVWTk1EaG5OSEpITlVSMVlubzNXSEV4ZVhReE1qbDRXVVY2YW14WlFtdFNPVTlJTW5wUFJYSlhiMEZxVVc1UGVWaDBjVzFWUnpWVk5HSk1NWHBTYUVoQ1RraHlSV050Ym1oMFpYaDVkSEZETlRkeVRISkdlakpGTkZOTGEyVmtlVGMxYzJwemJtaElNVmhaTkd4UE9IZHhRa1U1U2twNlZuVlhSbTFrY1VoeVluSkNiVVpHYVVWRU0xaE9jbFpFWlVGaGJtZDJVV2RPUTA1MFdrUkJUM2QwUVROR1YxWk9URVJxTWpscmNtSjBRakpRTjB0dFJXbFdVMUkwV1RkTlYyeDFhazAwV25nMmVYVm9ieXRzT1VkbGFFSjZWSEkwZHowOToxLCJSRzl0YVhOdlpuUWdVR2x2ZEhJZ1RtOTNZV3NLY0M1dWIzZGhhekpBWjIxaGFXd3VZMjl0TEZkaGJHeGhZbmt1YW5NZ2NHVnljMjl1WVd3Z2JHbGpaVzV6WlNBb1ZsTWdRMjlrWlNrS01UQXZNREl2TWpBeE9BcDBWemwyV2xsTllVcENSM05wTTBKSVIwZFlVM2xxT0RWMk9WZE5WVE0xUmxKa2VWbFJVVU54WlhKblVGZExia2xIVkZodGVHVmhLM0pRVEVocksybHpRVXg0WkVObWRWZ3hOemxRWXk5cVozUjJaMUpOY1djclNYbG1iWG8xT1dNclkxQTVjR0p2TkRCMk9GWXJiMFpHTjNaQlpGaFZjMFUxVEZCeFNreENTbkYwZVdoTEswSkplV2R2TlRaMGEzaEZjMjlvTURrMmEwMURkbmROUm1Zd2JXeDRVRm93Yms5c1ExZ3ZRa0pzTDBwdGRHUjNOMHBqSzFOWWVUY3lWVFpLYUdWcFdFbFZOR2hDUlZGTWVVSnBSbXRRT0dKWVozY3lZV01yVG1oMlNsbFpiVmgwYzIxR0x6UlJUakZ6YVVKQ1ozcDFkR1o2VlVoYVNuSldORmRMTkdSalZqYzVaelZ6WWl0WlVYbEZkbWh0TmpGVllXVjFRbVpwYUZwSlVrSjZjRmxEYWxSQ1UxSTNkRUpoVlhkR1Z6ZG5kSGhuWW5WVFFrUTFjMDVXVldGMGNHVXhkWEJ0VEZSeE1rVkVNVUZLU0daTE1GRTlQUT09IjoxLCJWMmx1ZEdWamFHNXZiRzluYVdWeklDaFZTeWtnVEdsdGFYUmxaQ0FqWm5sNk1IY0tjSFZ5WTJoaGMyVnpRSGRwYm5SbFkyaHViMnh2WjJsbGN5NXVaWFFzVjJGc2JHRmllUzVxY3lCamIyMXdZVzU1SUd4cFkyVnVjMlVnS0ZaVElFTnZaR1VwQ2pFMkx6QTFMekl3TVRnS1kydFJWemszUm5OalN5dEhXVVpDU0ZwdGFWaE1WMjlUZGxGaFUyazRRelEwTDFkM1lXRXdXRTF2Vm1SMFJVUTFjbllyTmk5a1l6UlBVVFpWYUZWMU9FMXZZazFVZHpkdFpHcDVUR1ZFTWpkMGNqWmpSazF5WWpCdGFIZHhNM2Q0YXpZMGRXOTRha3RNVm1zMVNHUm9hRlZpVkZKQ0sybHZibTQ1T1dGbUwyaHRUVWRYVVZsbmEweFJXV2RIY2t0QlprbEphekU1U1ZkWU1VNXFRaXM1WVZGaU1XTkRXRlIzUkhvNFEweE9VbVJVTURaS1FuTnZiMUJ3ZWxGdk1HbENia3RXU0ZWVFYwOVNTMGd6T0VGc04weElhRGN4YlV3MlZXMWtWRzFGYVZGSFluUTRRakJZZFM4MVNsWjFkV3QyUkhFMFpuWkxlRzV2ZWtwaFYxQXJUWHB5UjFNMGVrdHZXRTlwYWtKa1JuVTVUVEV6ZHl0WlRpODFWVzlpUTBFeFNsUnpRbU15ZG1jMlNIRlVNMWw2UTFOR05WazJkalY0V1RodWVHTXhPVFZMZEROdGVucHBNbTh5Y21WT1FrUjVRbkJIVFRCUlBUMD0iOjEsIlYybHVkR1ZqYUc1dmJHOW5hV1Z6SUNoVlN5a2dUR2x0YVhSbFpDQWpNR1kwTjNjS2NIVnlZMmhoYzJWelFIZHBiblJsWTJodWIyeHZaMmxsY3k1dVpYUXNWMkZzYkdGaWVTNXFjeUJqYjIxd1lXNTVJR3hwWTJWdWMyVWdLRlpUSUVOdlpHVXBDakUyTHpBMUx6SXdNVGdLZDB4eVQxRnRUVkJtUldwVmVIWkljelp4YTBWaGFHcFVkWGRNU2sxRFVsbFVjVVZLWkhkWGNqbE1OVXBEVkZjMWJYbHBiWE0xVVdSV05rOVdibFJzYmxKd1MxVmxRa1JIV0Rjd2MzcDRURFl2YlRWdlpXZGxTR1ptWlRsaVEzRjNRWFpaSzNwT2EwUnhMMFF6UjJ0a2QycFpOamxUYld4eVJIaDJaM0ZuVUU5Mk1UZ3ZUV3hIZUVoR1NtZFZibTlUVm5nclFqSjVhM2wzV1dKVGJ6SkhObmxqV2pkWGNHOUxPSGwwWkVsdGFsTXJhRmQ0UTBNMk0wTm9VR296YjNVMGVYQjRNbUl3YzBGVE5VMXZhV3BhV0VoS2MzTXlSVTh2VkdoWVdVOUVZamhNVVRGV2MyRjZURGhMUkRaM1ZXaE9TR1ZoWmtSc2RHcGlVbVZ1YlVOaWRsQTBPV3R1YlhGTFprNVRkV3g0Y2tGMGVUQTFhMU5HTWpodlNtVTBRVFZEV0dKbloxbExNek40V25wMU5HdDRhbXRQVjNKSkwwZHhiVGh5YkdKNlR6VldSak5CVUVRdlkwUXZhV05SY1ROMlQybzBaVkZSUFQwPSI6MSwiVjJsdWRHVmphRzV2Ykc5bmFXVnpJQ2hWU3lrZ1RHbHRhWFJsWkNBallqWnRZemdLY0hWeVkyaGhjMlZ6UUhkcGJuUmxZMmh1YjJ4dloybGxjeTV1WlhRc1YyRnNiR0ZpZVM1cWN5QmpiMjF3WVc1NUlHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqRTJMekExTHpJd01UZ0tiR2Q0UlN0dVFrZHhhalVyV1hkMWFsZ3lXVUZrYzB4TloweDNhazVwT0ZsbVNIZEpWbmR4VVdOWU1rVnBka2hOV2xGRlF6VjFPQzgyYnpkTU9WYzBOMmxQUjNOWlMwTkdSMGN6V2twalNIZEVNRFYzTlVsVlFsSnJRa2d3VlRJNVJsZ3hWMDFQV1dWa1NUaE1WbUk1ZDJVemRVazVPRzlRU1VvNVpIZHVWR0Y1ZWpCVksyazVja2Q2Y0c1clRYVm5XbmhPWWpCMVYydFlXRmxGVmt0bEwyRmxiaXM1Yld0YVRWQkNMMUZ4WkdkUU1UTmFibVpvT0VwNFJVZHdkalpZVkROUll6bHphMGc1U0ZKUGFVWjJXRkF4VG0xNU5UZG5jVXBVZFhNd2FYRlphMnBXVm1Oc2VscGhSVTFKSzBOUmVHUkVhMHN3YmtveVdYVllOREUxWXprelpGcG9LemRxYkZwblpIVkJhMjVQV1VKeGFGVnhNalI2YlV0clF6azVZVmRoTjA1YVlXcGhjVXd2Ums5aEwwUnJNbWhZWkdaUFVuazRjbWxhYjJOVUszQkpWMlZLWjBoMGNYSlVSRmx5UW01c1JVcDNQVDA9IjoxLCJWMmx1ZEdWamFHNXZiRzluYVdWeklDaFZTeWtnVEdsdGFYUmxaQ0FqTXpkcmNIZ0tjSFZ5WTJoaGMyVnpRSGRwYm5SbFkyaHViMnh2WjJsbGN5NXVaWFFzVjJGc2JHRmllUzVxY3lCamIyMXdZVzU1SUd4cFkyVnVjMlVnS0ZaVElFTnZaR1VwQ2pFMkx6QTFMekl3TVRnS1pIaHBLMUpXZWtkV05GSk1WM0ZUVlU1WVNXWkxUeXR6TTNKVUszWXlTamcxWXpSU0wyWkVUSE42Y213NVdXaEZhbU5ZSzJOTVQwUkhVV05xVVdKa2RGSkxjR1JMWlUxeVNrWjJhVTAzVm1WamRuTXZLMUZhYm14dU1HdEZja3RYVTI0ck1EUkdOR0Z1WjJaMGNHTmlSbTExWmpCTEx5dDRVWFpoVTNBNE9FUmxUVGhaTVdwdVRqSlJhekp4ZEVWUWNDdFJPR2REVWk5YVEyeEZWRlp6VUZsSVJ6Uk9NeTlKVVRKVlZuUldTWGgyZEhWNk4wbGtlVlYzVEUxNVdtVktUMDl6U1VkTk5XcGlOWGx2ZDNCeFZWSmpjRVpYVGxBdldYaFlaRmdyVG1OVFF6TXZXbTB3YldobFVIUkpSR2RsVEhJeVdHd3ZVMkZyYVM5WFFUUlhjSGRvYVhRemR5dGliM2wxYUZCdlpVaEVhRVpQTjNrd1RqVTNZbVJEU1N0bFR6YzFUelEwY0ZwVlFtdDBNRzQ0V25CaFdWTTRVRGRHVFVkVFdIcHJNRWxOYW1Kb1ZrdFphM280ZWpZdlpVNURLMHhzUlN0M1BUMD0iOjEsIlYybHVkR1ZqYUc1dmJHOW5hV1Z6SUNoVlN5a2dUR2x0YVhSbFpDQWpkakp2ZHpnS2NIVnlZMmhoYzJWelFIZHBiblJsWTJodWIyeHZaMmxsY3k1dVpYUXNWMkZzYkdGaWVTNXFjeUJqYjIxd1lXNTVJR3hwWTJWdWMyVWdLRlpUSUVOdlpHVXBDakUyTHpBMUx6SXdNVGdLVWtreFN6WnRkamg2UVdwdFRrUkVkWFJZYlhWeGVtVTRiR3RUYUZKUmVEUkZTVGxJVVRWWFFUbFlXbmRoVkRjMVFtZG9jSHBUYVhwQmRGcDRZVmg1WkVOUmJFWkVUR0l3YzJoRlpXTkNRbk5OYWt4WGRFMXBSelJIWjBsVmRHWk5NVFZTUkVkNU1UbHNVbGszVVdaVFNIaEpWa2xHYlRZMVZHcHVhM1ZXTkhaUVJIZEJObE5TZVdsTGFVWjVLMWRwSzNSTlluYzVZU3RFVTJnNE5qbDZVakZOY25KUVdrWnBSV014ZEVsMVJXcFdWeTlWYm5oSE1taGhOR1lyVlZNM2VWcDVlV3BLVHpSWVduY3hWU3RoUlU5UGJreHJRbGhzYTI5MFkzRmxNRUVyTWk5dlQyOXNWV1kyV1RSUmFVbHFlV2hzV1hSVWNUSXZaM0JWZGtWM2RYbFZhbGR4TWtSNU5WTTVUblZsS3pWc0wzSk5VRWhRWjBSVlV6TldiV1p5TUhvdlFqRkZTR05aUzNKc1ZUSXhXbWhSVDNod2VFbG5VMnB6V1dSdFRrTllZblJSY2t0a1ZqUllWbXhKZDJaa1RsaEdZMEpuUFQwPSI6MSwiVjJsdWRHVmphRzV2Ykc5bmFXVnpJQ2hWU3lrZ1RHbHRhWFJsWkNBak1qVmlNbklLY0hWeVkyaGhjMlZ6UUhkcGJuUmxZMmh1YjJ4dloybGxjeTV1WlhRc1YyRnNiR0ZpZVM1cWN5QmpiMjF3WVc1NUlHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqRTJMekExTHpJd01UZ0thRXBPT0cxeU5HRXphbWw0ZW1WU2IxbHZNekp3VUcwM05YZ3ZMMmg0UWt0bFozZHBkMXBYTTFGRVNrNU5WV3RWTVc5ck5ubFVVRXcwWmpKMFpHaG9jMlpRVTNoUUsyWlhWVGxJYW05b04xUldUM2RVY1dWek9GbFVaRkpHTURSdmFGRTVTbVZxTW1GS2VVMUpZMVJHTm1GdGEwdFBXVlpXWVVaRE5EWllPRXBhVFRWVVExVnZiRU5YVmk5TlRXZGpZamRMT0VaWE5GcExaM1owVUVGRFpWTjZiVnBwYm5GU2QwaGlUakJWT0ZveE1GTTVPWFZMTDFkTGRVbEJkblJoVWpkdFRXZEtZMnhhZUZoM05HZFZSREYwYjFvNGFrMVRPRWhDV25aMmIxbFlhRXRUVlV4RmVVNHZXRTVqZURBNFkzQlZWMlVyY1hOME1YRlZSRkF6WmpkdE4xVk1WMWxzUm5ZNVUwOHJVVmhsTldGSVEzcGxURFpsUTNjM1dGRXdTRVpHVldOWWJIZGlaM1ZyTTIweVUxWnpWREpzUTFaemVXNTVZbWwwWjJWTk1tSlJiWGhLYm5CR2RGaFhVRTUwUlU1SlFtZDNQVDA9IjoxLAoiVjJsdWRHVmphRzV2Ykc5bmFXVnpJQ2hWU3lrZ1RHbHRhWFJsWkNBamJubDJhamNLY0hWeVkyaGhjMlZ6UUhkcGJuUmxZMmh1YjJ4dloybGxjeTV1WlhRc1YyRnNiR0ZpZVM1cWN5QmpiMjF3WVc1NUlHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqRTJMekExTHpJd01UZ0tVMWRZVVdoeGRrTm9ZamQyY21wWGRERjRWMjl4VFM5M2JrRkZZbkV4VDJsNVRteE9kMUZ5ZVdOYUwxUkpkVVl3VXk5M1ZuWllhbGxTV0VKTlZEWjVXamhrSzBsV0wxcHlSbEZDWkZOaFNqUlhZa0ZJTms1WlJqWllablkyWlRCcWN6UnpNbFI1ZUVaRlp6aDVabFJQT1hGb1JtRnlNMWxyVWs5UFRFeGlNV3N6Y3pCUk5ISldkRkpoSzBkUVdIY3dURVpyWVUxS1VFMTNSSGhtV1hwU2JUTkNiMkpxYkN0bmIyWk9XbUZJU1VJMWVYQXdUMjVhUmtVNVoyMVpkSEE0WkhKa1kyNXNkM2wwVFhGMFFXMWhPUzlqUVUwdk1TdGxTM0pFUnpod1NVWlZjVzVvZEhwbVJFMVlWVGh0VG04dlJVWnJTamREYVV4bk5uQlliRUkxTjB3eGRUQmhTbVl6VTBsemRFMXhkMHM0VFU5UVdGVkZZMVpPTDNWbFkwVlVLM0JGVjI5cFIzUjJPVlZKTTJSbE9XSnJTSGhrZFVaSVRHWjVlazFVT0ZkMVprMXJTMWhhVlRSa2NpdFdkMDAxTmtGUE1VTm5QVDA9IjoxLCJWbWx1WTJWdWRDQkdiM1Z5Ym1sbGNncDJhVzVqWlVCdWRHWnZkWEp1YVdWeUxtTnZiU3hYWVd4c1lXSjVMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVnS0VaeVpXVmtiMjBwQ2pFM0x6QTNMekl3TVRnS2JISkxPVlJqTjFNeVdXTldaMDlEY0RSV1dVbHhVRmxYYjNkbEx6RTFOR1pxWmxkUVNUTmtPRmhwWVROeWEzVldXVXhJYWtoSldEaElObkEwZDBjdk1XRkVNV2gwUkhsME1IWkdRa0Z3WnpSTFJYUTNZazl6UjJGb2NHNUhhMHR1T0hac2VqUjVUVXA0U0ROSlMxUnliRWxTZUdzeGJGaFhPREJHWm0welUwNXVkblZJYjNSUlkwTTRhRFIyVUZFMlpGcEVPRlI2VUhSc09Fb3hVRGwyU2xWRlUwSnNSbTlNZG5SUU0xVk9hQzk1VjJkUlFVTjRkSGt2UVc1aGVsRk5XSEZGVEVaWVNFVk9kVk5yTUdkRFRsZEZPRzlKZFVWNE9XNDVMM0k1UjJ0SU1sUnRjMWRDY2xKR2NEWnBXa1pQTjBsc01EUmFkME5OY2xkSlkwTXhOV2x5TlZSa1ZXeG1NelZKTDJGd1dVaHphbXA1VmpOeU1IVnNWVWhwTlZSVFRsbE9TalJrUTBSNGJWRkxObnBQZDFWbFIyMXVMMmt2ZUdnNVowTkZkV2htZERCck4xbHliSFUwY0RGeVkzazBXa2x3WnpSblBUMD0iOjEsVG1scmJHRnpJRXhwYkd4eGRtbHpkQXB1YVd0c1lYTXViR2xzYkhGMmFYTjBRR2R0WVdsc0xtTnZiU3hSZFc5cmEyRXVhbk1nY0dWeWMyOXVZV3dnYkdsalpXNXpaUW95T0M4d09TOHlNREU0Q2xOSmVHZHpZbU5qTW10M1pXYzFUVU5rZVhoTGJHTTNObTVWVFVOU2VFUlRNUzlJT1RjMVFrbzNSek5pTldoV2NUbHdlRUY0ZG1kMk1HdFFUV3B2YTBsc1VUWnhjQ3QxUVZCVU1HRnJSa3hvZWtKM2JUZDNWbUpFU1U1UFNsbG1ja3AxWmtvNFVFTlRNU3RaZFVwV1NEZ3JVR3RxVGtsbFUzZENTRTQwTW1OcVdFaGxabFpqVlVNclFpdENURkpvYlZwSU0wRkNWMFJ1ZEZWaWRFRm9kRUU1WVU4MU5GcDBVbU5hVURCMUwyNTNWemRXZFZGdFEwdE5TM2xMUXk5RWFGaHZVVTlHV1VwcVNYVlRNV3BCVnpGRUszRk9laTh5V1VSQ2IxaHBNakl4YzFoVmRFdEpkM2hhYW1Gd05VbHNTVTFUTkU5V2IwVnhlV1UwWkVJNWFXTlFOVXRtYzFZclFqRmlhR1ZuV0ZOVlJXZGtOekoxSzNWSE5YbHlXSEJaWkRkcVVYQktSV3h2TW1NdlVYSnJlbGMyTlZoSVlqWllXV3htZUZsR1ZVMU9Sa2xwU2psb0wwWkdaakpVU1hKelVIRjFRbkVyZHowOToxLCJUV2xyWlNCQ2IySmhaR2xzYkdFS2JXbHJaUzVqTG1KdlltRmthV3hzWVVCbmJXRnBiQzVqYjIwc1VYVnZhMnRoTG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVS01qTXZNVEl2TWpBeE9BcEtNRk0xTTFWdFZ6SjVZV2hvTVVOWlUxUllMMDVsVTBvcldXdFRWa1ZCVTJkUUwyNUhjVk5IY1VOR1ZUVldUVEFyZVRrdlZXUlpObVE0VmxOS04zVmtVRTgxTTJoYU1tVjRRM2xTU1Nzd1RVSlhPSEJ0ZG1rdmRVd3JValZyZUc1SVlUUnlkSFJ6U201aFNqYzVhVU5uTDJSS2EydFBSM05XZW5RMlRuRTRkVTVrUjNkc1VrUm9kRkpHYlZBdlVqSlRORmMyTURVNWFEWktjRXRsWVRsVlFtNURRVEl4V2paTk4ybzVOVXcwUTB0NVQySTFZMEU0WTBSUVQySkdaV1kwVTJ0cFlWbE9Xa1ZMTWpsR2RqUjBaelkzUVM5blUxUTBRbnBaWWxOc1dtRXpkM1pMYW14RVJGQXlXRFpXTjNGNU5IVkJWVW9yU0ZVeWVYVXhWazQ0V2xCa1dYZ3pVWEpVZFU1cU5YbElNVEpsU2t0SWRFRXJjQ3RLZUVkNk1VTldaRVpDVDBobFNFbExUSFZUYjBkUGFHbzJSVGswSzFrdmFrZGlabGxsYldsSU5WcFNXSFF5Y3paeVJFRm5TRGRES3pSek4zYzlQUT09IjoxLFptVnNhWGdnYkdGdFltVnlkQXBzWVcxaVpYSjBabVZzYVhnNFFHZHRZV2xzTG1OdmJTeFJkVzlyYTJFdWFuTWdjR1Z5YzI5dVlXd2diR2xqWlc1elpRb3dNUzh3TWk4eU1ERTVDbFEyZFVJemJHdE1NR05vUm5RNU9YZExkbUZ3ZURFemVFbzBabGhVTkhoSFpHRlNUa3cxY1hCa01XNUpTRWs1Y0ZwNk5DOTJZbU14ZDNBNVJEQmtTRUZ1UzNSVlRFTkpSblZ3TUhoUFV6aFpRVkZwVjBKQk1tNWllVEYyZWxsa05HMXRWMVpxUm5BeFFtNTJkazB2TmtaWVJVaGhlbk4yWW5WQ1NYQnVTamRrVlhCVmMzbE9OR0pwV1hGV2QybFdLMk14TWtWalUxZElOamN6ZDBvMk1FWlJlakVyZFVrMGVYbEVUMk55TVRselJVNDNNa05ZVTA5WmNXcHNSMUJKTkhaWU1qaHNMM2xwYzFwTU1WSlROVTk1VDJwQ1psWk1UamxGVjJkak1IQnJVbHBKVjNOWFRuazJSVlk1VlUxd1dqUm1UblpxVjBONk9ERllTRWRDU0RkU00zZ3ZOV1I0Y0VaT1UybHlOMWxVT1dSWkwxTXhTVFZ2Y0ZKdVdVbDZlbWxCTW5KeFZrRjRiRVphZDFSNWFESTVXRzAwTDJWWmNrVmFWeTgzYkRKSFRrVnVabVp1U0d4YVNEbE9WRlJXWW5rM2RVZGlVVDA5OjEsIlFtVnVJRWgxWjJobGN3cGlaVzVxWVcxcGJpNWlMbWgxWjJobGMwQm5iV0ZwYkM1amIyMHNVWFZ2YTJ0aExtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVUtNVGt2TURJdk1qQXhPUXBwVDNaYU5YZHdTR1EwVWtKd2NVbzBlVTVDZFZKdVprY3phVEZGV0VWcE5rOWFMMGh1WVRSWWVWQTJZVmh4WTFSamJuQmtPRmxpUW5Gd1FVOXBLMHB2YVRWRVIybHFRbmRVZUdoUlIxQTFkbTVEZVRCSVFsVjBhMVUzWmt0dGQzVTBiSEEzYVU5blYwSXhUbFJxV1V4T1psbzBOUzlwTW5wbmFESXJXRU5xWlVwNmVYTlFVV2xpY1c1TWFVZFdlVkZYY0VsMU5uaE1UMlJ2TWxKa01HRXpZM0I0VG5GNFdVSlJZa1JFWm1sRWNDdHNWV2RWTW05aFVGSkNSek55WVhObFNtMTBkM2h6T0c5V1MyazJhVTlWY0RCV2Jsa3pZMGt3YzJaMk1qWk5PVXc1Y3l0SlRIcElSbmt5Vm5SM1QxVlNPRTFXVlhWSU1tNVFPREk0V1ROSWRXZFdTSE40VDBoTFFrdEdSVzlxY201bE1IRXhSVWRxVm01bU1GTXliWFZpYjFNM2NVRndNVlY1WTFoc1JWQmlka0YwYWxOMVZtTkxUemhpV0d4S2RURXlPR1ZzUnpsSmEwOUpVVTVHT0RZNWVXeExUbmM5UFE9PSI6MSxVMkZ1WkhKdklFUmhjeUJPWlhabGN3cHpZVzVrY205aGVtVnlkSGxBYVdOc2IzVmtMbU52YlN4UmRXOXJhMkV1YW5NZ2NHVnljMjl1WVd3Z2JHbGpaVzV6WlFveE15OHdNeTh5TURFNUNsWXlZams0YUV0QlVUazJVV3gyZDJkdU16WXlVVTVFZUVwUU1TODRlV2t6T1dwSmJYaHVOMHhSV2poTU56UkZWVmhsY0dwcmFuZHZOMll2UkhaTmJIcHVhSHBZV2xOVE4wRk9hMEo1VW5kdmFEQk9jekJCTTFGUlpGbzNWM0ZDWmsxUWVWVk1PWGhYWjNvNE5tNHdNVk5JZVdsbFIzSnlXRGw2VEVWbk4zVlBhRGR4VlU5SlMyMU1XWEI2VlROeVJsQk9VRE5UTmpCdlpuQldaMlpKWkhCaVoxcFhWbTlPZDNCR1pFeEVhemd2YUROeFNtdDFWR2NyVEhGQ2JrcEVlbXhCWkcwMloxcE9jVk56VVZGV0syeFVkM2hLTkZGSlVXVmpaa1YwSzJ4Vk1FZDFRVGhLVTNCU1dqbFRkVlZzVURKWVJuSjJVME54ZUVSRlZqVnhXbXBKVEc5aWVVbHFjbXRVY25ZMWNYaDFabVJKVmxkRlEzRTBaelV6V1VzMFRUZEllREpMVm01NVNXTkNabTlXU0UxcVdURmxNalEzTjBKMFZWUnNVbUpDV0RscllWWjBXbll5VFhaWFFXTnJTa0ZSTkM5RlVUMDk6MSxRMjl5ZVNCTmFXeHNaWElLWTI5eWVXUm9iV2xzYkdWeVFHZHRZV2xzTG1OdmJTeFJkVzlyYTJFdWFuTWdjR1Z5YzI5dVlXd2diR2xqWlc1elpRb3lOaTh3TXk4eU1ERTVDazgwVVd0UlZYaERSVEJoZGt0Nk1qUXpjV1paUVhsVlZYcENaR3h5YTBvMVVHMWhUMUZ6ZG1Fd2NIZ3lXalpCYWpBNVQxVlFNMGhFV1dVMk1sZHlSakZ2VkhrMlNuUTRTRXN5T1VOa2FEaFBkWGhQUmt0M1pUZFllbUZQUTNWRE5YcFVkamxqV1ROekwydzBXVE5HZVc1TEwwSkNZa2hUT1dVMlNUWTVjbEZtYkVVMmNEaHNVbmMwUkV4NFJIRmlNM2x1TTIxNlNrSmxOSE5DWWtKV2JqazFSMHhOZEhoUVJVTnZWWEJwYTNKUVVUYzVVMUpaTVZCMVZWRnBkbEkwU1ZCSlYyOWlSMGRzVkhSSFRsQXdURzR4Y1haNlpYUjRRbWxxZURadVpIRmtVSHAzYVZKVk1tdG9NVTlIUkhkdlFXdHpSVkJKYmpSNFUzSjVlWEZMY3pGd2VHaEVaMEk0U0ZJMlMxQmpTM0k1ZWt0TWJXeHJiV05NY1d0TWVIVkdaVzVRUTJSWk5rVk1lV2xPTUdkQlFWTnVkblZoU2s5RFRHcHhOVTlMU2pCNmEwcFFLMVpzYWxSQmExQnVNa2w0UjNwVVIzWkRkejA5OjEsWkc5MWNtVjVaQXBrYjNWeVpYbGtRR2R0WVdsc0xtTnZiU3hSZFc5cmEyRXVhbk1nY0dWeWMyOXVZV3dnYkdsalpXNXpaUW95Tmk4d015OHlNREU1Q2tOdGNra3hTRmcwUWt0UmFXY3pNbTVOVmtoVlZTdENUbWdyZHpsNmVHSnpiSEF5Y2tsTFZWVjRRbFpUTmxseFRXSXdia2RIUVhodE1HSjRRa0Y2VUdkMWJsaFFXVFpsYjNsUGRGZHlZUzl1UjNaNFUzVk5TVkZVZVV0R05WUlJaMjByTjJRclVXbERjakU0ZFhscVpGRnpPVFp2VXl0V1pHNXhNMk15ZUhobGIxVldiRTVHYTNsSlZrTkdPVE5oVkUwMGJsSXpNbEJyTWpGYUsySmliRFpCYkhsb1MyVXplakZGYVc1WmRXWTRObEJuYWpWMVJrTnVSbTA0TkRGQ1ZuTjNVMVpEZVRSMGExSnhVekUxYmpKbmNXSTNZVkkxUjNoTllUaENTeTgwYzBFM1RqaFFOMGszVlZNNWFuTlNhekZpT0V0S1JsSlhlRkpIVEZwcmRtNVdVaXRWV1hSMmJ6SnhUWFZTWnpZeGMwTkxZU3RsYkVsV09YbHhTMmgzVGtSckwyWk1aVUZ0Y1hsNmMwRXpOR3gwVXpjd1NGVnJkaXRpTkVWRWJtbHVXRlJNU2todFdraE5lVGxJU0hsbll6SjFUbGhXZHowOToxLCJSR0Z1YVd4dklFMWxibVJ2ZW1FS1pHRnVhV3h2WkdWMmMwQm5iV0ZwYkM1amIyMHNVWFZ2YTJ0aExtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVUtNRFl2TURVdk1qQXhPUXBZYVdGTGNrTm1TUzgxVTBOSE5YWk9OV2RTWWsxdU9WQkdNMEppY2xCaU5uZERZbnBxYW05M2JsbExTRE5aZEVKd2F5dHBlRkFyV0VWamJFeHFRUzh5TVc0MFkwaFNTbEpKTW1sblNGRnNlVTB5VkZweGVta3dOV1Z0ZEVWUlFsRXdZMGRZZHpseVoxbDJhRGhWT1VSNVdHRkhkakZPTnpWeWVIbzRjRUpXUm1NMk1FVmhlRUUzZWtZNFRXSTFNMHhFZGtoaFpYcFdORnBJYlhaalJIRm9RbTlrT1VsSE16VjRlakV4VXpSeEwxUkpVM2R0ZW5OVlZ6ZHZSVVZZTVV3MFkwdHliWHB0VVVGVGJYVjFkVW8zZWxOYU1YZExUM2xVYmxNelFYcG1hRWd4VEhweU1FbHBkMlJ3VDJWeVdFTnRZbU50TDFKNFNVbzVaVFJ1T0RKNk9YcE5jV3A0T0U1SWVHSkpUbE53UVhsdVFuaDJZV1pWTlN0V2RHWkZMMjQxWVdsc1RrNVVPREJGVVhCUk4yaFZTbTlWTmtoWGJGRXJUSHBXYmxVd1IzUkZiamw1WW05bFZrRlRSVmwxZGxscllXbDNRM2M5UFE9PSI6MSxSV3hzYVhNZ1MyVnVlVzhLWld4clpXNUFiWGxyYjJ4aFlpNWpiMjBzVjJGc2JHRmllUzVxY3lCd1pYSnpiMjVoYkNCc2FXTmxibk5sSUNoR2NtVmxaRzl0S1FveE5pOHdOUzh5TURFNUNtRmhXVzRyYlZOVmFDOVhWekZMTVZwR0wwcFZXSFkxWmpWQmVqTXlNblp1UlU5SlRtTTFLMmd3U1RaamJFUkZRMVZaZGpoc1dXSnBlVk40ZVhrclVFTjZNV2N6Tm1rd1JEVlJiRTFoTVdaUlZqTmpSamxwUlVNclUzVkxWM1ZHYzFSQlZUaHpTVWxaVG1GbE1FUlBLMFIyUlhKbGNVRlpiWGRVV1VaQ2RtNVBjMmhLYWpWMlNuaGFaVkZLUVU0MlFWWkdibTFGZVZobmJqVXJhMVZTVDJ3clJHeHBNbTg1YkdWeFQzVXJVbVJGYjNSM2RIVlhTbVZWYVZsUWJrOHlSa3hqTDJOVVdVMDBOSEF2V2s1eVZXTktLMmxSYmt0V0sxcEZjRXAzTVhreVVHTm1SVzVTV1dKVVQyZE1hM1l2WkdGcFZXTjJTSGhrV0RGYU4ySnFjWHBxZVhsMGVXaFRlVXgwZVRaSU5FRk1PWEpQZW5VNVdHMXRVbTlLY3l0dlNsWnRZMVJrUldJNWQwNHlNMjB2ZW5Ca1RuTjFSSEp0YUVGV1oyaEtVRTV1WW1GNlEzWnhiMFk0V0M4dlIzVkNTSGRRT1RCRVp6MDk6MSxVSEpoZG1WbGJpQktZWGxoYTJGeUNsQnlZWFpsWlc1cVlYbGhhMkZ5TjBCbmJXRnBiQzVqYjIwc1YyRnNiR0ZpZVM1cWN5QndaWEp6YjI1aGJDQnNhV05sYm5ObElDaEdjbVZsWkc5dEtRb3dNeTh4TUM4eU1ERTVDbFJ3YVhwemEwUkNaWGxFY2s1VFowcEtNQzlPV2tkaFNtVnFkRVJvTTNOdWVGcHRXamQ0YldSR05XbDRRa2xYVkhweVprMDFZVGROWnpoRlZXeFVOR1JEVFdJMFlqWjJjR2c1UmtaVmRWSktkVVVyWVVwRE1ubzNMM0JvZVd0alNtdFhhaXRwYURaVUwybHpPR1JrVERrelpVMUhaemRFTmtORWJFWlNVaXQ1ZUZwVFV6TlhabFo2YVZsUWQxa3JRWGRpVDFSM1Qwa3daWGxuZVhoNWVGUTVkSEJzVlZkdlFVOTVNbEJxWlc5M09IQTNSR0pRYWpac1VrRjZUR0ZpWW5GdVdWYzFOV001TWpCcFlVVldXRWRpWW5jclEwWTFURUl4UldocFpHUjRaMmRwYmt0blpucDFla1JDZW1SWVJVMDJOR1ZvZGpOSU4yNWxWVmwyYUVwVFdITnlia1V6VGtkMFZVZE1LMGd5YTFkelV6UnRPR3N5UW5wb2RDOWhWSEI0U0U5bU9FSmpNRFpuTnpGbUwxZG9TVFpXWVZRMmFGbElTR0lyTUVaMVlWTkVRa2hwWTJsNVpFRmtOemhTTUV4NU4wZGpaejA5OjEsIlIzSjZaV2R2Y25vZ1RYVmphR0VLWjNKNlpXZHZjbm91YlhWamFHRXViVUJuYldGcGJDNWpiMjBzVVhWdmEydGhMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVLTVRrdk1EVXZNakF4T1FwUFYwNUtXSFpPYjFkSU0wVm9jVTg0UldONVZ6SldWemxVYTJSdlZGWlRibHBHV0VsRGIwVndVaTlLUTFSQ2VrWjZXblV2TUhSa2NWQlRWbXBsVUhWdmJrdEdhelpMYW5ORWNXUnVTM3BoY1RGc1ZrSndPR2huUTFoNWJIUk9WbFJTY1RjM00zQndTVXN4UlZjMVMzRldhMlZtTjJRelRreE5UbVpxUkRkWVRVVkhaVFJKYWxSSGNVUm9SVFpRYm14TFlrNHZUbEV5ZW5CclVtZE9UbTVXTkVWT1VIRmtNRzF2YmtoV1lVRlliak5pTlRFeVkweFhiWGRXWjB0aE5tVlhZM0JrTm1WeVVGTnRjakJuWlRaTE5EVlRjMnRWWVdodlJqQnRjRXMyTTIxS1Z6WnVUbVY1Ym1aVk5scElRbHB1VGtkRVdsY3hXSFZKTUVNclYxaEVVRzVUZVU4NUwxbHlVWFJIWmxkQ2RWTmthVkJCSzI0MVN6VlZhMjFxTjJkRlJra3dUVE15UkU4NGNteFVSVzA0TjJkSVduWkthbEpGTHl0YU5EWkJWMkY2T1dKVFFXODJTV1ZLVTJVMU9XbDFUbUZzUzJjOVBRPT0iOjEsIlUyRnphQ0JPYjNKMGFXVnlDbk5oYzJodWIzSjBhV1Z5UUdsamJHOTFaQzVqYjIwc1VYVnZhMnRoTG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVS01qRXZNRFV2TWpBeE9RcEtZMEkwU2tnMFZtRXhSMWRqWmk4dlVVbDBiakpsVUdoaU4yNUhPRlUyYW5VNVJrVXdWakl5VjBZeVJXeGlNVWc1ZDJaS1MyUnZOMjFhTXpsYVZYQkpkVE5rTkU1QlIwMVJjMWRsWTFWTFoyVkhRVUpEWTNwTWQyaFVhM0phYkdKNVFtSm9UbXhrZWpWMk9VbG5kVEZXTkd4U1RrbExjRkV3TVhsbWRtbG5hRloyYmxreE5IUk9ka1poY1U0M1pVMXdTa3dyTjJjM1VYWTBNR2xzVkRKbk5UbG5MMFJGWjBzNWVXaFlTRkJXTHpWNllWVXdTRUpYUTNGdGNrdGxNVkpMUTFaMVl6bGtNQ3RSZEZkSlRGaFRXSHBhYm5selZ6bDJXRFF4UlRWeGVtOUpSM1l4V2k5Q1VGaG5OR1JFYkZwNllrSTRiREJxTW1SSGFWUkNOMHR4VVZOTFEzRkVlVFJGZERnek9YUldaV2xXZWpkSVRHcFFSREpUT1RVM04yTk1RVmhrYWtaUVNDOUdSbmxTVkVWelQwZ3ZVV3N6VDJNclZXSmxTWFpZVjBoRGNIVjZkbnBQYlhSS05HOVhlbEJEYTBwck4yYzlQUT09IjoxLFJXeGxZM1J5YjI1cFl5QkJjblJ6SUVsdVl5NGdJMmhzZFRFNENuUnpZMmgzWVhKMGVrQmxZUzVqYjIwc1VYVnZhMnRoTG1weklHTnZiWEJoYm5rZ2JHbGpaVzV6WlFveU5TOHdOQzh5TURFNUNrZDZPV0pqVlZrMmQxWXdSMDFDZVZaaGFFWkJWRVJ3VlZselVrMWpNRE5RZW01TldYTkZORGxYTWtSTGRUaHJhbFZEVlRoVVpEQXJLMGx2TjFwQk5rMUpOSFp4VEc1c1RWVjZZbTh3YlU1cFRtaGhLMHAxVDBaekwyUnRUMEZIYW5BcmN6TjFaSGRKYlV0clNVODJSamhXU0hSWU5FMXFTV2xaYWtJeFJqSnlVWEJVVkROT05uVmhPSGg1V25obGFraHpSR2xPVG5ob1Jra3djbmRzTkZSVldqZFZObGQxWjNkVFpGTkdNVTAwVG1kdk9WUTVZbFpwZVhsWlNVRTBLMnRRTjFkVGFrOTFNSGRhYjBsQ2RtTmpTMWg0WW5kcU1FRm1ZalIyY0c1Wk9UZEpLMlpoWTA1TGVqUXJTelJLYkVFeVdXaHpNemhXT1hsWFp6WmxkQ3RXWXpneWVtVmtjREE1ZEZvNGRFUjBWVFpuYzA1TU1UQlFPVlV5YVV0Nk1qa3lSSFJSVlRaV2MzUkZZMHdyZDJneFNFcFBNREpJTW1OUVdXRjBTRmhaY0ZSRlNtSkphVTEwVlVkQk56aGhVa0V3TTJsc1VUMDk6MSwiUVhOb1lXNGdSR1Y2YjNsellRcGhiSFJ0WVdsc05UVkFaMjFoYVd3dVkyOXRMRkYxYjJ0cllTNXFjeUJ3WlhKemIyNWhiQ0JzYVdObGJuTmxDakUzTHpBM0x6SXdNVGtLU1cxUFVXaFlVa2t5UW1wdlRrNUtVVXh1V0d4QlZsVlNhVEJNY2taWlRubE5ZMFUzTkVRMmJuSlpVSEJTY2pBd2IyVktWMHR6UlhSaU1UTm5USHB5YVhCWmJFaEpZV2hOWkc5NGNWTjNSSFZFSzFWSE5FbDZUemRDTkdGT00yeDNlbGhISzFGdVJHRjBRMFUyY2l0S2EzZzFUa2h4Wnpjd1VGZElSVlUzWlRGcFRVVlhhemsxUlRCdk1WaFBaMDkxYmtWTVJGRXllRlV3V2pkYU5YRXhTbFpPYUhOV1pGWlVWekJVYkhkTFRFUk1ZV2xLYWpGRWRVdzJRbTlVVmtObmNYQjZSRGx6YjBJNWVYWkRaRkpuUmpWc2VWZHRhVWsxUVVoaFZsQjJkRE40SzFnd1ZqRjNlVVpUYVhaQlpXVTFaVGRyUVVsRmMzTmthak5GVEhsd2MyaGhSVFZ2TlVWT09EaDFLMDVvUlU5d1V6QkJVVmxsV1ZGbFFWRXliRlpoZVdkV05GcERja2ROY1ZoMlNVMDJSV3B0ZDFCM1pFTk1LM1p4UzBsalJsaE1iUzkwTHpsNmVXMWtVbFo2Y0ROalNEVk9Xa2gzUFQwPSI6MSwiUTI5c2FXNGdRbVZzYkdsdWJ3cGlaV3hzYVc1dkxtTnZiR2x1UUdkdFlXbHNMbU52YlN4WFlXeHNZV0o1TG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqRTBMekV3THpJd01Ua0tZbU50U1ZOdFJscENSSGRtZGk5aWVEZERkV3g0TTBoQk5XdFFPRFJIYVZWUWEwaE9OazlOVVc1NGRGcGthRVJEVUZRMWFGUk1kMFpxVG5sNVZIVmFiMDUzVFhkaFZrUlhNRXRUYkRoTlZVUmhiRTFxTVdsRlRHUXhSa1pwVjBkQ2EwcDBVVWQyVTNKdFpHbEpWbU0wUjNFd00yZzFjM2RuTjJVek5VNHdTa1IyYVZORWFXNTFWREp0UkVzeVkyWXZNRzVZYkZKSmFGaGpjWGMzZEVoT1drUjFRbWt5VmxKa2FuTkVTSE5rYmxaT09UWTFhM2hHUldOdVJYZFVSREZrTUZKUmVqVkNNa2xJVG1GbE1sSnVaR0pFVG01bU5FMWhPVkZYTVZCcU9GZGhNakprZGpVd1NFaHlWV3RtWWpCWlQwOXpXRzE2TVVNMmFWZGFaMHREUTBJd1lsbFNkUzhyVlVoU2FITnVkRzFFYWpZclNtVXZkVzVLWTJKUE9XODRNbEptZUhKcVdqSXdjRlF5UkZwaVprVnZVbXROY2l0ck1WVXdaM2hwUkZGWVVWRkNibWRQYm5Rd1EyZGFkRXN4VW1SQ1EzTm5QVDA9IjoxLCJZbkpwWVc0Z1l5QmlkWEp1WlhSMENtSmpZblZ5Ym1WMGRFQm5iV0ZwYkM1amIyMHNVWFZ2YTJ0aExtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVUtNRGd2TVRFdk1qQXhPUXByUjBabVRFVlBkbFJ3ZDA4d1UzbG9aMlprVG0wcmRXaEplVEpuU2xWSFZHUkVSVE5WZERGRVZuSlVTelpxVld0T00waFdWRXhTUkM4MVlUWTNaVlozYm1ka1REaEtaV0oxVFhkVFJtOTRlVVJXVXpObFZVdHNhM000UTFSclZ6VXZUa3hDZUVRMFVYTkthelZWWTAxRGJGRm1Zbm96Yld4M05YUm9SbEp2TlZGMFRWRm1SbFZsZUhKMGMyaEtiSFJSWTNSeU9XRTBaVnBCY25KbkswTkhXRk0wTjB3NGIzUTRPVVpWVTA4eFNUVnJaVUpOU1VvM2QyOWFVRzlKTmtGWmNVNXhaRVZyU0RBclNUQTFSVGhoYVdGaFJsaFRRMHRPYjI1dFNraHhkM0F2WlRWNmNqQmxNalpKVW5WS1RUVllhM1ZOYm1FeFVFcE1ZWGxPYmt0WFltdG9jRVI0UVVkQmRXTXhWSFJuYURWYVJrc3Jja3BHYTFGdk5rbGxaWEoyY2pKTVRWTnJObGhWU21kM1VHaEZibmt5VTNCdWNXNXpRbkpwYlVodmFGUkdWMjFSY1RKV04zRm9jbE13Ykdwc1lrbE5ZMmM5UFE9PSI6MSxVM1JsY0dobGJpQkVaVzFoYVc1bENuTjBaWEJvWlc1a1pXMWhhVzVsUUdkdFlXbHNMbU52YlN4UmRXOXJhMkV1YW5NZ2NHVnljMjl1WVd3Z2JHbGpaVzV6WlFveU1pOHhNUzh5TURFNUNrTm5aazlxVms1UGVIbG5lR3RPVUVaNFkzQTBhR1ZrWldZMk9Ia3hZV0pWUlRWa1dWTkZXRkoyVFdkUWNVUmhWMjVVYTBRMWNVaFhhV1JqZHpKaWFWcDFLeXMzVkhZM1J6ZzJZM05YVGpSYVVHSk5hV2xNY1cxYVZtOVBLM0ZLTVRkNk4zRkNUbFF3T1dOU1NEaExXbWhtUWs1Uk1EWTJiMGhPTURWblNVcEZRM2x2TTBaaWNUQkZPVFJhT1VSQ1FrSnNWMk5HZDFrMVdqRjZTelU1V1dVNWJXWnRWbkppZDFGblkzZGpiVFZhTUZwWFZHbHdhVkZsT1ZkV1FtOHhhVXR3ZFZBelowZEVPREJQTDFaTFpYbEdTbkZMTmtOWGNqWmlObVZrTHpBM1dUUmhjR1JDVG5FclNDdGxhbWxOVVRkS1kwWmpTVlI1VTNCR2JqSTNTRFpKY0RFdlJXeFRVRVJVY1ZvMU4xSjBjUzlIYW5abVZqbFNVRGxCZEZSUU1uRkdNbWxFVXpGbVRXOWxRbTR3T1hKWmEyVTFaVFp2Y25Sb1l5dG1NMWxVTkZCQlVtTmpXbGxwYnpGWmVVNUllVEJLWW1GTmR6MDk6MSwiVm1scmRHOXlJRUoxY21SNVpYa0tkbWxyZEc5eVFIRmhjM1Z1Y21selpTNWpiMjBzVVhWdmEydGhMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVLTWpRdk1URXZNakF4T1FwdE1FUkRiM1JWVGxrdksyRmxTSGhsTUhaTlRWQmlhRGd5VWxRMlFrWXhheTl1ZWpWS2QxbEtWMVY0UzBWTlZqZGhialpWYUhOTFkycGtVRFJxVlVOaGVHaDJXbXhGZUc5aGFFTkZNWG80ZEhGMk5YVnVVbTFVV1ZsRmMwRnJkRkpRTUV0RlpUaHhZWFJsVFVad1oxbDRSRGgxWVZobk1FOVNSbkpOUmxNNWNGUjZValZNYTJjd1dubElPRnB1VjBWVk0wTnVSVE5JVG5oTFJrZENjRmxSUzB4cFRWa3lTRGRJU0VGR05rdzRWVEYwZG1GcFYyTXZNMXBhYlRCcmIyZEpUeXRJZWs1eEszcGlNVEYwYkM5WmMxUk5UMDV4UW13NFJuQkRiMVF2YmxOdmRtZHpRV1pKVkdaQ1dVVlhlVko2TDB3eFVrUnJia2hqZDB3d1dHY3ZlREp6UTBwdllqQjFTM1UyUjB4RU1tRmxXVTUxYWpndlEzVnNOSEZVY1c1bWRqSkVORkpJTjNsWGRqVllhMlZKYTNsUE1tVkRUbTVzY3pnMVJWbFlVV2R6TVhwM2NVWkhibVUyWVRKRFdsZFBUMGx3UmtFOVBRPT0iOjEsIlRYVm9ZVzF0WVdRZ1FtbHNZV3dLWW1sc1lXdzVORFZBWjIxaGFXd3VZMjl0TEZGMWIydHJZUzVxY3lCd1pYSnpiMjVoYkNCc2FXTmxibk5sQ2pJMEx6RXhMekl3TVRrS1RFUnlkMU0wU0hSd2F6WkxXRnBMTVc5Q0sxVmtVMDg0Y2pKRlprOHJSM2Q1V1VFMlRUZDFUV1pXYkhKbUwycGFObWQ2ZGtRMFpDdGlja2xTU1ZsSGFsVTJVVGhETDFWUksweFVaa2h1YVVGQk5uUjRWR1ZvVERGaFNrNTBXVmxKU1VSSWEyUmtOblJaWVRodlptUXJjRWhFZFZGdWVFVlNWR1UwVm1oVlkxUnpMME5FVUcxWVRtMXNhMlJDYjB0bGNHNVVNVFJNYmsxSlVuUnhXWHBvVjBSQmNtVTJZa1ZHUWxKMlRYbE9aSGxvVlRCclkxZ3dlSGxrYkRCbGJYWkNSbE5FYm1OeE5VSkpjVXhsVjNWaVJqVkdhRXBQYjFWR1J6aEJVV1J2U3pKdFkwcEJRbEZCUjFCcU9HcHVjV3hrVkdSdWJuZ3lhalEzTmxRNE1qUk1XbGhNUkVoVlJEVlBjWGRzYUcxQ2IyWkpaVU4yYzJkV2QwOXNiVmhDWlZCak1IZEViRmRSTDJkc1JVWnJOR1ZRU25SUE5Ha3dXbEUxTkRsck5XVnZhRGxYYm1KaFZHUnVhWFpuVVN0MVFVNXlXRTF2UlhWQlBUMD0iOjEsIlNtRjVJRXhsWlFwcWFHeGxaVEV5TjBCbmJXRnBiQzVqYjIwc1VYVnZhMnRoTG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVS01qY3ZNVEV2TWpBeE9RcEhNa1F3TVNzek1UUklNRGhKY0dkeVJFdFZZbEpsUzBNdmJqTlNkRWd5ZFZOd2FEUmxTV3BJT0dRdmIwUkthMGhIUkdNeFNEaEJPVWx6UzFSRldqTlVhelZ6TURaUVEyWTBhVkJ1Y1U1elQyMXZiemMxYWtkQlREUjBjRTFUTW1aMFYxQlVTMnh2U2taUE0wMTJkMDVsVVhGRk1FZzNTelF5Tkd4NGVIRk1aa2xyZW0xWWJHdDBaREkzVDBReFVYcGhjM1ZMWlVwemJXaEJiR2xNY1ROdk56WjNWbkZJUW01T1JXTmhiR3BOYjFOUk9TdHBNaTh4UkdKa1JHbERVV0phTlZSb1JYQkxTbGxzVkU5WlR6SmhVa0pHU25NMFdYRlJXRVJyYUcwclNXbEtWV2RFWkN0TFFrdE5NRzFTZWxFclFrNTRia0pTUWxWVFNFRTVkV1JYV0RVdldscFdXbU4zYTNaQ1pURnpUVkVyWms5cVFYRlFlVkYwV2pBcmIwbFZOMjR2UW1sM1UwVkdSMXBpYlRKalZqaExUbGhpV0UxWk5FeDROR2dyY1VObldsbHZVbEZLV25OUFFXdDFTMFpoTDFneU9WRTlQUT09IjoxLCJVMlZoYmlCTllXZHBiZ3B6WldGdWJUQTNOMEJuYldGcGJDNWpiMjBzVVhWdmEydGhMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVLTURNdk1USXZNakF4T1FwbU1qaFhWemxRTWt4S05EWTVPR2gzVDJzNFZqWnZZa3RKTVRkNWFFUnpNazlzUkVOVFoyNUhMMmMyWmsxTGVtMDFMM2xDWlhNcmJrNU5kbkZaUmpSdE9FUllTRWh1U0VsM1ppOUVZVmxMWlM5S2RsbFdjR0ptZUdWTlJuTXZMMDU1YlU5RGJrZGxSalJEV1VSSU5YTlZXR1UxU1U0MVMxZFBlbVUwTDIweFozQndOMjA0ZGpKVFpEWkhUVEUyUVVjdlNFSlZNMnB2WmpWd09DOVpZM1pxTm1SSFJXd3ZhM012YkRJdmRWUmtOakoyVm5ZMmNreFpiSEZ6TTA5RGJscFllWFZpZDFSM1VEVmhXRkZQZEdabFJFa3dZMFZNVUcwMGEzQTNiaTg0Y1hVd1VWWkdValpDVmk5RlNVeDBURFZOVVVOa0wzWmFNM0JyVVhSV00zUTBhUzk0T0ZNM2JWcFVUekpxVkV4MmEyTjFhbVZwVlU5VVRWQXJhVWxTSzFSMUwxaDNha2s0V0dsR1QwOUVUbUV4ZVhsVWQzaEdWSEV2TTNkUlpGVndVSGxFWnpGUkwzWkZUQ3RYU1c5V1oxRkVWMUJWWTFFOVBRPT0iOjEsUzJGcllXOGdRMjl5Y0M0Z0kzUjFjemx5Q214cFkyVnVjMlZBZEdGdVozVnVjMjltZEM1amIyMHNVWFZ2YTJ0aExtcHpJR052YlhCaGJua2diR2xqWlc1elpRb3dOQzh4TWk4eU1ERTVDazB3VEV3dmJtUXlRMlJ1YTFsYWRpOUliak5wZFU0NFVXVnFjaTgyYkM4eE1TOXFRbUV2VUhGblIyTnlVMlZTZW1WV01FOUxSbVJDVjJoUlEzSXdaR0p5U1VkcldGUjJhU3QyYjJvNWFFaFBSVEZwWlhOTlQwdDRlR3BKWmk4MFFUSkdSMjByVUhaU1EwcHNiSFF6ZURCcFNXVlFUR3BNVGxGblNrVnNkV1kxU2tabFdFaHBjVFEzWkdWa1NIVXZRVzVCWXk5eFlsRjJiVU5TYkRSdVNraFFOVUZhTVhoeGJqbERRblEyYjFkQlJqWjJibU01VURGVFNGWk9WMGRXVFVoSFoxbEZWVXBWY1ZwYWF6ZzBhVXBoZWxrMlkzWjNaVFZHUzB0MWFUVTJVbTFtVEhKa1NXNVlWakZoWW5SNVltVlZRbWd2TjFablpuTk1la3h0TldoTFowMXJkbnBDZGtOSFdDdEJXRXRtUkd4SWVtSnBLM1ZJV2pOM2MzRlJPVEZRTm5oamNWRTBjMjVNUjNNMU9VeHhWRmRVVEZvNFRVODVjV3BpVHpOM2JGTTBiR2MyWjJKeE9HOUdNa1ZVV1M4d1NtdHVaejA5OjEsVUdGMWJHOGdRbXhoWTJzS2NHcGliR0ZqYTBCbGJXRnBiQzUzYlM1bFpIVXNVWFZ2YTJ0aExtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVUtNakF2TVRJdk1qQXhPUXBYZDBWWVUzTnhNVWd4VTI0clJGVXhaMUZCVUUxUlptRnpaVGRsVm5ReUwzVmpiVTk1YzB4cFNEUkxaVzFDTmxKWmRYcEpkM2hqVm05WE5rNDFheklyZG5sU2JVbGFSRzV1WlZoQ01ubGpaRTFNYjNob05FcENZMjFEWTBWM0wxWkNVbUZZUTFGMGVVRkxaMEYzVmpkRVFWbHlSMU4xV1RKdk9FUXlhMWMzVUdzNFQwdGpNSFYxVVRKT2FVWldXRWhaVEhKdVUzZGxla2t5VWxCMlpXeHljMnRWY1ZSTFdrdGhOWEpvYzJGelZEWjJWalk1UWxvdk4ydEZLMEZTZWpSR0wweEhRMVJCVFhBNFZGRndOalpTSzJaeFUzQkthbVJOV2xwRmEwVm9jamRZTlc5V09YQXdXWFVyVWsxb1RHWmpPWGhUZWpKMlkyUkRaRTVQVlRGT1lXMXpjVVJJVkUxS05GSlNORkI1SzFoNU5DOUphMGxMVlhodldIUTNZMnh6UjBaaFdXOUJWMnhWY0hZNVptMTFRbTFsV2xWemMySTVkMjVHTTFKdlowMXNjR3ROT0hOTWQyNTNjVWhpWTJKb2EyNW5ibmM5UFE6MSxSMkZpY21sbGJDQldiMmxuZENCTVpXRnVaSEp2Q21kaFluSnBaV3d1ZG05cFozUkFhRzkwYldGcGJDNWpiMjBzVjJGc2JHRmllUzVxY3lBcklGRjFiMnRyWVM1cWN5QndaWEp6YjI1aGJDQnNhV05sYm5ObElDaEdjbVZsWkc5dEtRb3lOQzh4TWk4eU1ERTVDakYzYlVkSWJqWndjekl6YWpOM1kxaHBWSEpYZERaRWVUaHNOMkpXTml0WU1XZ3lhRUpVY0dkUlEwaHBLMUkzY0hkRmNXbDNORFIyYkhsSFJHWXhiSGRXTDBSeFJuZHJhR1ExYkRkWmRUaHpUVVZWZDFkSGFHbFVMM1l5VDBvdlRpOXVlbTVVZFhkMWExZDVWa2xDYkRkSWFEWTNlRTF4YldoUlRGbHZhSGROYmtzeGIxTjNVMUIxY21ZM2VFSm9XVWRJZUNzM1YySnVRbWxvV2tOMVZEVTFRbG81UkVScVdtY3lhM2MxUVc1NE9GbHhXazFQVTNGclp6ZENlamc1VDJsSk5HVk5TR1F4WVdSQ1NXNUpOblJ6TTFweFFqRnVVRlZvYW5OMlVEVTVNSHBhYTFOelV6STBiMjFxV1cxb2VXNVZiMnh0YjFveFRUZFhiR3BEU0RSc1ZYbFpaa1JQZGxoS2MyTlFOMWhhTVZwMFVsTktURVZwSzNaYVRUSlZSMjlyWkVreFZXNUdUa1IzWTFFNVlVNXBaamxhU2xwdEwyMHlkbnAxVDJ0aE1FUlhVR05qVDBGaWMwbE1aWGQxV2xKTVNHeE1RVDA5OjEsUkc5dFlXZHZhaUJHWVdKcGFtRnVDbVJ2YldGbmIyb3VabUZpYVdwaGJrQm5iV0ZwYkM1amIyMHNWMkZzYkdGaWVTNXFjeUJ3WlhKemIyNWhiQ0JzYVdObGJuTmxJQ2hHY21WbFpHOXRLUW95Tmk4eE1pOHlNREU1Q2pSSlV6aHBaVFJwVEd0cFoyaGxWV1J6UXpaclZrTTNXbEk0UTFaNmNHdFJkU3RaTUdkM05GWlpVRFpvZDFoSVFrMTBiSE5PU2t0RVpVdFdkR3RLYW5ZeE5FMXRSRGhyY0ZCMWNEVTFVRlZVUXpWTUwxVnlXa2hTVUV0Rk4xVkhTRGRZWlZoM00wWlNjVmsxY1ZSWVR6VjNLemhtY2xaTVkwWjJWbnAwTVhVelFUZFRXbTVPZURCMGNrOVNkMVkzUW5WMlFtSkZNWGhoYmk5UmEwRkVUbGw2ZFhReUx5c3JkREJxUWxSTGFWZDJSMHMyUVdKTlNXcG1kRkZrUjJGV01HNTNOMDFRZFhCRmVHSjVjWFpKY0VvMVRqa3dNSFpFYWpSc1VHNU5ZMEkwYXpGT1QwbDZMemgxTURoTlVHWmxURWx1WlRCeGVEZHBZazh6VTNrdmQyUTNOa1pVYVRWWGVWWkhiak5IZWtGTlp5OVljQzlXV2l0Q09VeEtVaXR4V21sSGJDOUxjMUJ6U2tVdmNub3JLMEpOVDBOV1RUWkNiemR3UjFBdmMyOWhTM1JWTldOS1JHUnRaM1JYWVdoNFdsZGphWFpxZHowOToxLCJSWGgwWlc1a1pXUWdWSEpwWVd3S2QyRnNiR0ZpZVdwelFHZHRZV2xzTG1OdmJTeFhZV3hzWVdKNUxtcHpJQ3NnVVhWdmEydGhMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVnS0VaeVpXVmtiMjBwQ2pJM0x6QTJMekl3TVRrS2NEQXdPR1JVY3pWR2VXeGtNRGt2UTJsMllsYzROVlZwYmtWd1ZFMUpXazByT1hKa2FYZ3pVRFZhUTBKa2VrSk9NbkJWTjA1VU1sWkhPR05GYURSa1lrSk5WMU5WV1VoYVdYcExhVVl4TVVKSFV5OTRTa0k1VDJoRlZsSjNkVkY1V0RoallWVlhNa1ExYzB0Sk1IQnBNR3BrVW1SRVpUUkRRbFprT0RkTVdERjJWa1p6YkM5R056aElRblZZVlhaemVISnRNM0p2SzJoM01IZDRRMnRtY1dabFkyNVJkbkZGTVhWUWJYWklhMnRhYW5WMVltY3JTMWw1VW1ORVNrRlFZbWhwYUZnMFZXcFRhV2xYV205bk9IcDBaVmN2V0ZoRWFYZEVlRWN4T1RSbmJGZzBRbE4zZVRoUVFqaGhPR28yZEd4TFNWbE5UMjUxYm5sR2VVeDVOR05VV2s5MVJUUnhObVZsYUhOWmRIZG5VV2t6WjNad0x5OUhZV2xEVGxCaWVqZDBjbWRpVERsaVkzZFZZV1JLYzI5TVlYVkRTV1l4VlVKNFYzTlJhSEZvWlRSVU0wZEdNVXBVYlhwVVJVMTBTV0ZvVXl0M1BUMD0iOjEsUkdsdGFYUnlhU0JTWlhsdVlXZGhDbVJwYldrdWNtVjVRR2xqYkc5MVpDNWpiMjBzVjJGc2JHRmllUzVxY3lBcklGRjFiMnRyWVM1cWN5QndaWEp6YjI1aGJDQnNhV05sYm5ObElDaEdjbVZsWkc5dEtRb3dOaTh4TUM4eU1ESXdDa3hpV1RCaVJscENNV2R6UmxKc1RUVkhOblEzTnpaM1VtRmtOa1JvUlhsRWJHZGhXa05zUWtRMk9FZFFOR2RWWkZVelZrUnNibXROWkhkb2MzcGtUV05rTUVwMU9EZGtjalIzZDJzMmFXeDBTbFZ4TlZOSFprTldORGQ2ZDB4NGIySkRZVGRpT0ZGRWEwbHFiR3R3SzNka1ltaGhiVnB6VkhNM2FGTmFkRTEwVDNkclIxTjVOV1JRYlU1cWFtUktUVkpESzBaclUwdEJWMHRJTmxFcmVrcDNkazF6WmtkQ2JtNVpVbGR0T1ZoTVluY3hSVmxDZEhoSVVVa3piMVZwT0hWV1IwSm1aMWhMVDNoclkySTFOa3BYTkdkR01TdHhlVnBZZVRSek5tbDJZbmR5Y0ZoeE1sUmpia05zT1RkblFVcFBUVE5ZZEhOWmRtbGlUWGxVTHk5YUx6ZDBiRk4xYTJ4a05XTlVaek5DZDB4V1VrMU1ObFUzV214U1RXUmpXbWN2UWxScE9FVnZTelZKWlZSSVRXSlhkSE5NZG1oellWZG9hM3BFY1Rkb05rNXlZeXRCTUVWaFZUbElRVnBOVWpkM1owWlFkejA5OjEsVEdGdVkyVUtiR0Z1WTJVdWNHRnlhWE5vUUdkdFlXbHNMbU52YlN4UmRXOXJhMkV1YW5NZ2NHVnljMjl1WVd3Z2JHbGpaVzV6WlFveE5pOHhNaTh5TURFNUNtSnhUSEJVWW5sTlNGZG9LMkp4YUVWa2JUVjFja3g1ZVdSS1NqbFJTRkJPVDFoSU9EQnVaM1ZZYlZwWVZrTlBORkV3TUcxTlRUWnZiV1ZzTDFwSGFERmliM2gwZWtrMWEzSXhPRGxqVkdZMmJDdG1lbEZpUTI1TVEwRnZVSEJhTWpFcldGUlFibFo0UldWM1ZIRlBiR0ZwV1RsTE1VczNZWFZJT1VadFUzcHdRbWtyYkZKcGJXNXJhME5YTm5VdlZVOHhVVTR5ZUhOc2NrUkNaRnBXU2tod1NXZG9WVFZNVUdkU1ZIVkVRbTVZVWxOa2RrNXVSRU5XUmpOTmRIRlljRFJMZWtKNVJEZFNORlZHUVdnMmVscG5LMFJ6ZFc1U01YWkNMemMxYWl0SFEyaHBTVEZHYVRob2RWa3hiV0Z0WVhJMVFqbHhPWHBJVXpWVU4xRnljRm8xV1hobllYbE1SVGxwYkVOcVFUaGplalJoZWpsQ1NraDJSelF4U2xOSWEwaE5OakJqZFRaYVNXRnlibEp3YTFCVldETkJjR0Y0UkVWckwySjVNRXRMUVZnM1YzRndTelEzUjJ0RVdHY3lhbVUwVVdvMVFUMDk6MSxSMlZ2Y21kbElFZGxiM0puYjNCdmRXeHZjd3BuWlc5eVoyVXVaMlZ2Y21kdmNHOTFiRzl6UUdWMGNtRjJaV3hwTG1OdmJTeFhZV3hzWVdKNUxtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVWdLRWx1ZEdWc2JHbEtLUW94Tmk4d05DOHlNREU1Q2xscGVXVk9hbUpCYzBkcGJsZHNOVVJPVGtkMlZtdEhNRlV6T1dwb1Ztc3ZkSE5IVFVoMFVYSTVOakJRZEZwUk1UUXZlVTlKWVROUGJHWmFjak5xZDFaSGFVNXdRamR1YjBaTlVubFhlVkI0WjB4NWFUVkRhUzk2UkdkNVNVdGlOMVpYWWpsV1JVRXdhRUpvTjA1MlZ6SnNaR1psUTNScFdVUlZTa3A1VDJwd09WSkNNbTQ1YzJwM2FVMUxaalZLUjI0elZIVjRPRk5wTjJGMmMwVTJja0pvVVcxTlZ6QjJVVzlaUkhKUVVHVnVRbEJGTDNWaVdXTXZlRzVxSzFka2QyUmFXVVY1VW1GS2J6SlhXa2xhYVhGRlRtaHZPWE41Wm01Q1ZtTklURW9yYkdSNmRrVmxaVmRaWVc5ck1HMUtPV1JETkZSdmFHbFNkbkJHUzNOd05tdExZbXN3TjB0WmQwUTBWRFJ4TldsYVR6ZHZhVWd2UzBkTFJteDRabUY0TWpkMlUxRXhla1ZrYmtKYVRIWk5XbEZPTURoYU9XeEROV2x6THlzMWVrMUpaMnd2YUdSQ1VubE9aRTVNTXpWMGNqZHJSa1JxVVQwOjEsVUdGdVlXZHBiM1JwY3lCUVlYQnZkV3hwWVhNS2NHRnVZV2RwYjNScGN5NXdZWEJ2ZFd4cFlYTkFaWFJ5WVhabGJHa3VZMjl0TEZkaGJHeGhZbmt1YW5NZ2NHVnljMjl1WVd3Z2JHbGpaVzV6WlNBb1NXNTBaV3hzYVVvcENqRTJMekEwTHpJd01Ua0tZVXhvWkVKSlFYUlljbXBoVEV3d1pWcERVbE5ETmpncllraFVNbEZVWkVSellYRlRkRGxUYUhCNldHeEhkbVF3TXpjd1psTjFNVU5zYmxkV2RUUlNSRGxDZW1GeFF6ZzBPVGMxYjI5SFYzZzJSMGt2TmtFNFJpOVRjMHN2Wms1aFUyWk9NRVpsSzBWT1NtTnBlbkJrUjFwQmJta3ZLMWczWW5vMWRqUXhjRzgwYlM5c1owZHNMMjk0UldGaFFVdHhlalZuY0NzNFdFdEZZMVpHUlRkUGRVWnNNV2RqYUdWV1FuTnVSbmRLY0RoRU9GaHZjemg0V0ZsSE5GRTRSbVJCZEZsclJHMXVLMWR1U21WU1Z6SmxPVlJhYVdsTldWVmtlbFJ4TDJ4Rk5tVlFUbUpaUTJVdk0xQjJUMnhxVjI5bmJIQlJkbTVIYTBWeFRVNUtTbVpRZGs5NWQxaERSMVpOTkZKd2VrcFFZVEJRTVZKUGNGYzRTSEpWZEZKNU5rTnVia3BoUnpBM1ZrMU1iRFpuY2xKdVExZHNRa2g0ZFU1c2RXaHRNaXNyZGtSelZsVlZia1F3YWsxTVZYRkpUVmh2T1RkR1VuaFJQVDA6MSxTbUZyYjJJZ1VzTzJaSE4wY3NPMmJRcHFZV3R2WWk1eWIyUnpkSEp2YlVCbGRISmhkbVZzYVM1amIyMHNWMkZzYkdGaWVTNXFjeUJ3WlhKemIyNWhiQ0JzYVdObGJuTmxJQ2hHY21WbFpHOXRLUW96TUM4d05TOHlNREU1Q21sc2F6SjJZWHB6VDBWVVduUk5SVlExZVc4ME1WSjJSMVE0YTFGS1lWbDJNbFZLV2pCc2IzTnFTMVJHUjFGSFRFUlpiRVZ6Unl0aVNrRkpTbmRYV0RJeUt6RXljM05HV1VKM2VEaDNhVzFwVm1oMmVuWmllRXhPUlZSSGVWYzRjMnhaVVZOV2JWZGpaV1pWTXl0d2VqbFlXa05NWVZSM1JEY3dSWFZzY0ZONFJXdENXRzlUVW14dU9VZE5WMGR0UlZac2QweFJTSEpOWjFGMlIyVTRUbEZKVkhaVVVTOUJUWGRNUTBRdk4wUXpkVVJYUW1oa1V6TlhZMWhtVm1KRFVFdDZTWFphYkVwTWVWcG5ibEpKTkhwSGNGWkJaa0p2ZG1oSmJucE1ZMWRIYTI1T1UxRktiMmhhWlhsemJFVlVTR1JKWWt0WVJVaDRXRnA0YWxoV1V5c3paR2hqZGtSWFJWSkpTbTlIZUZBNWFETldTbVU0YzB0VE9GVkpaekJPTnpCQ1EwdHpaWFJLYm0xYU1rWnFibWhhYUd0allrNHdaVEo2UVRNMGFHVlZRWFZ2T1c1aWQxbzRiRkZKVUdZeEwzQlpWbmxHZHowOjEsUjJWdmNtZGxJRWRsYjNKbmIzQnZkV3h2Y3dwblpXOXlaMlV1WjJWdmNtZHZjRzkxYkc5elFHVjBjbUYyWld4cExtTnZiU3hYWVd4c1lXSjVMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVnS0VaeVpXVmtiMjBwQ2pBNEx6QTJMekl3TVRrS1NYZHBRUzlMUkdseVN6bExlamg2V2pWV2RpOWtWSG8xVTJWcWFtNTFTSE5sVWpSemVtaFBlakZsYUdkNlQxQkxhRWh6ZEVsVFYzVktibm8zVFhkQlMyWkRWa1JuZEdscVZsZDFOVE0wYm5obVFteEpabGRNTTJnclRUbEtjMVZxYlV0T2FWTjNiSGRPYkdwMmJVNTVWSGxrSzFoaUx5OXhiV1UzY1c1YVoyMWxSMWR0VkRJME5EUTFWV2xoYVVWV1NrMUxlWEF6Um10SU1VSXpVVXhwWWt4V1NYQk9ZMmg0UWxSQmIyaHhiVVZ4VjJFMFpHOTBha2R3YjFSb2VscHNSRlY1WlhOdFoxTTVibWhHWW1FMEszWktialk0ZFd4TU5UWk9OR2xIZFdoMmFTdENNVVpzSzJObUt6QkJPVGREVWtWdldUY3ZjazVMV0RSVmNIcDFXR3BsUzNsSWEzZElNa052WWxweU9YWm5ZbTAzU2tGT05XdGxUVnBzZDFRemJuRnhPVVJCYVdreFZHeE5VV3BRWW5CUFlsazBVR3R5UzJSb1kxWlhUV0pLYnlzMVFXVldka05OZEV4VmNIRkxjRlJwTmtKblBUMDoxLFRHRnljeUJUYVcxdmJuTmxiZ3BzWVhKekxuTnBiVzl1YzJWdVFHVjBjbUYyWld4cExtTnZiU3hYWVd4c1lXSjVMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVnS0VsdWRHVnNiR2xLS1Fvd05pOHdPQzh5TURFNUNtWldURTE2Y1hGb2FWUnlWRWg2YVZNclZUUmpjSFUxY1RsUWMxWkJOWEp2TXl0aFpqbGtOM05YWmpZd1ZUTnZiVmhrWTA5RFNFRTBNekpyYVdGRGVEWlZiV3hMUm5NM2JXMDRXalZ2WkRoU05EZEhOM1ZPVEVrdlQzSnJWbWxGVTI1SE9VMVBZV2xxTDNWVWJETktOSEpvU0Rad1VWUlZhMDVFUXpkVFprRTVPVlZKVGpZNU4zSXpLMFZLVEROVU0xUlVXa2RMYURBNVVHUlhlVVZ4YTBGU1QySkJNMnhqT1dNNGIxVkRPWFJ5YkhRNGExQlZialF5YlZwSGRFbFhWWE50TDJVeVFWWkVVRlZXYzI0M1YzbFJaV2htYm5OdFlWWlBhMVZ0WjFsbVRqZHFSMjB3YTJVeU1YVk1VMXBXVVhOMllqaHpZMEpTYVU1bE0xbDRjbVJhVUcxVE1uWjRkMWh3WkhCeVpWSTFaWEp1WVdWVUsxVTNTazVvYjBJcll6QjJWbE5sVkZGYVRXOVZlR2hLVUM5RlZ6UTBabGRqY0U1WFUySTBTbHBJUjFSaVpHVXpVMXBOU2taVEwwTTBibEZDT1hkSlp6MDoxLFRHRnljeUJUYVcxdmJuTmxiZ3BzWVhKekxuTnBiVzl1YzJWdVFHVjBjbUYyWld4cExtTnZiU3hYWVd4c1lXSjVMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVnS0VaeVpXVmtiMjBwQ2pBMkx6QTRMekl3TVRrS1NVeGxlWEJTZVhseWNUVjBiQ3RZVW1aWE1VZzRjM1Y2VVhreE5IUmhMMEpJTlcxc04xVTJlRGxNTkRsbFNVUXJVWE5DZG5sQ2RGSk9WVmhFZVVwaVlXbFZZVWcwVkhoalUwWkNUbXRTV1RkSmFEVklkRE1yVTJkVmFVZEVjbGwyUjNndk16QkNaV2RZUlcxVVZtVnlhRmhIVVhKVE5YRXJUbTVzVm5aQk1VVlVWM2cyT0VSRmNYZFlPSE5WYVVSRVYwRXJjM1ZoVDJoNU1HeE9WSHBIY201UFJuVkxTR2xJYkVaWFdsVTNkMjFzWlhwMWRsVlljREJXUzJKUlVUVndXbEF2U25kSlIzcDJNRUZuYmtsMlIzTk5TVWRNYm13clZEaE9TWEpsWjFKT1dYWXdWRmRWWld4U2FFczJLMHhTZVZNdmVGZHRTVFZVTVN0dVIwaEdOR1U0VTNaMWFXODNlWFp0UjFGcVoyMXJRWEZrY21aVk4zRTJlakZwTW5CUlNIYzNaME4wYUZFMlNqa3lkRVJHUXpoWloyWlZVRkZhYmxaV2RrTlpjVWROWlZNdmN6YzRRMmxTYWpGVE1IWklNRGwyZGk5UlBUMDoxLFJYUnlZWFpsYkdrZ0NtcGhhMjlpTG5KdlpITjBjbTl0UUdWMGNtRjJaV3hwTG1OdmJTeFhZV3hzWVdKNUxtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVWdLRVp5WldWa2IyMHBDakF6THpBNUx6SXdNVGtLUm1ocGVpOXVNblIxV2s0MFVrc3JLMk15WjFWamFVOXlSR1ptZUN0WFVUUkJlRFpuTURVMmFFOW9UMjVEUjNGMFFYRkxWV2hDUXpaV1NWaG9SbFF3WTNwalJrcGpPVFppTnpkQlRsSktNV1YyZG01UVQzQnJSV3MwWW13clVtUXdVMFZKVm1GQldFWlpSa3R5YzFwd1F6aGphbkFyZDFZMVpHRnNSR2RVV0VGR1JXeDBUMUZTUVZWa1pXRnhSVVoyVFVZd1ZXbHlhekYyV1c1d1ZIQkRTRXhxY2s5RlQyNXZiSGNyZEVSV01WRnZaRlpKVlhGSE1uTm9ObFpTY1dwRWQwNUlObmx1VUhGaFJYcFVSMUpXWkM5UFdHODRZbnBRVjBSNFl5OWhPR2htYUZseVVsRlhWa0ZsUkhkWVQwWmFjakV6U2xwd01USm9kSEZ2V0Rsd2NXdHNUamhMUVdWb1ZtZzRTWGR3Y2pCMFFYRnJRalpNTnpGcVZqSmtlVzlNWjNSMmRrbG1abVZEUjB4dWVsZDNSSEZ4TURKblNXRTFhbTFKVTNSTVJqSkxMMjlIU0VjNVZVVmFjM05uVTJoQ0t6ZDVRMHRuUFQwOjEsVFdGeWFXRWdTMjkxYVhKdmRXdHBaRzkxQ21waGEyOWlMbkp2WkhOMGNtOXRRR1YwY21GMlpXeHBMbU52YlN4WFlXeHNZV0o1TG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVZ0tFWnlaV1ZrYjIwcENqRTVMekE1THpJd01Ua0taR3BzYWxFeVZtdFhhMGMzVEVnMGVFVktVVlZ2YzFGalNqUlFUbWRyVmxoM1ZHMURjVlZUTlRFeFJFVnhUVkZvZFdnMGJIbGFkMUJWVDFWM2JUVk9UMm93UW1WaVVHUmFWak5oTkdkT1ExbDZPWE0xTWxBd2NEUkxkbVpTZVRZMWVHZEhZV3Q2ZDFWMWJrOXJPV1pwUTNwTFYyY3lXbkZKVGxwdmFFOU5kVTQzVlVKbGJFeG1RVkZDWjJKUU9YaExiV0p6VldjdldXMWtSVlFyZG5RNVVsWlhOWEF4VXpKaGVFaDRObEYyTUZSa1pWTm9ORWRQVldWbVYweHBia05hTlZOSmVERjFVbkYwTjA1RmEyRjBTM0pxYWtKUU5WQlJia2RXUjJ0VGVGTTFTRkJIYlVoMWRVNVdMelJZVGpORlNYTjBXVlJ3ZW5wbFZtMUJNV2hwY0RoSFptOTVRMUpOUzFKeFIxQkZkVFIyYUhwclVscEhXVFpYUlV0aE9URnFVSGxIVlhWc1ozVkhWWGR0UVRSeFEwTkxZMFpCVm5kT1ZITmhaRGRhTm1KUFJGUklaSEpMU3paUVNqUTBkekpsT1doa2VXSm5QVDA6MSxRV3hsZUdGdVpISnZjeUJRWVhCaFpYbDBhR2x0YVc5MUNtcGhhMjlpTG5KdlpITjBjbTl0UUdWMGNtRjJaV3hwTG1OdmJTeFhZV3hzWVdKNUxtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVWdLRVp5WldWa2IyMHBDakl3THpBNUx6SXdNVGtLWnpZMVEydG1XRWRDUzBsTlpIWlBhbmxNTnpaU1RFWkVjekZ0VTB4VUwxUkxOV2QwZG5weVRsUm9hMnhRT0dodU5FUkNUM1kwUVRGMWJteHpaRWh6ZEhsdFowVnlabmh2UjNFelIyODRjVXM0Um1JNGRYUnNWRGgxVDNsSVEzWXhaWEJLZFdVd1RGUk5hMmhyU21aaVF6ZzJPV2RuZFVWM1MxQmFVRFUyV2tKMWRFc3hVekZZZVhSTU1UVnpNVE5UUjNaWWVVTlhZMVZ3VHl0Q1VYSk9TRk14Y1dwSFZsQlBVV1pDZW1oRVdXZ3JLMkpqVm5aYWVIbzNTVlJGTDFCeU5DOHlVRFJFWkZSM2RISnBTa1JwU21KMFZFMWtSRTFWVTFNelNHTmhTVGMxUlhaUWRFRXhjR2Q1VFZneFdYZHRVWFZqV1ZoRmRXUTNiM1ZhTXpJd05uVkdWVXRMYldNeGMyWjJOVEpYUWxGemIyUXhZa05yWlROcWMyaDRXQ3R1VEdoVlRWZEZiM1JsVkhZNWRXNXZNMlpZVVcxVWMybHJjRVEyTWsxWE5tNDBWVkJuT1RGelVFbEdOR3RGZVVKa2JGQnVUM3BCUFQwOjEsVTI5eVlTQk5iM0pwYlc5MGJ3cHpiM0poY0hWQWNISnZkRzl1YldGcGJDNWpiMjBzVjJGc2JHRmllUzVxY3lBcklGRjFiMnRyWVM1cWN5QndaWEp6YjI1aGJDQnNhV05sYm5ObElDaEdjbVZsWkc5dEtRb3hOUzh3TWk4eU1ESXdDbEJGWVVnNGVuWnRhRU5RT1VsNU1HbG1aRUl6Ymt3eFUwdFdaVFZtWTFaTFJWSmFjVzVtVW1GRmNGWkdjakJhYVhSUWEzSjJaU3R5Y3pRMGVXSkxVMkppU25SSFRsVlNXRFpuV25Oa2QxVkVXbmRpUVVKQ2VsUXJVRU5vTW5kaFJHNUxaVTFpTlhSdVYzQnhXRzVrYTB4b01HVkJRbmxDYVhORGJqTTNjMk01Y0ZRMVVWcHpRa3htY0RJM1RsZFNNREZsVWpKaE1FMUdkVkY1T1hWdFZWWjZPV2R1TVZWVlZGZEZSRFZxZWxOaEwwTTVTRGRIZVVSWldFODVNMGR6UlV4RVJVcEpMMnd6Wm14ak5WUTRiWGx4YWs1TVRrbFlVek5oWkVrMmMzaHZRVGRZU2pSalJtTTNjR2Q2WW5aeVUyOWpSVEJrZFU1RVJYVjNXSEJHWVhwemRreHhVbTVhUWpWV1NrMW9Wa3Q1TDNKNk1taExXWE5UVVZwbVlqTlpOa2RrTUVZemJucFlOblUwV0RJdmRHdGlWVVZLWmtkWU1VTkxTMGR3V213dlNVRnRha2szZEVZNWJWSjNSREJXTkhodVlXWm5aejA5OjF9O18uZWFjaChSLGZ1bmN0aW9uKGUsdCl7dHJ5e1JbXy5ydHJpbShtLnBhcnNlS2V5KHQpLmxpY2Vuc2VTaWduYXR1cmUsIj0iKV09MX1jYXRjaChuKXt9fSk7dmFyIGs9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbihlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXMsaT1uO24uX2RpZmZNYXRjaFBhdGNoPWUuZGlmZk1hdGNoUGF0Y2g7dmFyIG89ZS5Qcm9qZWN0O24uX3Byb2plY3Q9bmV3IG8oZSksZS5xdW9ra2E/KGY9NmU1LHc9NSx2PTIpOmRlbGV0ZSBwcm9jZXNzLmVudi5xdW9ra2Esbi5fcXVva2thPWUucXVva2thLG4uX3F1b2trYUVkaXRpb249ZS5lZGl0aW9uLG4uX3Byb2plY3Qub24oIm1lc3NhZ2UiLGZ1bmN0aW9uKHQpe2lmKCEhZS5xdW9ra2E9PSEhcHJvY2Vzcy5lbnYucXVva2thKXt2YXIgbj1pWyJwcm9qZWN0OiIrdC50eXBlXTtuJiZuLmNhbGwoaSx0KX19KSxuLl9mcz1uZXcgdShuLl9wcm9qZWN0Ll9sb2NhbFJvb3QsZSksbi5fbW9kZWw9bmV3IGgoe2ZpbGVJZEJ5UGF0aDpmdW5jdGlvbihlKXtyZXR1cm4gaS5fZnMuaWRCeVBhdGgoZSl9LHByb2plY3Q6bi5fcHJvamVjdCxhbHdheXNTZW5kQWxsTGluZXM6IlZTQ29kZSI9PT1lLmNsaWVudHx8bi5fcXVva2thJiYiQXRvbSIhPT1lLmNsaWVudH0pLG4uX21vZGVsLm9uKCJtZXNzYWdlIixmdW5jdGlvbihlKXt2YXIgdD1pWyJtb2RlbDoiK2UudHlwZV07dCYmdC5jYWxsKGksZSl9KSxuLl9wcm9qZWN0Ll9tb2RlbD1uLl9tb2RlbCxuLl9yZWFkRmlsZVN5bmM9ZS5yZWFkRmlsZVN5bmMsbi5fd3JpdGVGaWxlU3luYz1lLndyaXRlRmlsZVN5bmM7dmFyIHI9cyxhPXMuY3JlYXRlVmVyaWZ5LGw9cy5jcmVhdGVIYXNoO3JldHVybiBzPXtjcmVhdGVWZXJpZnk6ZnVuY3Rpb24oKXt2YXIgZT1hLmFwcGx5KHIsYXJndW1lbnRzKSx0PWUudmVyaWZ5O3JldHVybiBlLnZlcmlmeT1mdW5jdGlvbihuKXt0cnl7dmFyIG89ci5jcmVhdGVIYXNoKCJtZDUiKS51cGRhdGUobikuZGlnZXN0KCJoZXgiKTsiNzk0NzlmZTk0ZmNkMmJkOWYxNDFhZDE3MTdjMzUyODIiIT09byYmIjY2NTcxMDlmYjQ0MjYzM2Y0MTJmMTI4Nzg4ODcxOTYwIiE9PW8mJiJjYzQ4ZmRjOTFkODgyNWNhOTdiMzFjNTVjYTAzNGQ0NiIhPT1vJiYiNDdhYmZkZmE3YmNkNDE2ZTBmOWM2OTk5MWVjMWY4OTYiIT09byYmIjA3ZWQxZmM2YTNhMzJkNjYwOTlmZTE4NzBjODNhMGNlIiE9PW8mJmkuX3RyaWFsTW9kZSgpfWNhdGNoKGEpe31yZXR1cm4gdC5hcHBseShlLGFyZ3VtZW50cyl9LGV9LGNyZWF0ZUhhc2g6ZnVuY3Rpb24oKXtyZXR1cm4gbC5hcHBseShyLGFyZ3VtZW50cyl9fSxlLnF1b2trYSYmIW4uX3F1b2trYUVkaXRpb258fG4uX3ZlcmlmeUxpY2Vuc2UoZS5xdW9ra2E/IlF1b2trYSI6ZS5jbGllbnQsZS5sa3AsZS5jbGllbnQrIi0iK2UuY3YpLG4uX2NvbnNvbGVPdXRwdXQ9W10sbn1yZXR1cm4gaShuLHQpLG4ucHJvdG90eXBlLmNvbmZpZ3VyZT1mdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIGUuX3J1bklmVmVyaWZpZWQoZnVuY3Rpb24oKXtyZXR1cm4gZS5fcHJvamVjdC5jb25maWd1cmUoKX0pfSxuLnByb3RvdHlwZS5maWxlQ2hhbmdlZEluRWRpdG9yPWZ1bmN0aW9uKGUpe3RoaXMuX2ZzLmZpbGVDaGFuZ2VkSW5FZGl0b3IoZS5wYXRoLGUuY29udGVudCxlLmNoYW5nZUZyYW1lLGUudHJhbnNpZW50Q2hhbmdlKX0sbi5wcm90b3R5cGUuZmlsZU9wZW5lZEluRWRpdG9yPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX21vZGVsLmZpbGVCeVBhdGgoZS5wYXRoKTt0JiYodC5vcGVuZWRJbkVkaXRvcigpLHRoaXMuX2VtaXREb2N1bWVudExpbmVzKHQpKX0sbi5wcm90b3R5cGUuZmlsZUNsb3NlZEluQWxsRWRpdG9ycz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl9tb2RlbC5maWxlQnlQYXRoKGUucGF0aCk7dCYmdC5jbG9zZWRJbkFsbEVkaXRvcnMoKX0sbi5wcm90b3R5cGUucnVuVGVzdHM9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxuPWZ1bmN0aW9uKCl7dmFyIG49dC5fbW9kZWwudGVzdHNCeVJlcXVlc3QoZS5yZXF1ZXN0KTt0Ll9wcm9qZWN0LnJ1blRlc3RzKHt0ZXN0czpuLmxlbmd0aCYmbnx8dm9pZCAwLGV4dGVybmFsRmlsZUNoYW5nZTpvfSl9LGk9dGhpcy5fcHJvamVjdC5zZXR0aW5ncygpLG89ZS5yZXF1ZXN0JiZlLnJlcXVlc3QuZXh0ZXJuYWxGaWxlQ2hhbmdlLHI9ZS5yZXF1ZXN0JiZlLnJlcXVlc3QuaW5zdGFsbFBhY2thZ2U7ciYmaSYmaS5xdW9ra2EmJihpLnF1b2trYS5pbnN0YWxsUGFja2FnZS5hbGxvd1RvSW5zdGFsbEltcG9ydGVkTW9kdWxlc3x8ci5wbHVnaW4pJiZyLm5hbWU9PT1tLnZhbGlkUGFja2FnZU5hbWUoci5uYW1lKSYmaS5xdW9ra2EuaW5zdGFsbFBhY2thZ2UuY29tbWFuZD8odGhpc1sicHJvamVjdDpidXN5Il0oKSxwKGZ1bmN0aW9uKCl7dHJ5e2lmKGMobS5mb3JtYXQoaS5xdW9ra2EuaW5zdGFsbFBhY2thZ2UuY29tbWFuZCx7cGFja2FnZU5hbWU6ci5uYW1lfSkse3N0ZGlvOiJwaXBlIixjd2Q6ci5sb2NhbD9wcm9jZXNzLmN3ZCgpOnIucGx1Z2luP2kucXVva2thLmdsb2JhbFNldHRpbmdzRGlyOmkucXVva2thLmluc3RhbGxQYWNrYWdlLmRpcn0pLHIucGx1Z2luJiZyLnBsdWdpbi5lZGl0Q29uZmlnKXt2YXIgZT1KU09OLnBhcnNlKHQuX3JlYWRGaWxlU3luYyhpLnF1b2trYS5nbG9iYWxTZXR0aW5nc0ZpbGUpKTtlLnBsdWdpbnM9Xy5pc1N0cmluZyhlLnBsdWdpbnMpP1tlLnBsdWdpbnNdOmUucGx1Z2luc3x8W10sIV8uZmluZChlLnBsdWdpbnMpLGZ1bmN0aW9uKGUpe3JldHVybiBlPT09ci5uYW1lfSYmZS5wbHVnaW5zLnB1c2goci5uYW1lKSx0Ll93cml0ZUZpbGVTeW5jKGkucXVva2thLmdsb2JhbFNldHRpbmdzRmlsZSxKU09OLnN0cmluZ2lmeShlKSksdC5fcHJvamVjdC5yZWxvYWRRdW9ra2FTZXR0aW5ncygpfW4oKX1jYXRjaChvKXt0Ll9lbWl0U3RhdHNVcGRhdGUoby5tZXNzYWdlKX19LDApKTpuKCl9LG4ucHJvdG90eXBlLmluc3RydW1lbnRlZEZpbGU9ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdCh7dHlwZToiaW5zdHJ1bWVudGVkRmlsZSIsaWQ6ZS5pZCxkYXRhOnRoaXMuX3Byb2plY3QuZ2V0SW5zdHJ1bWVudGVkSmF2YVNjcmlwdEZpbGVDb250ZW50QnlQYXRoKGUucmVxdWVzdC5wYXRoKX0pfSxuLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZzLnN0b3AoKSx0aGlzLl9wcm9qZWN0LnN0b3AoKX0sbi5wcm90b3R5cGUudW5jb3ZlcmVkUmVnaW9ucz1mdW5jdGlvbihlKXt2YXIgdD1lLnJlcXVlc3Qsbj17dHlwZToidW5jb3ZlcmVkUmVnaW9ucyIsZGF0YTp7fSxpZDplLmlkfSxpPXRoaXMuX21vZGVsLnVuY292ZXJlZFJlZ2lvbnNCeVJlcXVlc3QodCk7cmV0dXJuIGk/KG4uZGF0YS5yYW5nZXM9aSx2b2lkIHRoaXMuX2VtaXQobikpOnZvaWQgdGhpcy5fZW1pdE5vdGlmaWNhdGlvbigiaW5mbyIsIkFjdGlvbiBpcyBub3QgYXZhaWxhYmxlIGZvciBmaWxlcyBvdXRzaWRlIHdhbGxhYnkuanMgc2NvcGUiKX0sbi5wcm90b3R5cGUubGluZVJlcG9ydD1mdW5jdGlvbihlKXt2YXIgdD1lLnJlcXVlc3Qsbj17dHlwZToibGluZVJlcG9ydCIsZGF0YTp7fSxpZDplLmlkfSxpPXRoaXMuX21vZGVsLmxpbmVSZXBvcnRCeVJlcXVlc3QodCk7cmV0dXJuIGk/KG4uZGF0YS5yZXBvcnQ9aSx2b2lkIHRoaXMuX2VtaXQobikpOnZvaWQgdGhpcy5fZW1pdE5vdGlmaWNhdGlvbigiaW5mbyIsIkFjdGlvbiBpcyBub3QgYXZhaWxhYmxlIGZvciBmaWxlcyBvdXRzaWRlIHdhbGxhYnkuanMgc2NvcGUiKX0sbi5wcm90b3R5cGUubG9jYXRpb249ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5yZXF1ZXN0LG49e3R5cGU6ImxvY2F0aW9uIixkYXRhOnt9LGlkOmUuaWR9LGk9dGhpcy5fbW9kZWwubG9jYXRpb25CeVJlcXVlc3QodCk7aT9pLmZpbGU/KG4uZGF0YS5maWxlPWkuZmlsZSxuLmRhdGEubG9jPWkubG9jLHRoaXMuX2VtaXQobikpOnRoaXMuX2VtaXROb3RpZmljYXRpb24oImluZm8iLCJDYW4gbm90IGxvY2F0ZSBhIGZhaWxpbmcgdGVzdCIpOnRoaXMuX2VtaXROb3RpZmljYXRpb24oImluZm8iLCJDYW4gbm90IGZpbmQgYW55IGZhaWxpbmcgdGVzdHMiKX0sbi5wcm90b3R5cGUuZXJyb3I9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5yZXF1ZXN0LG49e3R5cGU6ImVycm9yIixkYXRhOnt9LGlkOmUuaWR9LGk9dGhpcy5fbW9kZWwuZXJyb3JCeVJlcXVlc3QodCk7aT9uLmRhdGEuZXJyb3I9aToiZmFpbGluZ1Rlc3QiPT09dC50eXBlJiZ0aGlzLl9lbWl0Tm90aWZpY2F0aW9uKCJpbmZvIiwiQ2FuIG5vdCBmaW5kIGFueSB0ZXN0IGVycm9ycyIpLHRoaXMuX2VtaXQobil9LG4ucHJvdG90eXBlLmNvcHlUb0NsaXBib2FyZD1mdW5jdGlvbihlKXt0aGlzLl9wcm9qZWN0LmNvcHlUb0NsaXBib2FyZChlLnJlcXVlc3QpfSxuLnByb3RvdHlwZS5leHByZXNzaW9uc1RvRXZhbHVhdGU9ZnVuY3Rpb24oZSl7dGhpcy5fcHJvamVjdC5leHByZXNzaW9uc1RvRXZhbHVhdGUoZS5yZXF1ZXN0KX0sbi5wcm90b3R5cGUubXV0ZU5vdGlmaWNhdGlvbj1mdW5jdGlvbihlKXt0aGlzLl9wcm9qZWN0Lm11dGVOb3RpZmljYXRpb24oZS5yZXF1ZXN0KX0sbi5wcm90b3R5cGUuY29udGludWVUcmlhbD1mdW5jdGlvbigpe3RoaXMuX2NvbnRpbnVlVHJpYWxTZXNzaW9uJiZ0aGlzLl9jb250aW51ZVRyaWFsU2Vzc2lvbigpfSxuLnByb3RvdHlwZS5nZXRGaWxlTWVzc2FnZXM9ZnVuY3Rpb24oZSl7dGhpcy5fbW9kZWwuZ2V0RmlsZU1lc3NhZ2VzKGUucmVxdWVzdCl9LG4ucHJvdG90eXBlWyJwcm9qZWN0OnByb2plY3RDb25maWd1cmVkIl09ZnVuY3Rpb24odCl7dmFyIG49dGhpcztyPWUoImRlYnVnIikoIndhbGxhYnk6ZXh0ZW5kZWQtY29yZSIpLHRoaXMuX2VtaXRQcm9qZWN0Q29uZmlndXJlZCh2b2lkIDAsdCksdGhpcy5fZnMuc2V0dXAodC5maWxlcyx0aGlzLl9wcm9qZWN0JiZ0aGlzLl9wcm9qZWN0LnNldHRpbmdzKCkpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIG4uX3N0YXJ0KHtmaWxlczpuLl9maWxlc0ZvclByb2plY3QoZSl9KX0pWyJjYXRjaCJdKGZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBzZXQgdXAgcHJvamVjdCBmaWxlIHN5c3RlbTogIituLl9lcnJvck1lc3NhZ2UoZSkpLG4uX2VtaXRUZXN0UnVuRXJyb3Iobi5fdGVzdFJ1bkVycm9yTWVzc2FnZShlKSl9KSx0aGlzLl9mcy5vbigiYWRkZWQiLF8uYmluZCh0aGlzLl91cGRhdGVQcm9qZWN0RmlsZSx0aGlzLCExKSksdGhpcy5fZnMub24oImxvYWRlZCIsXy5iaW5kKHRoaXMuX3VwZGF0ZVByb2plY3RGaWxlLHRoaXMsITEpKSx0aGlzLl9mcy5vbigiY2hhbmdlZCIsXy5iaW5kKHRoaXMuX3VwZGF0ZVByb2plY3RGaWxlLHRoaXMsITEpKSx0aGlzLl9mcy5vbigiZGVsZXRlZCIsXy5iaW5kKHRoaXMuX3VwZGF0ZVByb2plY3RGaWxlLHRoaXMsITApKSx0aGlzLl9mcy5vbigiZXJyb3IiLGZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoIkZpbGUgc3lzdGVtIGVycm9yOiAiK24uX2Vycm9yTWVzc2FnZShlKSksbi5fZW1pdFRlc3RSdW5FcnJvcihuLl90ZXN0UnVuRXJyb3JNZXNzYWdlKGUpKX0pLHRoaXMuX2ZzLm9uKCJub3RDaGFuZ2VkIixmdW5jdGlvbihlLHQsaSl7dHJ5e2lmKGkmJmkuc3RhcnQ9PT1pLmVuZClyZXR1cm47cigiRmlsZSB3YXMgbm90IGNoYW5nZWQsIGJ1dCBmaWxlIG1hcmtlcnMgbWF5IG5lZWQgdG8gYmUgc3luY2VkIik7dmFyIG89bi5fbW9kZWwuZmlsZUJ5SWQoZS5pZCk7aWYoIW8pcmV0dXJuO24uX2VtaXREb2N1bWVudExpbmVzKG8pfWZpbmFsbHl7bi5fZW1pdFN0YXRzVXBkYXRlKCl9fSl9LG4ucHJvdG90eXBlLl9lbWl0RG9jdW1lbnRMaW5lcz1mdW5jdGlvbihlKXt2YXIgdD1PYmplY3QuY3JlYXRlKG51bGwpO3RbZS5wYXRoKCldPWUuYWxsTGluZXMoKSx0aGlzLl9lbWl0RG9jdW1lbnRVcGRhdGVzKHQpfSxuLnByb3RvdHlwZVsicHJvamVjdDp0ZXN0UnVuRXJyb3IiXT1mdW5jdGlvbihlKXtpZihwcm9jZXNzLmVudi5xdW9ra2EmJmUubWVzc2FnZSl7ZS5tZXNzYWdlPWUubWVzc2FnZS5yZXBsYWNlKCJQb3N0cHJvY2Vzc29yIHJ1biBmYWlsdXJlOiAiLCIiKTt2YXIgdD1lLm1lc3NhZ2UuaW5kZXhPZigiLCBTeW50YXhFcnJvcjoiKTtpZih0PjApe2UubWVzc2FnZT1lLm1lc3NhZ2Uuc3Vic3RyKHQrMik7Zm9yKHZhciBuPWUubWVzc2FnZS5zcGxpdCgiXG4iKSxpPTA7aTxuLmxlbmd0aCYmIV8uc3RhcnRzV2l0aChfLnRyaW1MZWZ0KG5baV0pLCJhdCAiKTtpKyspO2UubWVzc2FnZT1uLnNsaWNlKDAsaSkuam9pbigiXG4iKX19dGhpcy5fZW1pdFN0YXRzVXBkYXRlKGUubWVzc2FnZSl9LG4ucHJvdG90eXBlWyJwcm9qZWN0OnRlc3RSdW5SZVF1ZXVlZCJdPWZ1bmN0aW9uKGUpe2lmKCFlLnRlc3RFcnJvclJlcG9ydGVkKXtpZihwcm9jZXNzLmVudi5xdW9ra2EmJiFlLnJlcnVuU2NoZWR1bGVkKXJldHVybjt0aGlzLl9lbWl0U3RhdHNVcGRhdGUodGhpcy5fbW9kZWwuZnVsbFRlc3RSZXN1bHRzUmVwb3J0KCkpfX0sbi5wcm90b3R5cGVbInByb2plY3Q6YnVzeSJdPWZ1bmN0aW9uKCl7dGhpcy5fY2xlYXJDb25zb2xlT3V0cHV0U2VuZFF1ZXVlKCksdGhpcy5fZW1pdCh7dHlwZToiYnVzeSJ9KX0sbi5wcm90b3R5cGVbInByb2plY3Q6bGl2ZSJdPWZ1bmN0aW9uKGUpe3RoaXMuX2VtaXQoZSl9LG4ucHJvdG90eXBlWyJwcm9qZWN0OmNvbmZpZ0NoYW5nZWQiXT1mdW5jdGlvbihlKXt0aGlzLl9xdW9ra2E9e3Bybzp0aGlzLl9hZGp1c3RRdW9ra2FGZWF0dXJlcyhlLnBybyxlLnNldHRpbmdzKX07dmFyIHQ9Xy5vbWl0KGUsIl9pbnRlcm5hbCIsInNldHRpbmdzIik7InN0cmluZyI9PXR5cGVvZiB0LnBsdWdpbnMmJih0LnBsdWdpbnM9W3QucGx1Z2luc10pLHRoaXMuX211dGVQcm9FZGl0aW9uRm9yVmFsdWVFeHBsb3Jlck5vdGlmaWNhdGlvbj10aGlzLl9wcm9qZWN0LmlzTm90aWZpY2F0aW9uTXV0ZWQoYiksdGhpcy5fZW1pdCh0KX0sbi5wcm90b3R5cGVbInByb2plY3Q6ZXhwcmVzc2lvbnNUb0V2YWx1YXRlUmVjZWl2ZWQiXT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO2lmKHRoaXMuX3F1b2trYSYmIXRoaXMuX3F1b2trYS5wcm8pe3ZhciBuPTIsaT1mdW5jdGlvbihlLG8pe3JldHVybiBfLmVhY2goZSxmdW5jdGlvbihyLGEpe28+PW4/KGVbYV09e30sXy5pc0VtcHR5KHIpfHx0Ll9tdXRlUHJvRWRpdGlvbkZvclZhbHVlRXhwbG9yZXJOb3RpZmljYXRpb258fCh0Ll9lbWl0Tm90aWZpY2F0aW9uKCJ3YXJuaW5nIiwiT25seSAnUHJvJyBlZGl0aW9uIG9mIFF1b2trYS5qcyBzdXBwb3J0cyBtb3JlIHRoYW4gIituKyIgZXhwYW5kZWQgbGV2ZWxzIHdpdGhpbiBWYWx1ZSBFeHBsb3Jlci4iLHtzdWdnZXN0UHJvRWRpdGlvbjohMCxhbGxvd011dGluZzohMCxpZDpifSksdC5fbXV0ZVByb0VkaXRpb25Gb3JWYWx1ZUV4cGxvcmVyTm90aWZpY2F0aW9uPSEwKSk6aShyLG8rMSl9KX07aShlLmV4cHJlc3Npb25zVG9FdmFsdWF0ZSwxKX19LG4ucHJvdG90eXBlWyJwcm9qZWN0Om1vZHVsZUxvYWRlZCJdPWZ1bmN0aW9uKGUpe3ZhciB0PWUuc2Vzc2lvbjtpZihkZWxldGUgZS5zZXNzaW9uLHRoaXMuX3F1b2trYSYmIXRoaXMuX3F1b2trYS5wcm8mJnQmJmUucGF0aCYmIX5lLnBhdGguaW5kZXhPZigibm9kZV9tb2R1bGVzIikmJn5lLnBhdGguaW5kZXhPZihhLnNlcCkpe3ZhciBuPSJPbmx5ICdQcm8nIGVkaXRpb24gb2YgUXVva2thLmpzIHN1cHBvcnRzIHByb2plY3QgZmlsZXMgaW1wb3J0LiI7dC5yZWplY3QobmV3IEVycm9yKG4pKSx0aGlzLl9zdWdnZXN0ZWRQcm9FZGl0aW9uRm9yUHJvamVjdEZpbGVJbXBvcnR8fCh0aGlzLl9lbWl0Tm90aWZpY2F0aW9uKCJ3YXJuaW5nIixuLHtzdWdnZXN0UHJvRWRpdGlvbjohMH0pLHRoaXMuX3N1Z2dlc3RlZFByb0VkaXRpb25Gb3JQcm9qZWN0RmlsZUltcG9ydD0hMCl9fSxuLnByb3RvdHlwZVsicHJvamVjdDpuYXZpZ2F0aW9uUmVxdWVzdGVkIl09ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdCh7dHlwZTplLnR5cGUsZmlsZTplLnBhdGgsbG9jOmUubGluZSsoZS5jb2x1bW4/IjoiK2UuY29sdW1uOiIiKX0pfSxuLnByb3RvdHlwZVsicHJvamVjdDpmaWxlc1JlcXVpcmVkIl09ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLl9mcy5sb2FkRmlsZXMoZS5maWxlcylbImNhdGNoIl0oZnVuY3Rpb24oZSl7cmV0dXJuIHQuX2VtaXRUZXN0UnVuRXJyb3IodC5fZXJyb3JNZXNzYWdlKGUpKX0pfSxuLnByb3RvdHlwZVsicHJvamVjdDpsaWNlbnNlQ29sbGlzaW9uIl09ZnVuY3Rpb24oZSl7dmFyIHQ9cHJvY2Vzcy5lbnYucXVva2thPyJRdW9ra2EuanMgJ1BybyciOiJXYWxsYWJ5LmpzIixuPXByb2Nlc3MuZW52LnF1b2trYT8iaHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvIjoiaHR0cHM6Ly93YWxsYWJ5anMuY29tL3B1cmNoYXNlIixpPXQrIiBpcyBzdG9wcGVkIGJlY2F1c2UgeW91ciBsaWNlbnNlIGlzIGJlaW5nIHVzZWQgZWxzZXdoZXJlIG9uIHRoZSBuZXR3b3JrIGJ5IDxiPiIrKGUuYWRkcmVzc3x8InVua25vd24gYWRkcmVzcyIpKyc8L2I+LiBPbmx5IG9uZSBhY3RpdmUgY29tcHV0ZXIgYXQgdGhlIHNhbWUgdGltZSBtYXkgdXNlIHRoZSBsaWNlbnNlLjxici8+SWYgeW91IHdvdWxkIGxpa2UgdG8gcHVyY2hhc2UgYW4gYWRkaXRpb25hbCBsaWNlbnNlLCBwbGVhc2UgdmlzaXQgPGEgaHJlZj0iJytuKyciPm91ciB3ZWJzaXRlPC9hPi4gSWYgeW91IGhhdmUgYWxyZWFkeSBwdXJjaGFzZWQgdGhlIGxpY2Vuc2UsIHBsZWFzZSA8YSBocmVmPSIjIiBjbGFzcz0iJytnKyciPmFjdGl2YXRlIGl0PC9hPi4nO3RoaXMuX2VtaXROb3RpZmljYXRpb24oImVycm9yIixpKSx0aGlzLl9lbWl0U3RvcHBlZCgpfSxuLnByb3RvdHlwZVsibW9kZWw6c3RhdHNNYXliZUNoYW5nZWQiXT1mdW5jdGlvbihlKXt0aGlzLl9jbGVhckNvbnNvbGVPdXRwdXRTZW5kUXVldWUoKSxwcm9jZXNzLmVudi5xdW9ra2EmJnRoaXMuX3Byb2plY3Quc2V0dGluZ3MoKS5lcnJvcnx8dGhpcy5fZW1pdFN0YXRzVXBkYXRlKGUudGVzdFJlc3VsdHNDaGFuZ2VkfHxwcm9jZXNzLmVudi5xdW9ra2E/dGhpcy5fbW9kZWwuZnVsbFRlc3RSZXN1bHRzUmVwb3J0KGUudGltZSk6dm9pZCAwKTsKfSxuLnByb3RvdHlwZVsibW9kZWw6ZG9jdW1lbnRzVXBkYXRlZCJdPWZ1bmN0aW9uKGUpe3RoaXMuX2VtaXREb2N1bWVudFVwZGF0ZXMoZS5kb2N1bWVudHMpfSxuLnByb3RvdHlwZVsibW9kZWw6ZmlsZUFkZGVkIl09ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdEZpbGVzVG9UcmFjayhbZS5maWxlLnBhdGhdKX0sbi5wcm90b3R5cGVbIm1vZGVsOmNvbnNvbGVPdXRwdXQiXT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3QuX2NvbnNvbGVPdXRwdXQucHVzaChlLm1lc3NhZ2UpLHQuX2NvbnNvbGVPdXRwdXRUaW1lb3V0fHx0Ll9zY2hlZHVsZUNvbnNvbGVPdXRwdXRTZW5kKCl9LG4ucHJvdG90eXBlLl9zY2hlZHVsZUNvbnNvbGVPdXRwdXRTZW5kPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLl9jb25zb2xlT3V0cHV0VGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aWYoZS5fY29uc29sZU91dHB1dC5sZW5ndGgpe3ZhciB0PWUuX2NvbnNvbGVPdXRwdXQuc3BsaWNlKDAsMjApO2UuX2NvbnNvbGVPdXRwdXQubGVuZ3RoP2UuX3NjaGVkdWxlQ29uc29sZU91dHB1dFNlbmQoKTplLl9jbGVhckNvbnNvbGVPdXRwdXRTZW5kUXVldWUoKSxlLl9lbWl0KHt0eXBlOiJjb25zb2xlT3V0cHV0IixtZXNzYWdlczp0fSl9fSwxMDApfSxuLnByb3RvdHlwZS5fYWRqdXN0UXVva2thRmVhdHVyZXM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5oaW50cz10LmhpbnRzfHx7fSx0LmhpbnRzLmNvbW1lbnRBdXRvTG9nPWU/Ij8iOnt2YWx1ZToiPyIsZXhwOiJcIkxpdmUgQ29tbWVudHMgYW5kIExpdmUgVmFsdWUgRGlzcGxheSBmZWF0dXJlcyBvbmx5IHN1cHBvcnRlZCBpbiAnUHJvJyBlZGl0aW9uLCBzZWUgaHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvLyBmb3IgbW9yZSBkZXRhaWxzXCIifSxlfHxkZWxldGUgdC5xdW9ra2EuaW5zdGFsbFBhY2thZ2UuYWxsb3dUb0luc3RhbGxJbXBvcnRlZE1vZHVsZXMsZX0sbi5wcm90b3R5cGUuX2NsZWFyQ29uc29sZU91dHB1dFNlbmRRdWV1ZT1mdW5jdGlvbigpe3RoaXMuX2NvbnNvbGVPdXRwdXQubGVuZ3RoPTAsZGVsZXRlIHRoaXMuX2NvbnNvbGVPdXRwdXRUaW1lb3V0fSxuLnByb3RvdHlwZVsibW9kZWw6ZmlsZU1lc3NhZ2VzIl09ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdChlKX0sbi5wcm90b3R5cGUuX3VwZGF0ZVByb2plY3RGaWxlPWZ1bmN0aW9uKGUsdCxuLGksbyl7dmFyIGE9dGhpcy5fbW9kZWwuZmlsZUJ5SWQodC5pZCk7aWYoIWUmJmEmJmEuaXNPcGVuZWRJbkVkaXRvcigpJiZhLmhhc1ZhbGlkRG9jdW1lbnQoKSl7dmFyIHM9ITA7aWYoXy5pc1BhdGNoKHQuY29udGVudCkmJl8uaXNTdHJpbmcobikmJmkpe3ZhciBsPXRoaXMuX2RpZmZNYXRjaFBhdGNoLnBhdGNoX2Zyb21UZXh0KHQuY29udGVudCk7aWYoMT09PWwubGVuZ3RoKXt2YXIgYz1sWzBdO2lmKGMmJmMuZGlmZnMmJmMuZGlmZnMubGVuZ3RoJiZjLnN0YXJ0MT09PWMuc3RhcnQyKXtzPSExO3ZhciBwPWMuc3RhcnQxLGQ9Yy5kaWZmc1swXTswPT09ZFswXSYmKHArPWRbMV0ubGVuZ3RoKTt2YXIgdT0wO2lmKF8uZWFjaChjLmRpZmZzLGZ1bmN0aW9uKGUpezAhPT1lWzBdJiYodSs9ZVswXSooXy50ZXh0TGluZXMoZVsxXSkubGVuZ3RoLTEpKX0pLHUpe3ZhciBoPV8udGV4dExpbmVzKG4scCkubGVuZ3RoLG09Xy50ZXh0TGluZXMobixjLnN0YXJ0MSkubGVuZ3RoLGY9TWF0aC5hYnModSksUz1NYXRoLm1heChNYXRoLm1pbihpLnN0YXJ0LG0pLWYsMSksdz1NYXRoLm1heChpLmVuZCxtKTthLnNoaWZ0RG9jdW1lbnRMaW5lcyhoLHUse3N0YXJ0OlMsZW5kOnd9KX1lbHNlIGkuc3RhcnQhPT1pLmVuZCYmYS5pbnZhbGlkYXRlRG9jdW1lbnRMaW5lcygwLDAsaSl9fX1zJiYocigiTmV3IGRvY3VtZW50IG9yIGNvbXBsZXggZG9jdW1lbnQgY2hhbmdlIiksYS5pbnZhbGlkYXRlRG9jdW1lbnQoKSl9dGhpcy5fcHJvamVjdC5maWxlKHtmaWxlOnRoaXMuX2ZpbGVGb3JQcm9qZWN0KHQpLCJkZWxldGUiOmUsaW5FZGl0b3I6b30pfSxuLnByb3RvdHlwZS5fZmlsZXNGb3JQcm9qZWN0PWZ1bmN0aW9uKGUpe3JldHVybiBfLm1hcChlLHRoaXMuX2ZpbGVGb3JQcm9qZWN0KX0sbi5wcm90b3R5cGUuX2ZpbGVGb3JQcm9qZWN0PWZ1bmN0aW9uKGUpe3JldHVybntwYXRoOmUucGF0aCxpZDplLmlkLHRzOmUudHMsb3JkZXI6ZS5vcmRlcixpbmNsdWRlOmUubG9hZCx0cmlnZ2Vyc1Rlc3RzOmUudHJpZ2dlcixjb3ZlcmFibGU6ZS5pbnN0cnVtZW50LHRlc3Q6ZS50ZXN0LHR5cGU6ZS50eXBlLGJpbmFyeTplLmJpbmFyeSxjb250ZW50OmUuY29udGVudH19LG4ucHJvdG90eXBlLl9zdGFydD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fZW1pdEZpbGVzVG9UcmFjayhfLm1hcChlLmZpbGVzLGZ1bmN0aW9uKGUpe3JldHVybiBlLnBhdGh9KSksZS5saWNlbnNlfHwoZS5saWNlbnNlPXRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdCYmdGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0Lmhhc2h8fHRoaXMuX3Byb2plY3QuX3dhbGxhYnlFbWFpbCksZS5leHBpcnlEYXRlfHwoZS5leHBpcnlEYXRlPXRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdCYmdGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmV4cGlyYXRpb25EYXRlJiZ0aGlzLl92ZXJpZmljYXRpb25SZXN1bHQuZXhwaXJhdGlvbkRhdGUuc3BsaXQoIi8iKS5qb2luKCItIil8fHZvaWQgMCksdGhpcy5fcHJvamVjdC5zdGFydChlKX0sbi5wcm90b3R5cGUuX3ZlcmlmeUxpY2Vuc2U9ZnVuY3Rpb24oZSx0LG4pe3RoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdD10aGlzLl9saWNlbnNlVmVyaWZpY2F0aW9uUmVzdWx0KGUsdCxuKX0sbi5wcm90b3R5cGUuX3J1bklmVmVyaWZpZWQ9ZnVuY3Rpb24oZSl7aWYocHJvY2Vzcy5lbnYucXVva2thJiYhdGhpcy5fcXVva2thRWRpdGlvbilyZXR1cm4gZSgpO3ZhciB0PXByb2Nlc3MuZW52LnF1b2trYT8iUXVva2thLmpzICdQcm8nIjoid2FsbGFieS5qcyIsbj1wcm9jZXNzLmVudi5xdW9ra2E/Imh0dHBzOi8vcXVva2thanMuY29tL3BybyI6Imh0dHBzOi8vd2FsbGFieWpzLmNvbS9wdXJjaGFzZSI7dGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0PXRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdHx8e3ZhbGlkOiExfTt2YXIgaSxyPXt9O2lmKHByb2Nlc3MuZW52LnF1b2trYSYmKHIuZXhwaXJ5RGF0ZT1uZXcgbyh0aGlzLl92ZXJpZmljYXRpb25SZXN1bHQuZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQrIiBVVEMiKSxyLmV4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkPXRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5leHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZCksdGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LnZhbGlkKXJldHVybiB0aGlzLl92ZXJpZmljYXRpb25SZXN1bHQuZXhwaXJlZD8oaT0iWW91ciAiK3QrIiBsaWNlbnNlIDxiPmZyZWUgdXBncmFkZXMgcGVyaW9kIGhhcyBleHBpcmVkPC9iPi4gSWYgeW91IHdvdWxkIGxpa2UgdG8gd29yayB3aXRoIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiAiK3QrJyBhbmQgZnV0dXJlIHZlcnNpb25zIHJlbGVhc2VkIHdpdGhpbiB0aGUgbmV4dCAxMiBtb250aHMsIHBsZWFzZSB2aXNpdCA8YSBocmVmPSInK24rJyI+b3VyIHdlYnNpdGU8L2E+IHRvIHVwZ3JhZGUgeW91ciBsaWNlbnNlLjxici8+SWYgeW91IGhhdmUgYWxyZWFkeSBwdXJjaGFzZWQgdGhlIG5ldyBsaWNlbnNlLCBwbGVhc2UgPGEgaHJlZj0iIyIgY2xhc3M9IicrZysnIj5hY3RpdmF0ZSBpdDwvYT4uJyx0aGlzLl9lbWl0RXhwaXJlZExpY2Vuc2UoKSk6dGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmV4cGlyaW5nU29vbiYmKHByb2Nlc3MuZW52LnF1b2trYT8oci5leHBpcmluZ1Nvb249ITAsaT0iWW91ciAiK3QrIiBsaWNlbnNlIisocHJvY2Vzcy5lbnYucXVva2thPyIiOiIgZnJlZSB1cGdyYWRlcyBwZXJpb2QiKSsiIDxiPiBleHBpcmVzIG9uICIrdGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmV4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkKyI8L2I+LiBJZiB5b3Ugd291bGQgbGlrZSB0byB3b3JrIHdpdGggdGhlIGxhdGVzdCB2ZXJzaW9uIG9mICIrdCsnIGFuZCBmdXR1cmUgdmVyc2lvbnMgcmVsZWFzZWQgd2l0aGluIHRoZSBuZXh0IDEyIG1vbnRocywgcGxlYXNlIHZpc2l0IDxhIGhyZWY9IicrbisnIj5vdXIgd2Vic2l0ZTwvYT4gdG8gdXBncmFkZSB5b3VyIGxpY2Vuc2UuPGJyLz5JZiB5b3UgaGF2ZSBhbHJlYWR5IHB1cmNoYXNlZCB0aGUgbmV3IGxpY2Vuc2UsIHBsZWFzZSA8YSBocmVmPSIjIiBjbGFzcz0iJytnKyciPmFjdGl2YXRlIGl0PC9hPi4gQ2xpY2sgPGEgaHJlZj0iaHR0cHM6Ly9xdW9ra2Fqcy5jb20vZG9jcy9wcmV2aW91cy5odG1sP2V4cGlyeWRhdGU9JytyLmV4cGlyeURhdGUuZ2V0VVRDRnVsbFllYXIoKSsiLSIrKHIuZXhwaXJ5RGF0ZS5nZXRVVENNb250aCgpKzEpKyItIityLmV4cGlyeURhdGUuZ2V0VVRDRGF0ZSgpKyciPmhlcmU8L2E+IGZvciBoZWxwLicpOmk9IllvdXIgIit0KyIgbGljZW5zZSIrKHByb2Nlc3MuZW52LnF1b2trYT8iIjoiIGZyZWUgdXBncmFkZXMgcGVyaW9kIikrIiA8Yj4gZXhwaXJlcyBvbiAiK3RoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5leHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZCsiPC9iPi4gSWYgeW91IHdvdWxkIGxpa2UgdG8gd29yayB3aXRoIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiAiK3QrJyBhbmQgZnV0dXJlIHZlcnNpb25zIHJlbGVhc2VkIHdpdGhpbiB0aGUgbmV4dCAxMiBtb250aHMsIHBsZWFzZSB2aXNpdCA8YSBocmVmPSInK24rJyI+b3VyIHdlYnNpdGU8L2E+IHRvIHVwZ3JhZGUgeW91ciBsaWNlbnNlLjxici8+SWYgeW91IGhhdmUgYWxyZWFkeSBwdXJjaGFzZWQgdGhlIG5ldyBsaWNlbnNlLCBwbGVhc2UgPGEgaHJlZj0iIyIgY2xhc3M9IicrZysnIj5hY3RpdmF0ZSBpdDwvYT4uJyksaSYmdGhpcy5fZW1pdE5vdGlmaWNhdGlvbigid2FybmluZyIsaSxyKSxlKCk7aWYodGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmV4cGlyZWRUcmlhbClpPSJZb3VyICIrdCsnIHRyaWFsIHBlcmlvZCBpcyBvdmVyLCB0aGFua3MgZm9yIHRyeWluZyBpdCBvdXQuIFBsZWFzZSB2aXNpdCA8YSBocmVmPSInK24rJyI+b3VyIHdlYnNpdGU8L2E+IHRvIHB1cmNoYXNlIGEgbGljZW5zZSBvciB0byBhcnJhbmdlIGEgbG9uZ2VyIHRyaWFsIHBlcmlvZCBmb3IgeW91cnNlbGYgb3IgeW91ciB0ZWFtLjxici8+SWYgeW91IGhhdmUgYWxyZWFkeSBwdXJjaGFzZWQgdGhlIGxpY2Vuc2UsIHBsZWFzZSA8YSBocmVmPSIjIiBjbGFzcz0iJytnKyciPmFjdGl2YXRlIGl0PC9hPi4nLHRoaXMuX2VtaXROb3RpZmljYXRpb24oImVycm9yIixpKSx0aGlzLl9lbWl0U3RvcHBlZCgpO2Vsc2V7aWYoIXRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5pbnZhbGlkVmVyc2lvbilyZXR1cm4gaT0iTm8gdmFsaWQgIit0KycgbGljZW5zZSBmb3VuZCwgc3RhcnRpbmcgaW4gdHJpYWwgbW9kZS48YnIvPklmIHlvdSB3b3VsZCBsaWtlIHRvIHB1cmNoYXNlIGEgbGljZW5zZSwgcGxlYXNlIHZpc2l0IDxhIGhyZWY9IicrbisnIj5vdXIgd2Vic2l0ZTwvYT4uPGJyLz5JZiB5b3UgaGF2ZSBhbHJlYWR5IHB1cmNoYXNlZCB0aGUgbGljZW5zZSwgcGxlYXNlIDxhIGhyZWY9IiMiIGNsYXNzPSInK2crJyI+YWN0aXZhdGUgaXQ8L2E+LicsdGhpcy5fZW1pdE5vdGlmaWNhdGlvbigid2FybmluZyIsaSksdGhpcy5fdHJpYWxNb2RlKCksZSgpO3ZhciBhPXtpbnZhbGlkVmVyc2lvbjohMH07cHJvY2Vzcy5lbnYucXVva2thPyhhLmVkaXRvck5hbWU9bC5nZXRFZGl0b3JOYW1lKHRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5lZGl0b3IpLGEuZWRpdG9yVHlwZT1sLmdldEVkaXRvclR5cGUodGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmVkaXRvciksYS5leHBpcnlEYXRlPW5ldyBvKHRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5leHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZCsiIFVUQyIpLGEuY29tcGF0aWJsZUVkaXRvclZlcnNpb249bC5sYXN0Q29tcGF0aWJsZUVkaXRvclZlcnNpb24odGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmVkaXRvcixhLmV4cGlyeURhdGUpLGk9IllvdSBhcmUgPGI+bm90IGxpY2Vuc2VkIHRvIHVzZSBQUk8gZmVhdHVyZXMgZm9yIHRoaXMgdmVyc2lvbiBvZiAiK3QrJyB3aXRoIHlvdXIgY3VycmVudCBlZGl0b3I8L2I+LiBBcyB5b3VyIDEyIG1vbnRocyBvZiBmcmVlIFF1b2trYSB1cGRhdGVkIGhhdmUgZXhwaXJlZCwgdGhpcyBpcyBsaWtlbHkgYSByZXN1bHQgb2YgeW91ciBlZGl0b3IgYXV0b21hdGljYWxseSB1cGRhdGluZyBvbiB5b3VyIGJlaGFsZi4gVG8gY29udGludWUgdXNpbmcgUXVva2thLCB5b3UgY2FuOiA8YSBocmVmPSInK24rJyI+W1JlbmV3XTwvYT4sIDxhIGhyZWY9IiMiIGNsYXNzPSInK2crJyI+W0FjdGl2YXRlXTwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vcXVva2thanMuY29tL2RvY3MvcHJldmlvdXMuaHRtbD9leHBpcnlkYXRlPScrYS5leHBpcnlEYXRlLmdldFVUQ0Z1bGxZZWFyKCkrIi0iKyhhLmV4cGlyeURhdGUuZ2V0VVRDTW9udGgoKSsxKSsiLSIrYS5leHBpcnlEYXRlLmdldFVUQ0RhdGUoKSsiJmVkaXRvcnR5cGU9IithLmVkaXRvclR5cGUrIiZlZGl0b3I9IitlbmNvZGVVUklDb21wb25lbnQoYS5lZGl0b3JOYW1lKyIgdmVyc2lvbiAiK2EuY29tcGF0aWJsZUVkaXRvclZlcnNpb24pKyciPltEb3duZ3JhZGVdPC9hPiwgb3IgPGEgaHJlZj0iIyIgY2xhc3M9IicrVisiXCI+W1VzZSAnQ29tbXVuaXR5JyBFZGl0aW9uXTwvYT4uIFRoZSBsYXRlc3QgdmVyc2lvbiBvZiAiK2EuZWRpdG9yTmFtZSsiIHRoYXQgaXMgY29tcGF0aWJsZSB3aXRoIHlvdXIgbGljZW5zZSBpczogIithLmNvbXBhdGlibGVFZGl0b3JWZXJzaW9uKyIuIik6aT0iQ3VycmVudGx5IGluc3RhbGxlZCB2ZXJzaW9uIG9mICIrdCsnIGlzIDxiPm5vdCBjb3ZlcmVkIGJ5IHlvdXIgbGljZW5zZTwvYj4uIFBsZWFzZSB2aXNpdCA8YSBocmVmPSInK24rJyI+b3VyIHdlYnNpdGU8L2E+IHRvIHVwZ3JhZGUgeW91ciBsaWNlbnNlLjxici8+SWYgeW91IGhhdmUgcHVyY2hhc2VkIGEgcmVuZXdhbCBsaWNlbnNlLCBwbGVhc2UgPGEgaHJlZj0iIyIgY2xhc3M9IicrZysnIj5hY3RpdmF0ZSBpdDwvYT4uJyx0aGlzLl9lbWl0Tm90aWZpY2F0aW9uKCJlcnJvciIsaSxhKSx0aGlzLl9lbWl0U3RvcHBlZCgpfX0sbi5wcm90b3R5cGUuX3RyaWFsTW9kZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLG49cHJvY2Vzcy5lbnYucXVva2thPyJRdW9ra2EuanMgJ1BybyciOiJ3YWxsYWJ5LmpzIixpPXByb2Nlc3MuZW52LnF1b2trYT8iaHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvIjoiaHR0cHM6Ly93YWxsYWJ5anMuY29tL3B1cmNoYXNlIjtlPWV8fDAscChmdW5jdGlvbigpe2U+PXc/KHQuX2VtaXROb3RpZmljYXRpb24oIndhcm5pbmciLCJUbyBrZWVwIHRyaWFsaW5nICIrbisnLCBwbGVhc2UgPGI+cmVzdGFydCB5b3VyIGVkaXRvcjwvYj4gb3IgdmlzaXQgPGEgaHJlZj0iJytpKyciPm91ciB3ZWJzaXRlPC9hPiB0byBwdXJjaGFzZSBhIGxpY2Vuc2UuPGJyLz5JZiB5b3UgaGF2ZSBhbHJlYWR5IHB1cmNoYXNlZCB0aGUgbGljZW5zZSwgcGxlYXNlIDxhIGhyZWY9IiMiIGNsYXNzPSInK2crJyI+YWN0aXZhdGUgaXQ8L2E+LicpLHQuc3RvcCgpLHQuX2VtaXRTdG9wcGVkKCEwKSk6KHQuX2NvbnRpbnVlVHJpYWxTZXNzaW9uPWZ1bmN0aW9uKCl7ZCh0Ll9zdG9wcGVyVGltZW91dCksdC5fdHJpYWxNb2RlKGUrMSl9LHQuX3N0b3BwZXJUaW1lb3V0PXAoZnVuY3Rpb24oKXt0LnN0b3AoKSx0Ll9lbWl0U3RvcHBlZCgpfSxTKSx0Ll9lbWl0Tm90aWZpY2F0aW9uKCJ3YXJuaW5nIiwiVG8gY29udGludWUgIituKycgdHJpYWwgc2Vzc2lvbiwgcGxlYXNlIDxhIGhyZWY9IiMiIGNsYXNzPSInK3krJyI+Y2xpY2sgIkNvbnRpbnVlIjwvYT4uPGJyLz5WaXNpdCA8YSBocmVmPSInK2krJyI+b3VyIHdlYnNpdGU8L2E+IHRvIHB1cmNoYXNlIGEgbGljZW5zZS48YnIvPklmIHlvdSBoYXZlIGFscmVhZHkgcHVyY2hhc2VkIHRoZSBsaWNlbnNlLCBwbGVhc2UgPGEgaHJlZj0iIyIgY2xhc3M9IicrZysnIj5hY3RpdmF0ZSBpdDwvYT4uJykpfSxmKX0sbi5wcm90b3R5cGUuX2xpY2Vuc2VWZXJpZmljYXRpb25SZXN1bHQ9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpLHI9dGhpcyxhPXt2YWxpZDohMSxleHBpcmVkVHJpYWw6ITB9O3RyeXtpPXIuX3JlYWRGaWxlU3luYyh0KX1jYXRjaChsKXt0cnl7ci5fd3JpdGVGaWxlU3luYyh0LCtuZXcgbyl9Y2F0Y2goYyl7fX10cnl7aWYoXy5pc1N0cmluZyhpKSlpZihpLmxlbmd0aD4xMDApe3ZhciBwPW0ucGFyc2VLZXkoaSksZD1wLmxpY2Vuc2VTaWduYXR1cmU7aWYoUltfLnJ0cmltKGQsIj0iKV0pYS5leHBpcmVkPSEwO2Vsc2V7YS5leHBpcmVkVHJpYWw9ITEsYS5rZXk9aTt2YXIgdT1wLmxpY2Vuc2VlTmFtZSxoPXAubGljZW5zZWVFbWFpbCxmPXAubGljZW5zZVRhZ3MsUz1wLmxpY2Vuc2VkUHJvZHVjdCx3PXAuZXhwaXJhdGlvbkRhdGVTdHJpbmc7YS5uYW1lPXUsYS5leHBpcmF0aW9uRGF0ZT13LGEuZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQ9cC5leHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZDt2YXIgZz1zLmNyZWF0ZVZlcmlmeSgiUlNBLVNIQTUxMiIpO2cudXBkYXRlKG5ldyBCdWZmZXIodStmK3cpKTt2YXIgeT1+Uy5pbmRleE9mKCJXYWxsYWJ5LmpzICsgUXVva2thLmpzIik/RDoiUXVva2thIj09PWU/ZTp+Uy5pbmRleE9mKEQpP0Q6ZTtpZihhLnZhbGlkPWcudmVyaWZ5KFRbeV0sbmV3IEJ1ZmZlcihkLCJiYXNlNjQiKSksYS52YWxpZCl7dmFyIFY9dy5zcGxpdCgiLyIpLGI9bmV3IG8oVlsxXSsiLyIrVlswXSsiLyIrVlsyXSksaz1uZXcgbygxNTUwNTQ2Mzk2NTA4KTtrLnNldEhvdXJzKDAsMCwwLDApO3ZhciBGPWg9PT1yLl9wcm9qZWN0Ll93YWxsYWJ5RW1haWwsVz1uZXcgbztpZihXLnNldEhvdXJzKDAsMCwwLDApLGI8aylwcm9jZXNzLmVudi5xdW9ra2EmJnRoaXMuX2VkaXRvclZlcnNpb25Jc09rQWZ0ZXJFeHBpcnkoYixrLFcsbik/KGEuZXhwaXJlZD0hMCxhLnZhbGlkPSFGLGEuZXhwaXJlZFRyaWFsPUYpOihhLmludmFsaWRWZXJzaW9uPSEwLGEudmFsaWQ9ITEsYS5lZGl0b3I9bik7ZWxzZXt0cnl7dmFyIE49dm9pZCAwO2EuaGFzaD1GP3IuX3Byb2plY3QuX3dhbGxhYnlFbWFpbDooTj1zLmNyZWF0ZUhhc2goInNoYTUxMiIpLE4udXBkYXRlKG5ldyBCdWZmZXIoaSwiYmFzZTY0IikpLE4uZGlnZXN0KCJiYXNlNjQiKSl9Y2F0Y2goSSl7YS5oYXNoPXIuX3Byb2plY3QuX3dhbGxhYnlFbWFpbH1pZihiPFcpIXByb2Nlc3MuZW52LnF1b2trYXx8cHJvY2Vzcy5lbnYucXVva2thJiZ0aGlzLl9lZGl0b3JWZXJzaW9uSXNPa0FmdGVyRXhwaXJ5KGIsayxXLG4pPyhhLmV4cGlyZWQ9ITAsYS52YWxpZD0hRixhLmV4cGlyZWRUcmlhbD1GKTooYS5pbnZhbGlkVmVyc2lvbj0hMCxhLnZhbGlkPSExLGEuZWRpdG9yPW4pO2Vsc2V7dmFyIFU9bmV3IG87VS5zZXREYXRlKFUuZ2V0RGF0ZSgpK3YpLGEuZXhwaXJpbmdTb29uPWI8VX19fX19ZWxzZXt2YXIgRT1wYXJzZUludChpLDEwKTthLmV4cGlyZWRUcmlhbD1fLmlzTmFOKEUpfHxFKyhwcm9jZXNzLmVudi5xdW9ra2E/MTMxNGU2OjI2MjhlNik8K25ldyBvfWVsc2UgYS5leHBpcmVkVHJpYWw9ITF9Y2F0Y2goSSl7YS52YWxpZD0hMX1yZXR1cm4gYX0sbi5wcm90b3R5cGUuX2VkaXRvclZlcnNpb25Jc09rQWZ0ZXJFeHBpcnk9ZnVuY3Rpb24oZSx0LG4saSl7dmFyIG89bC5lZGl0b3JFeHBpcnlEYXRlKGkpO3JldHVybiBvP288PWU6K248PSt0KzEzMTRlNiYmK248PStlKzEzMTRlNn0sbi5wcm90b3R5cGUuX2VtaXRGaWxlc1RvVHJhY2s9ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdCh7dHlwZToiZmlsZXNUb1RyYWNrIixmaWxlczplfSl9LG4ucHJvdG90eXBlLl9lbWl0VGVzdFJ1bkVycm9yPWZ1bmN0aW9uKGUpe3RoaXMuX2VtaXQoe3R5cGU6InN0YXRzIixkYXRhOmV9KX0sbi5wcm90b3R5cGUuX2VtaXREb2N1bWVudFVwZGF0ZXM9ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdCh7dHlwZToiZG9jdW1lbnRVcGRhdGVzIix1cGRhdGVzOmV9KX0sbi5wcm90b3R5cGUuX2VtaXRTdGF0c1VwZGF0ZT1mdW5jdGlvbihlKXt0aGlzLl9lbWl0KHt0eXBlOiJzdGF0cyIsZGF0YTplfSl9LG4ucHJvdG90eXBlLl9lbWl0UHJvamVjdENvbmZpZ3VyZWQ9ZnVuY3Rpb24oZSx0KXt0aGlzLl9lbWl0KF8uZXh0ZW5kKHt9LHQse2ZpbGVzOmV9KSl9LG4ucHJvdG90eXBlLl9lbWl0Tm90aWZpY2F0aW9uPWZ1bmN0aW9uKGUsdCxuKXt0aGlzLl9lbWl0KHt0eXBlOiJub3RpZmljYXRpb24iLG5vdGlmaWNhdGlvbjpfLmV4dGVuZCh7dGV4dDp0LHR5cGU6ZX0sbnx8e30pfSl9LG4ucHJvdG90eXBlLl9lbWl0U3RvcHBlZD1mdW5jdGlvbihlKXt0aGlzLl9lbWl0KHt0eXBlOiJzdG9wcGVkIixkZWFjdGl2YXRlOmV9KX0sbi5wcm90b3R5cGUuX2VtaXRFeHBpcmVkTGljZW5zZT1mdW5jdGlvbigpe3RoaXMuX2VtaXQoe3R5cGU6ImV4cGlyZWRMaWNlbnNlIn0pfSxuLnByb3RvdHlwZS5fZW1pdD1mdW5jdGlvbihlKXt0aGlzLmVtaXQoIm1lc3NhZ2UiLGUpfSxuLnByb3RvdHlwZS5fZXJyb3JNZXNzYWdlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9wcm9qZWN0JiZ0aGlzLl9wcm9qZWN0Ll9jbGVhblN0YWNrKGUpLGUmJihlLnN0YWNrfHxlLm1lc3NhZ2UpfSxuLnByb3RvdHlwZS5fdGVzdFJ1bkVycm9yTWVzc2FnZT1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5tZXNzYWdlfSxufShFdmVudEVtaXR0ZXIpO3QuZXhwb3J0cz1rfX0seyIuL3F1b2trYUVkaXRvclZlcnNpb25zIjo2LCIuL3NlcnZlci9maWxlU3lzdGVtIjoxNCwiLi9zZXJ2ZXIvbW9kZWwiOjE1LCIuL3NoYXJlZC91dGlscyI6MjAsY2hpbGRfcHJvY2Vzczp2b2lkIDAsY3J5cHRvOnZvaWQgMCxkZWJ1Zzp2b2lkIDAscGF0aDp2b2lkIDAsdGltZXJzOnZvaWQgMH1dLDY6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaT10LmV4cG9ydHM9e30sbz17IkR1bW15SWRlLTEuMC4wIjpuZXcgRGF0ZSgiMDEgSmFuIDIwMDAiKSwiVlNDb2RlLTAuMTAuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0wLjEwLjEwIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTAuMTAuMTEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMC4xMC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTAuMTAuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0wLjEwLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMC4xMC42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTAuMTAuOCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0wLjEwLjkiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4wLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4zLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4zLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS40LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS41LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS41LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS41LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS41LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS42LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS42LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS43LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS43LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS43LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS44LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS44LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS45LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS45LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTAuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjEwLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjExLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjEyLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xNC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTQuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xNS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE2LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xOS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTkuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE5LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjAuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjIxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjIyLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjIzLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjQuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjI1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yNS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjI2LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjI3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yOC4wIjpuZXcgRGF0ZSgiMDkgT2N0IDIwMTgiKSwiVlNDb2RlLTEuMjguMSI6bmV3IERhdGUoIjEyIE9jdCAyMDE4IiksIlZTQ29kZS0xLjI4LjIiOm5ldyBEYXRlKCIxNyBPY3QgMjAxOCIpLCJWU0NvZGUtMS4yOS4wIjpuZXcgRGF0ZSgiMTIgTm92IDIwMTgiKSwiVlNDb2RlLTEuMjkuMSI6bmV3IERhdGUoIjEzIE5vdiAyMDE4IiksIlZTQ29kZS0xLjMwLjAiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJWU0NvZGUtMS4zMC4xIjpuZXcgRGF0ZSgiMTIgRGVjIDIwMTgiKSwiVlNDb2RlLTEuMzAuMiI6bmV3IERhdGUoIjYgSmFuIDIwMTkiKSwiVlNDb2RlLTEuMzEuMCI6bmV3IERhdGUoIjUgRmViIDIwMTkiKSwiVlNDb2RlLTEuMzEuMSI6bmV3IERhdGUoIjExIEZlYiAyMDE5IiksIkF0b20tMC4wLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjAuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4xLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC40LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC43LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjkuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4xMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4xMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4xNi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4xOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjEuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4yMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjI0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4yNi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjI3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4yOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjMwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMzEuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4zMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjMzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMzQuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4zNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjM2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMzcuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4zOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjM5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNDAuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC40MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjQyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNDMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC40NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjQ1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNDYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC40Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjQ4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNDkuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC41MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjUxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNTIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC41My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjU0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNTUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC41Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjU3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNTguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC41OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjYwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNjEuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC42Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjYzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNjQuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC42NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjY2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNjcuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC42OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjY5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNzAuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC43MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjcyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNzMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC43NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjc1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNzYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC43Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjc4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNzkuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC44MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjgxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuODIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC44My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjg0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuODUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC44Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjg3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuODguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC44OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjkwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuOTEuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC45Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjkzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuOTQuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC45NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjk2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuOTcuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC45OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjk5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTAwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTAxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTAyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTAzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTA0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTA1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTA2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTA3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTA4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTA5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTEwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTExLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTEyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTEzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTE0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTE1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTE2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTE3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTE4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTE5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTIwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTIxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTIyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTIzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTI0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTI1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTI2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTI3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTI4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTI5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTMwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTMxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTMyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTMzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTM0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTM1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTM2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTM3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTM4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTM5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQ0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQ1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQ2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQ3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQ4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTQ5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTUwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTUxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTUyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTUzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTU0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTU1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTU2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTU3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTU4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTU5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTYwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTYxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTYyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTYzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTY0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTY1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTY2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTY3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTY4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTY5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTcwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTcxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTcyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTczLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTc0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTc1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTc2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTc3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTc4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTc5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTgwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTgxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTgyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTgzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTg0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTg1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTg2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTg3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTg4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTg5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTkwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTkxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTkyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTkzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTk0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTk1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTk2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTk3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTk4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTk5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjAwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjAxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjAyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjAzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjA0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjA1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjA2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjA3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjA4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjA5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjEwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjExLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjEwIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuMTEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC4xMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjEzIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuMTQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC4xNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjE2IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuMTciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC4xOCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjE5IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC43IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuOCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjkiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjQuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS40LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjQuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS41LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjUuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS41LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS42LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjcuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS43LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS43LjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjkuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS45LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuOS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjkuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS45LjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuOS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjkuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS45LjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuOS44IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjkuOSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEwLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTAuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjExLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEyLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEyLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTIuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMi42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEyLjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTIuOCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMi45IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE0LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTQuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xNC4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE0LjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xNi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTkuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xOS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE5LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTkuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xOS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE5LjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTkuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xOS43IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjAuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIxLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIyLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIzLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjI0LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yNS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjI2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjYuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjI3LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjcuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjI4LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjguMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjMwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMzEuMCI6bmV3IERhdGUoIjI4IFNlcCAyMDE4IiksIkF0b20tMS4zMS4xIjpuZXcgRGF0ZSgiMDIgT2N0IDIwMTgiKSwiQXRvbS0xLjMxLjIiOm5ldyBEYXRlKCIwMiBPY3QgMjAxOCIpLCJBdG9tLTEuMzIuMCI6bmV3IERhdGUoIjE5IE9jdCAyMDE4IiksIkF0b20tMS4zMi4xIjpuZXcgRGF0ZSgiMTkgT2N0IDIwMTgiKSwiQXRvbS0xLjMyLjIiOm5ldyBEYXRlKCI4IE5vdiAyMDE4IiksIkF0b20tMS4zMy4wIjpuZXcgRGF0ZSgiMjYgTm92IDIwMTgiKSwiQXRvbS0xLjMzLjEiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJBdG9tLTEuMzQuMCI6bmV3IERhdGUoIjEyIERlYyAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNi4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTYuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE2LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjIuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4yLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMi42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjIuNyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4yLjgiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4zLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4zLjQiOm5ldyBEYXRlKCIyMiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjEuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4xLjciOm5ldyBEYXRlKCIyMiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjIuMyI6bmV3IERhdGUoIjE3IFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4yLjQiOm5ldyBEYXRlKCIxNyBPY3QgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMi41IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjIuNiI6bmV3IERhdGUoIjI2IE5vdiAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4zIjpuZXcgRGF0ZSgiMjYgTm92IDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjMuMSI6bmV3IERhdGUoIjYgRGVjIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjMuMiI6bmV3IERhdGUoIjEyIERlYyAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4zLjMiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMy40IjpuZXcgRGF0ZSgiMSBGZWIgMjAxOSIpLCJJbnRlbGxpSi1DTGlvbiAyMDE2LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTYuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNi4zLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE2LjMuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4zLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMy41IjpuZXcgRGF0ZSgiMjIgTm92IDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMS42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4xLjciOm5ldyBEYXRlKCIyMiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4yLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjIuNCI6bmV3IERhdGUoIjE3IFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMi41IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4yLjYiOm5ldyBEYXRlKCIxNCBOb3YgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjIuNyI6bmV3IERhdGUoIjI2IE5vdiAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMyI6bmV3IERhdGUoIjI2IE5vdiAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMy4xIjpuZXcgRGF0ZSgiNSBEZWMgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjMuMiI6bmV3IERhdGUoIjEyIERlYyAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMy4zIjpuZXcgRGF0ZSgiMTIgRGVjIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4zLjQiOm5ldyBEYXRlKCIxIEZlYiAyMDE5IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTYuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNi4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwKIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4zLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjMuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMy43IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTguMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTguMS42IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTguMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4yLjQiOm5ldyBEYXRlKCIxNyBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjIuNSI6bmV3IERhdGUoIjE0IE5vdiAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTguMyI6bmV3IERhdGUoIjI2IE5vdiAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTguMy4xIjpuZXcgRGF0ZSgiMTIgRGVjIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4zLjIiOm5ldyBEYXRlKCIyMiBKYW4gMjAxOSIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxNy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTcuMy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTcuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTcuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTcuMy41IjpuZXcgRGF0ZSgiMTMgTm92IDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE4LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE4LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE4LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE4LjEuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE4LjEuNyI6bmV3IERhdGUoIjEzIE5vdiAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE4LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4yLjMiOm5ldyBEYXRlKCIxNyBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4yLjQiOm5ldyBEYXRlKCIxNCBOb3YgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4zIjpuZXcgRGF0ZSgiMjIgTm92IDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTguMy4xIjpuZXcgRGF0ZSgiNiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4zLjIiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4zLjMiOm5ldyBEYXRlKCIxNSBKYW4gMjAxOSIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTYuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE2LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNi4zLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTYuMy42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE2LjMuNyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNi4zLjgiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjEuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjIuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4yLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMi42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjIuNyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4zLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjEuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjIuNCI6bmV3IERhdGUoIjE3IFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4yLjUiOm5ldyBEYXRlKCIxNiBPY3QgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMi42IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjIuNyI6bmV3IERhdGUoIjI2IE5vdiAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4zIjpuZXcgRGF0ZSgiMjIgTm92IDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjMuMSI6bmV3IERhdGUoIjUgRGVjIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjMuMiI6bmV3IERhdGUoIjEyIERlYyAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4zLjMiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMy40IjpuZXcgRGF0ZSgiMjggSmFuIDIwMTkiKSwiSW50ZWxsaUotTVBTIDIwMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxNy4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxNy4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxNy4yLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxNy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMy41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMy42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE4LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE4LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE4LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE4LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE4LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4yLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4yLjUiOm5ldyBEYXRlKCIxOSBPY3QgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4yLjYiOm5ldyBEYXRlKCIxOCBOb3YgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4zIjpuZXcgRGF0ZSgiNSBEZWMgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4zLjEiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4zLjIiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4zLjMiOm5ldyBEYXRlKCIxNSBKYW4gMjAxOSIpLCJJbnRlbGxpSi1NUFMgMy40LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMy40LjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE2LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTYuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMi40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4yLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4zLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMy41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4zLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjMuNyI6bmV3IERhdGUoIjUgRGVjIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMS42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4xLjciOm5ldyBEYXRlKCI1IERlYyAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjIuMyI6bmV3IERhdGUoIjEzIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMi40IjpuZXcgRGF0ZSgiMjggU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4yLjUiOm5ldyBEYXRlKCIxMiBPY3QgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjIuNiI6bmV3IERhdGUoIjI2IE5vdiAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMyI6bmV3IERhdGUoIjIzIE9jdCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMy4xIjpuZXcgRGF0ZSgiNiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjMuMiI6bmV3IERhdGUoIjEyIERlYyAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMy4zIjpuZXcgRGF0ZSgiMTIgRGVjIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4zLjQiOm5ldyBEYXRlKCIwOSBGZWIgMjAxOSIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTYuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE2LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNi4zLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTYuMy42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjEuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4xLjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMS44IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4yLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMi40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjIuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4yLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMi43IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjMuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4zLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjMuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4zLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMy43IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4xLjYiOm5ldyBEYXRlKCIxNCBOb3YgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMi41IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjIuNiI6bmV3IERhdGUoIjI2IE5vdiAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4yLjciOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMyI6bmV3IERhdGUoIjIyIE5vdiAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4zLjEiOm5ldyBEYXRlKCI1IERlYyAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4zLjIiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMy4zIjpuZXcgRGF0ZSgiMTIgRGVjIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjMuNCI6bmV3IERhdGUoIjI5IEphbiAyMDE5IiksIkludGVsbGlKLVJpZGVyIDIwMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTcuMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxNy4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE3LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxOC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxOC4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTguMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxOC4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE4LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE4LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxOC4zIjpuZXcgRGF0ZSgiMTIgRGVjIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxOC4zLjEiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE4LjMuMiI6bmV3IERhdGUoIjI5IEphbiAyMDE5IiksIkludGVsbGlKLVJpZGVyIDIwMTguMy4zIjpuZXcgRGF0ZSgiMTAgRmViIDIwMTkiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNi4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE2LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTYuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMS42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjIuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4zLjUiOm5ldyBEYXRlKCI0IERlYyAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4xLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjEuNiI6bmV3IERhdGUoIjQgRGVjIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMi4zIjpuZXcgRGF0ZSgiMjUgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4yLjQiOm5ldyBEYXRlKCIxNyBPY3QgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjIuNSI6bmV3IERhdGUoIjE4IE5vdiAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMi42IjpuZXcgRGF0ZSgiNiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjMiOm5ldyBEYXRlKCIyMyBOb3YgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjMuMSI6bmV3IERhdGUoIjEyIERlYyAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMy4yIjpuZXcgRGF0ZSgiMTIgRGVjIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4zLjMiOm5ldyBEYXRlKCIxNSBKYW4gMjAxOSIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjMuNCI6bmV3IERhdGUoIjExIEZlYiAyMDE5IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTYuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNi4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE2LjMuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTYuMy42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNi4zLjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjIuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMi42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4zLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjMuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjMuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxOC4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxOC4xLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjEuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxOC4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMi40IjpuZXcgRGF0ZSgiMiBPY3QgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjIuNSI6bmV3IERhdGUoIjE5IE9jdCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMi42IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxOC4yLjciOm5ldyBEYXRlKCIyNiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjMiOm5ldyBEYXRlKCIxOCBOb3YgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjMuMSI6bmV3IERhdGUoIjUgRGVjIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxOC4zLjIiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjMuMyI6bmV3IERhdGUoIjEyIEphbiAyMDE5IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMy40IjpuZXcgRGF0ZSgiMzAgSmFuIDIwMTkiKX07aS5lZGl0b3JFeHBpcnlEYXRlPWZ1bmN0aW9uKGUpe3JldHVybiBvW2VdfSxpLmdldEVkaXRvclR5cGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuc3RhcnRzV2l0aCgiQXRvbS0iKT8iQXRvbSI6ZS5zdGFydHNXaXRoKCJWU0NvZGUtIik/IlZTQ29kZSI6IkpldEJyYWlucyJ9LGkuZ2V0RWRpdG9yTmFtZT1mdW5jdGlvbihlKXtpZihlLnN0YXJ0c1dpdGgoIkF0b20tIikpcmV0dXJuIkF0b20iO2lmKGUuc3RhcnRzV2l0aCgiVlNDb2RlLSIpKXJldHVybiJWUyBDb2RlIjt2YXIgdD1lLnNwbGl0KCIgIik7cmV0dXJuIHRbMF19LGkubGFzdENvbXBhdGlibGVFZGl0b3JWZXJzaW9uPWZ1bmN0aW9uKGUsdCl7dmFyIG47aWYoZS5zdGFydHNXaXRoKCJBdG9tLSIpKW49IkF0b20tIjtlbHNlIGlmKGUuc3RhcnRzV2l0aCgiVlNDb2RlLSIpKW49IlZTQ29kZS0iO2Vsc2V7dmFyIGk9ZS5zcGxpdCgiICIpO249aVswXSsiICJ9dmFyIHI9W107Zm9yKHZhciBhIGluIG8pYS5zdGFydHNXaXRoKG4pJiZyLnB1c2goe2lkZTphLGRhdGU6b1thXX0pO3ZhciBzPXIuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLmRhdGU8dH0pO3JldHVybiBzLnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5kYXRlPHQuZGF0ZT8xOmUuZGF0ZT50LmRhdGU/LTE6MH0pLDA9PT1zLmxlbmd0aD8iVW5rbm93biI6c1swXS5pZGUuc3Vic3RyaW5nKG4ubGVuZ3RoKX19LHt9XSw3OltmdW5jdGlvbihlLHQsbil7dC5leHBvcnRzPXtET01FeGNlcHRpb246MSxOYW1lZE5vZGVNYXA6MSxBdHRyOjEsTm9kZToxLEVsZW1lbnQ6MSxEb2N1bWVudEZyYWdtZW50OjEsSFRNTERvY3VtZW50OjEsRG9jdW1lbnQ6MSxYTUxEb2N1bWVudDoxLENoYXJhY3RlckRhdGE6MSxUZXh0OjEsQ0RBVEFTZWN0aW9uOjEsUHJvY2Vzc2luZ0luc3RydWN0aW9uOjEsQ29tbWVudDoxLERvY3VtZW50VHlwZToxLERPTUltcGxlbWVudGF0aW9uOjEsTm9kZUxpc3Q6MSxIVE1MQ29sbGVjdGlvbjoxLEhUTUxPcHRpb25zQ29sbGVjdGlvbjoxLERPTVN0cmluZ01hcDoxLERPTVRva2VuTGlzdDoxLFNWR0FuaW1hdGVkU3RyaW5nOjEsU1ZHTnVtYmVyOjEsU1ZHU3RyaW5nTGlzdDoxLEV2ZW50OjEsQ2xvc2VFdmVudDoxLEN1c3RvbUV2ZW50OjEsTWVzc2FnZUV2ZW50OjEsRXJyb3JFdmVudDoxLEhhc2hDaGFuZ2VFdmVudDoxLEZvY3VzRXZlbnQ6MSxQb3BTdGF0ZUV2ZW50OjEsVUlFdmVudDoxLE1vdXNlRXZlbnQ6MSxLZXlib2FyZEV2ZW50OjEsVG91Y2hFdmVudDoxLFByb2dyZXNzRXZlbnQ6MSxDb21wb3NpdGlvbkV2ZW50OjEsV2hlZWxFdmVudDoxLEV2ZW50VGFyZ2V0OjEsQmFyUHJvcDoxLExvY2F0aW9uOjEsSGlzdG9yeToxLFNjcmVlbjoxLFBlcmZvcm1hbmNlOjEsQmxvYjoxLEZpbGU6MSxGaWxlTGlzdDoxLERPTVBhcnNlcjoxLEZvcm1EYXRhOjEsWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldDoxLFhNTEh0dHBSZXF1ZXN0VXBsb2FkOjEsTm9kZUl0ZXJhdG9yOjEsVHJlZVdhbGtlcjoxLEhUTUxFbGVtZW50OjEsSFRNTEFuY2hvckVsZW1lbnQ6MSxIVE1MQXJlYUVsZW1lbnQ6MSxIVE1MQXVkaW9FbGVtZW50OjEsSFRNTEJhc2VFbGVtZW50OjEsSFRNTEJvZHlFbGVtZW50OjEsSFRNTEJSRWxlbWVudDoxLEhUTUxCdXR0b25FbGVtZW50OjEsSFRNTENhbnZhc0VsZW1lbnQ6MSxIVE1MRGF0YUVsZW1lbnQ6MSxIVE1MRGF0YUxpc3RFbGVtZW50OjEsSFRNTERldGFpbHNFbGVtZW50OjEsSFRNTERpYWxvZ0VsZW1lbnQ6MSxIVE1MRGlyZWN0b3J5RWxlbWVudDoxLEhUTUxEaXZFbGVtZW50OjEsSFRNTERMaXN0RWxlbWVudDoxLEhUTUxFbWJlZEVsZW1lbnQ6MSxIVE1MRmllbGRTZXRFbGVtZW50OjEsSFRNTEZvbnRFbGVtZW50OjEsSFRNTEZvcm1FbGVtZW50OjEsSFRNTEZyYW1lRWxlbWVudDoxLEhUTUxGcmFtZVNldEVsZW1lbnQ6MSxIVE1MSGVhZGluZ0VsZW1lbnQ6MSxIVE1MSGVhZEVsZW1lbnQ6MSxIVE1MSFJFbGVtZW50OjEsSFRNTEh0bWxFbGVtZW50OjEsSFRNTElGcmFtZUVsZW1lbnQ6MSxIVE1MSW1hZ2VFbGVtZW50OjEsSFRNTElucHV0RWxlbWVudDoxLEhUTUxMYWJlbEVsZW1lbnQ6MSxIVE1MTGVnZW5kRWxlbWVudDoxLEhUTUxMSUVsZW1lbnQ6MSxIVE1MTGlua0VsZW1lbnQ6MSxIVE1MTWFwRWxlbWVudDoxLEhUTUxNYXJxdWVlRWxlbWVudDoxLEhUTUxNZWRpYUVsZW1lbnQ6MSxIVE1MTWVudUVsZW1lbnQ6MSxIVE1MTWV0YUVsZW1lbnQ6MSxIVE1MTWV0ZXJFbGVtZW50OjEsSFRNTE1vZEVsZW1lbnQ6MSxIVE1MT2JqZWN0RWxlbWVudDoxLEhUTUxPTGlzdEVsZW1lbnQ6MSxIVE1MT3B0R3JvdXBFbGVtZW50OjEsSFRNTE9wdGlvbkVsZW1lbnQ6MSxIVE1MT3V0cHV0RWxlbWVudDoxLEhUTUxQYXJhZ3JhcGhFbGVtZW50OjEsSFRNTFBhcmFtRWxlbWVudDoxLEhUTUxQaWN0dXJlRWxlbWVudDoxLEhUTUxQcmVFbGVtZW50OjEsSFRNTFByb2dyZXNzRWxlbWVudDoxLEhUTUxRdW90ZUVsZW1lbnQ6MSxIVE1MU2NyaXB0RWxlbWVudDoxLEhUTUxTZWxlY3RFbGVtZW50OjEsSFRNTFNvdXJjZUVsZW1lbnQ6MSxIVE1MU3BhbkVsZW1lbnQ6MSxIVE1MU3R5bGVFbGVtZW50OjEsSFRNTFRhYmxlQ2FwdGlvbkVsZW1lbnQ6MSxIVE1MVGFibGVDZWxsRWxlbWVudDoxLEhUTUxUYWJsZUNvbEVsZW1lbnQ6MSxIVE1MVGFibGVFbGVtZW50OjEsSFRNTFRpbWVFbGVtZW50OjEsSFRNTFRpdGxlRWxlbWVudDoxLEhUTUxUYWJsZVJvd0VsZW1lbnQ6MSxIVE1MVGFibGVTZWN0aW9uRWxlbWVudDoxLEhUTUxUZW1wbGF0ZUVsZW1lbnQ6MSxIVE1MVGV4dEFyZWFFbGVtZW50OjEsSFRNTFRyYWNrRWxlbWVudDoxLEhUTUxVTGlzdEVsZW1lbnQ6MSxIVE1MVW5rbm93bkVsZW1lbnQ6MSxIVE1MVmlkZW9FbGVtZW50OjEsU1ZHRWxlbWVudDoxLFNWR0dyYXBoaWNzRWxlbWVudDoxLFNWR1NWR0VsZW1lbnQ6MSxTdHlsZVNoZWV0OjEsTWVkaWFMaXN0OjEsQ1NTU3R5bGVTaGVldDoxLENTU1J1bGU6MSxDU1NTdHlsZVJ1bGU6MSxDU1NNZWRpYVJ1bGU6MSxDU1NJbXBvcnRSdWxlOjEsQ1NTU3R5bGVEZWNsYXJhdGlvbjoxLFN0eWxlU2hlZXRMaXN0OjEsWFBhdGhFeGNlcHRpb246MSxYUGF0aEV4cHJlc3Npb246MSxYUGF0aFJlc3VsdDoxLFhQYXRoRXZhbHVhdG9yOjEsTm9kZUZpbHRlcjoxLFVSTDoxLFVSTFNlYXJjaFBhcmFtczoxLFdpbmRvdzoxLGxlbmd0aDoxLHdpbmRvdzoxLGZyYW1lRWxlbWVudDoxLGZyYW1lczoxLHNlbGY6MSxwYXJlbnQ6MSx0b3A6MSxkb2N1bWVudDoxLGV4dGVybmFsOjEsbG9jYXRpb246MSxoaXN0b3J5OjEsbmF2aWdhdG9yOjEsbG9jYXRpb25iYXI6MSxtZW51YmFyOjEscGVyc29uYWxiYXI6MSxzY3JvbGxiYXJzOjEsc3RhdHVzYmFyOjEsdG9vbGJhcjoxLHBlcmZvcm1hbmNlOjEsc2NyZWVuOjEsYWRkRXZlbnRMaXN0ZW5lcjoxLHJlbW92ZUV2ZW50TGlzdGVuZXI6MSxkaXNwYXRjaEV2ZW50OjEsc2V0VGltZW91dDoxLHNldEludGVydmFsOjEsY2xlYXJJbnRlcnZhbDoxLGNsZWFyVGltZW91dDoxLE9wdGlvbjoxLEltYWdlOjEsQXVkaW86MSxwb3N0TWVzc2FnZToxLGF0b2I6MSxidG9hOjEsRmlsZVJlYWRlcjoxLFdlYlNvY2tldDoxLEFib3J0U2lnbmFsOjEsQWJvcnRDb250cm9sbGVyOjEsWE1MSHR0cFJlcXVlc3Q6MSxBcnJheUJ1ZmZlcjoxLEludDhBcnJheToxLFVpbnQ4QXJyYXk6MSxVaW50OENsYW1wZWRBcnJheToxLEludDE2QXJyYXk6MSxVaW50MTZBcnJheToxLEludDMyQXJyYXk6MSxVaW50MzJBcnJheToxLEZsb2F0MzJBcnJheToxLEZsb2F0NjRBcnJheToxLHN0b3A6MSxjbG9zZToxLGdldENvbXB1dGVkU3R5bGU6MSxjYXB0dXJlRXZlbnRzOjEscmVsZWFzZUV2ZW50czoxLGNvbnNvbGU6MSxuYW1lOjEsZGV2aWNlUGl4ZWxSYXRpbzoxLGlubmVyV2lkdGg6MSxpbm5lckhlaWdodDoxLG91dGVyV2lkdGg6MSxvdXRlckhlaWdodDoxLHBhZ2VYT2Zmc2V0OjEscGFnZVlPZmZzZXQ6MSxzY3JlZW5YOjEsc2NyZWVuWToxLHNjcm9sbFg6MSxzY3JvbGxZOjEsc2NyZWVuTGVmdDoxLHNjcmVlblRvcDoxLGFsZXJ0OjEsYmx1cjoxLGNvbmZpcm06MSxmb2N1czoxLG1vdmVCeToxLG1vdmVUbzoxLG9wZW46MSxwcmludDoxLHByb21wdDoxLHJlc2l6ZUJ5OjEscmVzaXplVG86MSxzY3JvbGw6MSxzY3JvbGxCeToxLHNjcm9sbFRvOjF9fSx7fV0sODpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5fdGVzdElkPWUuc3BlYyx0aGlzLl9maWxlSWQ9ZS5maWxlLHRoaXMuX3JhbmdlPWUucmFuZ2UsdGhpcy5fdGV4dD1lLnRleHQsdGhpcy5fdmFsdWVCYWc9ZS52YWx1ZUJhZyx0aGlzLl90eXBlPWUudHlwZSx0aGlzLl9jb250ZXh0PWUuY29udGV4dCx0aGlzLl9hY3R1YWw9ZS5hY3R1YWwsdGhpcy5fZXhwZWN0ZWQ9ZS5leHBlY3RlZH1yZXR1cm4gZS5wcm90b3R5cGUudGVzdElkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Rlc3RJZH0sZS5wcm90b3R5cGUuZmlsZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGVJZH0sZS5wcm90b3R5cGUucmFuZ2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmFuZ2V9LGUucHJvdG90eXBlLnNldFJhbmdlPWZ1bmN0aW9uKGUpe3RoaXMuX3JhbmdlPWV9LGUucHJvdG90eXBlLnRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGV4dH0sZS5wcm90b3R5cGUudmFsdWVCYWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmFsdWVCYWd9LGUucHJvdG90eXBlLmRldGFjaFZhbHVlQmFnPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdmFsdWVCYWc7cmV0dXJuIGRlbGV0ZSB0aGlzLl92YWx1ZUJhZyxlfSxlLnByb3RvdHlwZS50eXBlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3R5cGV9LGUucHJvdG90eXBlLnNldEZpbGU9ZnVuY3Rpb24oZSl7dGhpcy5fZmlsZT1lfSxlLnByb3RvdHlwZS5maWxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGV9LGUucHJvdG90eXBlLmxpbmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmFuZ2U/Xy5pc0FycmF5KHRoaXMuX3JhbmdlKT90aGlzLl9yYW5nZVswXTp0aGlzLl9yYW5nZS5zdGFydExpbmUoKTp2b2lkIDB9LGUucHJvdG90eXBlLmNvbnRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGV4dH0sZS5wcm90b3R5cGUuYWN0dWFsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FjdHVhbH0sZS5wcm90b3R5cGUuZXhwZWN0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXhwZWN0ZWR9LGV9KCk7dC5leHBvcnRzPWl9LHt9XSw5OltmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLl9pdGVtcz1lLml0ZW1zLHRoaXMuX2hpdHM9ZS5oaXRzfXJldHVybiBlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKHQsbil7dmFyIGk9dGhpczt0aGlzLl9rZXk9ZS5yYW5nZUtleSh0aGlzLl9pdGVtcyksdGhpcy5fZmlsZT10LHRoaXMuX3N0YXJ0TGluZT10aGlzLl9pdGVtc1swXSx0aGlzLl9zdGFydENvbHVtbj10aGlzLl9pdGVtc1sxXSx0aGlzLl9lbmRMaW5lPXRoaXMuX2l0ZW1zWzJdLHRoaXMuX2VuZENvbHVtbj10aGlzLl9pdGVtc1szXSx0aGlzLl9udW1PZkNvdmVyaW5nVGVzdHM9MCx0aGlzLl9pc0NvdmVyZWQ9ITEsdGhpcy5faGl0cyYmKHRoaXMuX2NvdmVyaW5nVGVzdE1hcD1PYmplY3QuY3JlYXRlKG51bGwpLF8uZWFjaCh0aGlzLl9oaXRzLGZ1bmN0aW9uKGUpe2lmKGUpe3ZhciB0PW5bZV07aWYoIXQpcmV0dXJuO3ZhciBvPXQua2V5KCk7aS5fY292ZXJpbmdUZXN0TWFwW29dPXQsaS5fYWRkRmFpbGVkT25NZVRlc3RJZkZhaWxpbmcodCl9ZWxzZSBpLl9pc0NvdmVyZWRCeU5vdFRlc3RzPSEwfSksaS5fbnVtT2ZDb3ZlcmluZ1Rlc3RzPV8uc2l6ZShpLl9jb3ZlcmluZ1Rlc3RNYXApLGkuX3NldElzQ292ZXJlZCgpKSxkZWxldGUgdGhpcy5faXRlbXMsZGVsZXRlIHRoaXMuX2hpdHN9LGUucHJvdG90eXBlLmxpbmVTaGlmdD1mdW5jdGlvbih0KXt0aGlzLl9zdGFydExpbmUrPXQsdGhpcy5fZW5kTGluZSs9dCx0aGlzLl9rZXk9ZS5yYW5nZUtleShbdGhpcy5fc3RhcnRMaW5lLHRoaXMuX3N0YXJ0Q29sdW1uLHRoaXMuX2VuZExpbmUsdGhpcy5fZW5kQ29sdW1uXSl9LGUucHJvdG90eXBlLnN0YXJ0TGluZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGFydExpbmV9LGUucHJvdG90eXBlLnN0YXJ0Q29sdW1uPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YXJ0Q29sdW1ufSxlLnByb3RvdHlwZS5lbmRMaW5lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VuZExpbmV9LGUucHJvdG90eXBlLmVuZENvbHVtbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbmRDb2x1bW59LGUucHJvdG90eXBlLmZhaWxzPWZ1bmN0aW9uKGUpe3RoaXMuX2dsb2JhbEVycm9yc3x8KHRoaXMuX2dsb2JhbEVycm9ycz1bXSksfnRoaXMuX2dsb2JhbEVycm9ycy5pbmRleE9mKGUpfHx0aGlzLl9nbG9iYWxFcnJvcnMucHVzaChlKX0sZS5wcm90b3R5cGUuc2V0Q29uc29sZUxvZz1mdW5jdGlvbihlKXt0aGlzLl9jb25zb2xlTG9nPWV9LGUucHJvdG90eXBlLmNvbnNvbGVMb2c9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29uc29sZUxvZ30sZS5wcm90b3R5cGUua2V5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2tleX0sZS5wcm90b3R5cGUuaXNEaXNwb3NlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0Rpc3Bvc2VkfSxlLnByb3RvdHlwZS5pc0Vycm9yU291cmNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZhaWxlZEJ5TWVUZXN0cyYmIV8uaXNFbXB0eSh0aGlzLl9mYWlsZWRCeU1lVGVzdHMpfHx0aGlzLl9nbG9iYWxFcnJvcnMmJiFfLmlzRW1wdHkodGhpcy5fZ2xvYmFsRXJyb3JzKX0sZS5wcm90b3R5cGUuaXNPbkVycm9yUGF0aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9mYWlsZWRPbk1lVGVzdHMmJiFfLmlzRW1wdHkodGhpcy5fZmFpbGVkT25NZVRlc3RzKX0sZS5wcm90b3R5cGUuZXJyb3JzPWZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJuIHRoaXMuaXNFcnJvclNvdXJjZSgpPyh0aGlzLl9mYWlsZWRCeU1lVGVzdHMmJihlPWUuY29uY2F0KF8uZmxhdHRlbihfLnZhbHVlcyh0aGlzLl9mYWlsZWRCeU1lVGVzdHMpKSkpLHRoaXMuX2dsb2JhbEVycm9ycyYmKGU9ZS5jb25jYXQodGhpcy5fZ2xvYmFsRXJyb3JzKSksZSk6ZX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzLl9maWxlLGRlbGV0ZSB0aGlzLl9jb3ZlcmluZ1Rlc3RNYXAsZGVsZXRlIHRoaXMuX2ZhaWxlZE9uTWVUZXN0cyxkZWxldGUgdGhpcy5fZmFpbGVkQnlNZVRlc3RzLGRlbGV0ZSB0aGlzLl9nbG9iYWxFcnJvcnMsdGhpcy5faXNEaXNwb3NlZD0hMCxkZWxldGUgdGhpcy5fbnVtT2ZDb3ZlcmluZ1Rlc3RzfSxlLnByb3RvdHlwZS5zb3VyY2VGaWxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGV9LGUucHJvdG90eXBlLmZhaWxzVGVzdD1mdW5jdGlvbihlLHQpe3RoaXMuX2ZhaWxlZEJ5TWVUZXN0c3x8KHRoaXMuX2ZhaWxlZEJ5TWVUZXN0cz1PYmplY3QuY3JlYXRlKG51bGwpKSx0aGlzLl9mYWlsZWRCeU1lVGVzdHNbZS5rZXkoKV09dH0sZS5wcm90b3R5cGUubm90Q292ZXJlZEJ5PWZ1bmN0aW9uKGUpe3ZhciB0PWUua2V5KCksbj10aGlzLmlzQ292ZXJlZCgpO3RoaXMuX2NvdmVyaW5nVGVzdE1hcCYmdGhpcy5fY292ZXJpbmdUZXN0TWFwW3RdJiYoZGVsZXRlIHRoaXMuX2NvdmVyaW5nVGVzdE1hcFt0XSx0aGlzLl9udW1PZkNvdmVyaW5nVGVzdHMtLSx0aGlzLl9zZXRJc0NvdmVyZWQoKSksdGhpcy5fZmFpbGVkQnlNZVRlc3RzJiZkZWxldGUgdGhpcy5fZmFpbGVkQnlNZVRlc3RzW3RdLHRoaXMuX2ZhaWxlZE9uTWVUZXN0cyYmZGVsZXRlIHRoaXMuX2ZhaWxlZE9uTWVUZXN0c1t0XSxudWxsIT10aGlzLl9maWxlJiZ0aGlzLl9maWxlLnJhbmdlQ292ZXJhZ2VDaGFuZ2VkKHRoaXMsbil9LGUucHJvdG90eXBlLmNvdmVyaW5nVGVzdHM9ZnVuY3Rpb24oKXtyZXR1cm4gXy52YWx1ZXModGhpcy5fY292ZXJpbmdUZXN0TWFwKX0sZS5wcm90b3R5cGUuaXNDb3ZlcmVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzQ292ZXJlZH0sZS5wcm90b3R5cGUuX3NldElzQ292ZXJlZD1mdW5jdGlvbigpe3RoaXMuX2lzQ292ZXJlZD10aGlzLl9udW1PZkNvdmVyaW5nVGVzdHM+MHx8dGhpcy5faXNDb3ZlcmVkQnlOb3RUZXN0c30sZS5wcm90b3R5cGUuYXR0YWNoZWRUb1NvdXJjZUZpbGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX2NvdmVyaW5nVGVzdE1hcCYmXy5lYWNoKHRoaXMuX2NvdmVyaW5nVGVzdE1hcCxmdW5jdGlvbih0KXtyZXR1cm4gdC5jb3ZlcnMoZSl9KX0sZS5wcm90b3R5cGUudXBkYXRlRnJvbT1mdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcztyZXR1cm4gdCYmbiYmXy5pc0VtcHR5KGUuX2NvdmVyaW5nVGVzdE1hcCk/dm9pZChlLl9jb25zb2xlTG9nJiYodGhpcy5fY29uc29sZUxvZz1lLl9jb25zb2xlTG9nKSk6KHRoaXMuX2lzQ292ZXJlZEJ5Tm90VGVzdHM9ZS5faXNDb3ZlcmVkQnlOb3RUZXN0cyx0aGlzLl9jb25zb2xlTG9nPWUuX2NvbnNvbGVMb2csdGhpcy5fZmFpbGVkQnlNZVRlc3RzJiYodGhpcy5fZmFpbGVkQnlNZVRlc3RzPU9iamVjdC5jcmVhdGUobnVsbCkpLHRoaXMuX2dsb2JhbEVycm9ycyYmKHRoaXMuX2dsb2JhbEVycm9ycz1bXSksZS5fY292ZXJpbmdUZXN0TWFwPyh0JiYhbj8odGhpcy5fY292ZXJpbmdUZXN0TWFwPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fZmFpbGVkT25NZVRlc3RzJiYodGhpcy5fZmFpbGVkT25NZVRlc3RzPU9iamVjdC5jcmVhdGUobnVsbCkpLF8uZWFjaChlLl9jb3ZlcmluZ1Rlc3RNYXAsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5rZXkoKTtpLl9jb3ZlcmluZ1Rlc3RNYXBbdF09ZSxlLmNvdmVycyhpKSxpLl9hZGRGYWlsZWRPbk1lVGVzdElmRmFpbGluZyhlKX0pKTppLl9mYWlsZWRPbk1lVGVzdHM/Xy5lYWNoKGUuX2NvdmVyaW5nVGVzdE1hcCxmdW5jdGlvbihlKXtyZXR1cm4gaS5fdXBkYXRlVGVzdFdpdGhQb3NzaWJsZUZhaWxlZE9uVGhlUmFuZ2UoZSxlLmtleSgpKX0pOl8uZWFjaChlLl9jb3ZlcmluZ1Rlc3RNYXAsZnVuY3Rpb24oZSl7cmV0dXJuIGkuX3VwZGF0ZVRlc3QoZSxlLmtleSgpKX0pLGkuX251bU9mQ292ZXJpbmdUZXN0cz1fLnNpemUoaS5fY292ZXJpbmdUZXN0TWFwKSk6KHRoaXMuX2NvdmVyaW5nVGVzdE1hcD1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX251bU9mQ292ZXJpbmdUZXN0cz0wLHRoaXMuX2ZhaWxlZE9uTWVUZXN0cyYmKHRoaXMuX2ZhaWxlZE9uTWVUZXN0cz1PYmplY3QuY3JlYXRlKG51bGwpKSksdm9pZCB0aGlzLl9zZXRJc0NvdmVyZWQoKSl9LGUucHJvdG90eXBlLl91cGRhdGVUZXN0PWZ1bmN0aW9uKGUsdCl7dGhpcy5fY292ZXJpbmdUZXN0TWFwW3RdPWUsZS5jb3ZlcnModGhpcyksdGhpcy5fYWRkRmFpbGVkT25NZVRlc3RJZkZhaWxpbmcoZSl9LGUucHJvdG90eXBlLl91cGRhdGVUZXN0V2l0aFBvc3NpYmxlRmFpbGVkT25UaGVSYW5nZT1mdW5jdGlvbihlLHQpe2RlbGV0ZSB0aGlzLl9mYWlsZWRPbk1lVGVzdHNbdF0sdGhpcy5fdXBkYXRlVGVzdChlLHQpfSxlLnByb3RvdHlwZS5faXNJbnNpZGVPZj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fc3RhcnRMaW5lPj1lLl9zdGFydExpbmUmJmUuX2VuZExpbmU+PXRoaXMuX2VuZExpbmUmJih0aGlzLl9zdGFydExpbmU+ZS5fc3RhcnRMaW5lfHx0aGlzLl9zdGFydENvbHVtbj49ZS5fc3RhcnRDb2x1bW4pJiYoZS5fZW5kTGluZT50aGlzLl9lbmRMaW5lfHxlLl9lbmRDb2x1bW4+PXRoaXMuX2VuZENvbHVtbil9LGUucHJvdG90eXBlLmNsb3NlclRvVGhlTGluZVRoYW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5fc3RhcnRMaW5lPT09ZSYmdC5fc3RhcnRMaW5lPT09ZSYmdGhpcy5fc3RhcnRDb2x1bW4hPT10Ll9zdGFydENvbHVtbj90aGlzLl9zdGFydENvbHVtbjx0Ll9zdGFydENvbHVtbjp0aGlzLl9zdGFydExpbmU9PT1lJiZ0Ll9lbmRMaW5lPT09ZSYmdGhpcy5fc3RhcnRDb2x1bW4+dC5fZW5kQ29sdW1ufHx0aGlzLl9pc0luc2lkZU9mKHQpfSxlLnByb3RvdHlwZS5fYWRkRmFpbGVkT25NZVRlc3RJZkZhaWxpbmc9ZnVuY3Rpb24oZSl7ZS5pc0ZhaWxpbmcoKSYmKHRoaXMuX2ZhaWxlZE9uTWVUZXN0c3x8KHRoaXMuX2ZhaWxlZE9uTWVUZXN0cz1PYmplY3QuY3JlYXRlKG51bGwpKSx0aGlzLl9mYWlsZWRPbk1lVGVzdHNbZS5rZXkoKV09ZSl9LGUucmFuZ2VLZXk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuam9pbigiLiIpfSxlfSgpO3QuZXhwb3J0cz1pfSx7fV0sMTA6W2Z1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGk9ZSgiLi9kb2N1bWVudExpbmUiKSxvPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3RoaXMuX2xpbmVzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fcmVjeWNsZWRMaW5lcz1bXSx0aGlzLl9saW5lU2hpZnRPckludmFsaWRhdGlvblNpbmNlTGFzdFVwZGF0ZT0hMX1yZXR1cm4gZS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUsdCxuKXt2YXIgbz10aGlzLHI9dGhpcy5fbGluZVNoaWZ0T3JJbnZhbGlkYXRpb25TaW5jZUxhc3RVcGRhdGU7ZGVsZXRlIHRoaXMuX2xpbmVTaGlmdE9ySW52YWxpZGF0aW9uU2luY2VMYXN0VXBkYXRlLG4/KHRoaXMuX2xpbmVzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fcmVjeWNsZWRMaW5lcz1bXSk6dCYmXy5lYWNoKHRoaXMuX2xpbmVzLGZ1bmN0aW9uKGUpe2UucmVtb3ZlUmFuZ2VzKCl9KTt2YXIgYT1bXSxzPVtdO18uZWFjaChlLGZ1bmN0aW9uKGUpe2lmKCFlLmlzRGlzcG9zZWQoKSl7dmFyIG49ZS5zdGFydExpbmUoKSxyPW8uX2xpbmVzW25dO3J8fChyPW5ldyBpKG4pLG8uX2xpbmVzW25dPXIscy5wdXNoKHIpKSxyLmFkZFJhbmdlKGUsdCksYS5wdXNoKHIpfX0pO3ZhciBsPU9iamVjdC5jcmVhdGUobnVsbCk7YT10JiYhbj9fLnZhbHVlcyh0aGlzLl9saW5lcykuY29uY2F0KHMpOmEsXy5lYWNoKGEsZnVuY3Rpb24oZSl7ZS5oYXNSYW5nZXMoKT9lLnVwZGF0ZUxpbmVEYXRhKCkmJihsW2Uua2V5KCldPWUpOihlLmRpc3Bvc2UoKSxkZWxldGUgby5fbGluZXNbZS5udW1iZXIoKV0sby5fcmVjeWNsZWRMaW5lcy5wdXNoKGUpKX0pO3ZhciBjPXRoaXMuX3JlY3ljbGVkTGluZXMuc2xpY2UoKTtyZXR1cm4gdGhpcy5fcmVjeWNsZWRMaW5lcz1bXSx7bGluZXM6bj9fLm1hcCh0aGlzLl9saW5lcyxmdW5jdGlvbihlKXtyZXR1cm4gby5fY29tcGFjdExpbmUoZSl9KTpfLm1hcChyP3RoaXMuX2xpbmVzOmwsZnVuY3Rpb24oZSl7dmFyIHQ9by5fY29tcGFjdExpbmUoZSk7cmV0dXJuIHQuY2hhbmdlZD1yPyEhbFtlLmtleSgpXXx8dm9pZCAwOjEsdH0pLmNvbmNhdChfLm1hcChjLGZ1bmN0aW9uKGUpe3JldHVybntpZDplLmtleSgpLGRlbDoxfX0pKSxhbGxMaW5lczpufHxyfX0sZS5wcm90b3R5cGUubGluZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbGluZXNbZV19LGUucHJvdG90eXBlLmFsbExpbmVzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm57bGluZXM6Xy5tYXAodGhpcy5fbGluZXMsZnVuY3Rpb24odCl7cmV0dXJuIGUuX2NvbXBhY3RMaW5lKHQpfSksYWxsTGluZXM6ITB9fSxlLnByb3RvdHlwZS5fY29tcGFjdExpbmU9ZnVuY3Rpb24oZSl7cmV0dXJue2lkOmUua2V5KCksbnVtOmUubnVtYmVyKCksc3RhdGU6ZS5zdGF0ZSgpLGxvZzplLmNvbnNvbGVMb2dUZXh0KCksbG9uZ0xvZzplLmxvbmdDb25zb2xlTG9nVGV4dCgpLGVycjplLmVycm9yU291cmNlVGV4dCgpfX0sZS5wcm90b3R5cGUuaW52YWxpZGF0ZUxpbmVzPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dGhpcy5fbGluZVNoaWZ0T3JJbnZhbGlkYXRpb25TaW5jZUxhc3RVcGRhdGU9ITAsXy5lYWNoKF8ucmFuZ2UoZS5zdGFydCxlLmVuZCksZnVuY3Rpb24obil7dmFyIGk9dC5fbGluZXNbbl07aSYmdC5fcmVjeWNsZUxpbmVJZkluQ2hhbmdlRnJhbWUoaSxlKX0pfSxlLnByb3RvdHlwZS5zaGlmdExpbmVzPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzO3RoaXMuX2xpbmVTaGlmdE9ySW52YWxpZGF0aW9uU2luY2VMYXN0VXBkYXRlPSEwO3ZhciBvPV8udmFsdWVzKHRoaXMuX2xpbmVzKTt0aGlzLl9saW5lcz1PYmplY3QuY3JlYXRlKG51bGwpLF8uZWFjaChvLGZ1bmN0aW9uKG8pe3ZhciByPW8ubnVtYmVyKCk7aWYoIWkuX3JlY3ljbGVMaW5lSWZJbkNoYW5nZUZyYW1lKG8sbikpe3I+ZSYmKHIrPXQsby5udW1iZXIocikpO3ZhciBhPWkuX2xpbmVzW3JdO2E/KGEuZGlzcG9zZSgpLG8uZGlzcG9zZSgpLGkuX3JlY3ljbGVkTGluZXMucHVzaChhKSxpLl9yZWN5Y2xlZExpbmVzLnB1c2gobyksZGVsZXRlIGkuX2xpbmVzW3JdKTppLl9saW5lc1tyXT1vfX0pfSxlLnByb3RvdHlwZS5fcmVjeWNsZUxpbmVJZkluQ2hhbmdlRnJhbWU9ZnVuY3Rpb24oZSx0KXt2YXIgbj1lLm51bWJlcigpO2lmKG4+PXQuc3RhcnQmJm48PXQuZW5kKXJldHVybiBlLmRpc3Bvc2UoKSx0aGlzLl9yZWN5Y2xlZExpbmVzLnB1c2goZSksITB9LGV9KCk7dC5leHBvcnRzPW99LHsiLi9kb2N1bWVudExpbmUiOjExfV0sMTE6W2Z1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGk9ZSgiLi4vc2hhcmVkL2VudW1zIikubGluZVN0YXRlLG89MTI4LHI9MTAyNCoocHJvY2Vzcy5lbnYucXVva2thPzI1NjoxMCksYT0xMjgscz0wLGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMuX2xpbmVOdW1iZXI9ZSx0aGlzLl9yYW5nZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9pZD0rK3N9cmV0dXJuIGUucHJvdG90eXBlLmhhc1Jhbmdlcz1mdW5jdGlvbigpe3JldHVybiFfLmlzRW1wdHkodGhpcy5fcmFuZ2VzKX0sZS5wcm90b3R5cGUucmFuZ2VzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Jhbmdlc30sZS5wcm90b3R5cGUudXBkYXRlTGluZURhdGE9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ITAsbj0hMCxzPSExLGw9ITEsYz10aGlzLl9saW5lU3RhdGUscD10aGlzLl9jb25zb2xlTG9nVGV4dCxkPXRoaXMuX2Vycm9yU291cmNlVGV4dDtyZXR1cm4gZGVsZXRlIHRoaXMuX2NvbnNvbGVMb2dUZXh0LGRlbGV0ZSB0aGlzLl9sb25nQ29uc29sZUxvZ1RleHQsZGVsZXRlIHRoaXMuX2Vycm9yU291cmNlVGV4dCxfLmVhY2godGhpcy5fcmFuZ2VzLGZ1bmN0aW9uKGkpe3ZhciBjPWkuY29uc29sZUxvZygpO2lmKGMmJmMubGVuZ3RoKXtfLmlzU3RyaW5nKGUuX2NvbnNvbGVMb2dUZXh0KXx8KGUuX2NvbnNvbGVMb2dUZXh0PSIiKTt2YXIgcD1jLmxlbmd0aD5vLGQ9Xy5tYXAocD9jLnNsaWNlKGMubGVuZ3RoLW8pOmMsZnVuY3Rpb24oZSl7cmV0dXJuIiI9PT1lPyJbZW1wdHkgc3RyaW5nXSI6ZX0pLmpvaW4oIiwgIik7aWYoZC5sZW5ndGg+byYmKGQ9KDA9PT1kLmluZGV4T2YoInRoZW4gIik/InRoZW4gIjoiIikrIi4uLiAiK2Quc3Vic3RyKGQubGVuZ3RoLW8rNCkpLGUuX2NvbnNvbGVMb2dUZXh0Kz0oZS5fY29uc29sZUxvZ1RleHQ/IiB8ICI6IiIpK2QsIWUuX2xvbmdDb25zb2xlTG9nVGV4dHx8Xy5pc1N0cmluZyhlLl9sb25nQ29uc29sZUxvZ1RleHQpJiZlLl9sb25nQ29uc29sZUxvZ1RleHQubGVuZ3RoPHIpe18uaXNTdHJpbmcoZS5fbG9uZ0NvbnNvbGVMb2dUZXh0KXx8KGUuX2xvbmdDb25zb2xlTG9nVGV4dD0iIik7dmFyIHU9Yy5sZW5ndGg+MWUzLGg9KHU/IiAgLi4uXG4iOiIiKSsiICIrKHU/Yy5zbGljZShjLmxlbmd0aC0xZTMpOmMpLmpvaW4oIiBcbiAiKTtlLl9sb25nQ29uc29sZUxvZ1RleHQrPShlLl9sb25nQ29uc29sZUxvZ1RleHQ/IlxuLS0tXG4iOiIiKStofX1pZihpLmlzRXJyb3JTb3VyY2UoKSl7cz0hMDt2YXIgbT1pLmVycm9ycygpO2lmKG0ubGVuZ3RoKXt2YXIgZj1tW20ubGVuZ3RoLTFdLm1lc3NhZ2UoKTtlLl9lcnJvclNvdXJjZVRleHQ9ZS5fdHJ1bmNhdGVNZXNzYWdlKGZ8fCIiLGEpfX1pLmlzT25FcnJvclBhdGgoKSYmKGw9ITApLGkuaXNDb3ZlcmVkKCk/bj0hMTp0PSExfSksZS5fY29uc29sZUxvZ1RleHQmJihfLmlzU3RyaW5nKGUuX2xvbmdDb25zb2xlTG9nVGV4dCkmJihlLl9sb25nQ29uc29sZUxvZ1RleHQ9ZS5fdHJ1bmNhdGVNZXNzYWdlKGUuX2xvbmdDb25zb2xlTG9nVGV4dCxyLCEwKSksZS5fY29uc29sZUxvZ1RleHQ9ZS5fdHJ1bmNhdGVNZXNzYWdlKGUuX2NvbnNvbGVMb2dUZXh0LG8pKSx0aGlzLl9saW5lU3RhdGU9cz9pLmVycm9yU291cmNlOmw/aS5lcnJvclBhdGg6bj9pLm5vdENvdmVyZWQ6dD9pLmZ1bGx5Q292ZXJlZDppLnBhcnRpYWxseUNvdmVyZWQsdGhpcy5fbGluZVN0YXRlIT09Y3x8dGhpcy5fY29uc29sZUxvZ1RleHQhPT1wfHx0aGlzLl9lcnJvclNvdXJjZVRleHQhPT1kfSxlLnByb3RvdHlwZS5jb25zb2xlTG9nVGV4dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb25zb2xlTG9nVGV4dH0sZS5wcm90b3R5cGUubG9uZ0NvbnNvbGVMb2dUZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvbmdDb25zb2xlTG9nVGV4dH0sZS5wcm90b3R5cGUuZXJyb3JTb3VyY2VUZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Vycm9yU291cmNlVGV4dH0sZS5wcm90b3R5cGUuc3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbGluZVN0YXRlfSxlLnByb3RvdHlwZS5hZGRSYW5nZT1mdW5jdGlvbihlLHQpe3ZhciBuPWUua2V5KCk7dHx8ZGVsZXRlIHRoaXMuX3Jhbmdlc1tuXSx0aGlzLl9yYW5nZXNbbl09ZX0sZS5wcm90b3R5cGUucmVtb3ZlUmFuZ2VzPWZ1bmN0aW9uKCl7dGhpcy5fcmFuZ2VzPU9iamVjdC5jcmVhdGUobnVsbCl9LGUucHJvdG90eXBlLm51bWJlcj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLG49dGhpcy5fbGluZU51bWJlcjtpZihfLmlzVW5kZWZpbmVkKGUpKXJldHVybiBuO2lmKGUhPT1uKXt0aGlzLl9saW5lTnVtYmVyPWU7dmFyIGk9ZS1uLG89Xy52YWx1ZXModGhpcy5fcmFuZ2VzKTt0aGlzLnJlbW92ZVJhbmdlcygpLF8uZWFjaChvLGZ1bmN0aW9uKGUpe2UubGluZVNoaWZ0KGkpLHQuX3Jhbmdlc1tlLmtleSgpXT1lfSl9fSxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVSYW5nZXMoKSxkZWxldGUgdGhpcy5fY29uc29sZUxvZ1RleHQsCmRlbGV0ZSB0aGlzLl9lcnJvclNvdXJjZVRleHQsZGVsZXRlIHRoaXMuX2xpbmVTdGF0ZSx0aGlzLl9pc0Rpc3Bvc2VkPSEwfSxlLnByb3RvdHlwZS5pc0Rpc3Bvc2VkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzRGlzcG9zZWR9LGUucHJvdG90eXBlLmtleT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pZH0sZS5wcm90b3R5cGUuX3RydW5jYXRlTWVzc2FnZT1mdW5jdGlvbihlLHQsbil7dmFyIGk9ZS5sZW5ndGg+dD8iLi4uIjoiIjtyZXR1cm4gZT1lLnN1YnN0cigwLHQpLChuP2U6dGhpcy5fY2xlYW5TdHJpbmcoZSkpK2l9LGUucHJvdG90eXBlLl9jbGVhblN0cmluZz1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5yZXBsYWNlKC9cclxuXHMqL2csIiAiKS5yZXBsYWNlKC9cblxzKi9nLCIgIil9LGV9KCk7dC5leHBvcnRzPWx9LHsiLi4vc2hhcmVkL2VudW1zIjoxOX1dLDEyOltmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBpPWUoIi4vc3RhY2tFbnRyeSIpLG89ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMuX2FjdHVhbD1lLmFjdHVhbCx0aGlzLl9leHBlY3RlZD1lLmV4cGVjdGVkLHRoaXMuX21lc3NhZ2U9ZS5tZXNzYWdlLHRoaXMuX3N0YWNrPWUuc3RhY2ssdGhpcy5fc25hcHNob3Q9ZS5zbmFwc2hvdCx0aGlzLl9jb250ZXh0PWUuY29udGV4dHx8e319cmV0dXJuIGUucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5fc3RhY2s7dGhpcy5fc3RhY2s9W10sXy5lYWNoKHQsZnVuY3Rpb24odCxuKXtyZXR1cm4gZS5fc3RhY2sucHVzaChuZXcgaSh0WzBdLHRbMV0sZS5fY29udGV4dFtuXSkpfSksZGVsZXRlIHRoaXMuX2NvbnRleHR9LGUucHJvdG90eXBlLnN0YWNrPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YWNrfSxlLnByb3RvdHlwZS5tZXNzYWdlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX21lc3NhZ2V9LGUucHJvdG90eXBlLmFjdHVhbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9hY3R1YWx9LGUucHJvdG90eXBlLmV4cGVjdGVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2V4cGVjdGVkfSxlLnByb3RvdHlwZS5zbmFwc2hvdD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zbmFwc2hvdH0sZS5wcm90b3R5cGUua2V5PWZ1bmN0aW9uKCl7cmV0dXJuKHRoaXMuX21lc3NhZ2V8fCIiKStfLnJlZHVjZSh0aGlzLl9zdGFjayxmdW5jdGlvbihlLHQpe3JldHVybiBlKz10LmtleSgpfSwiIil9LGV9KCk7dC5leHBvcnRzPW99LHsiLi9zdGFja0VudHJ5IjoxN31dLDEzOltmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBpPWUoIi4vZXJyb3JFbnRyeSIpLG89KGUoIi4vc3RhY2tFbnRyeSIpLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLl9pZD1lLmlkLHRoaXMuX2ZpbGVJZD1lLmZpbGVJZCx0aGlzLl9sb2c9ZS5sb2csdGhpcy5fbmFtZT1lLm5hbWUsdGhpcy5fdGVzdHM9ZS50ZXN0cyx0aGlzLl9zdGFydD1lLnN0YXJ0LHRoaXMuX3RpbWU9ZS50aW1lLHRoaXMuX3Nsb3c9ZS5zbG93fXJldHVybiBlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKHQsbixvLHIpe3ZhciBhPXRoaXM7aWYodGhpcy5fcGFyZW50PXQsdGhpcy5faWQmJih0aGlzLl9idWlsZEZ1bGxOYW1lQW5kUGF0aCgpLHRoaXMuX3NldEtleSgpLG8odGhpcyksdGhpcy5fY292ZXJlZFJhbmdlcz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2NvdmVyZWRGaWxlcz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX3RzPW4sdGhpcy5fbG9nJiZ0aGlzLl9sb2cubGVuZ3RoKSl7dGhpcy5faXNGYWlsaW5nPSEwO3ZhciBzPXRoaXMuX2xvZzt0aGlzLl9sb2c9W10sdGhpcy5fZXJyb3JTdGFja01hcD1PYmplY3QuY3JlYXRlKG51bGwpLF8uZWFjaChzLGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBpKGUpO3QuaW5pdCgpLF8uZWFjaCh0LnN0YWNrKCksZnVuY3Rpb24oZSl7dmFyIG49ZS5rZXkoKSxpPWEuX2Vycm9yU3RhY2tNYXBbbl07aT9+Xy5pbmRleE9mKGksdCl8fGkucHVzaCh0KTooaT1bXSxpLnB1c2godCksYS5fZXJyb3JTdGFja01hcFtuXT1pKSxpLnN0YWNrRW50cnk9ZSxyKGUpfSksYS5fbG9nLnB1c2godCl9KX10aGlzLl90ZXN0cyYmKF8uZWFjaCh0aGlzLl90ZXN0cyxmdW5jdGlvbih0KXtyZXR1cm4gbmV3IGUodCkuaW5pdChhLG4sbyxyKX0pLGRlbGV0ZSB0aGlzLl90ZXN0cyl9LGUucHJvdG90eXBlLmlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lkfSxlLnByb3RvdHlwZS5rZXk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fa2V5fHwodGhpcy5fc2V0S2V5KCksdGhpcy5fa2V5KX0sZS5wcm90b3R5cGUuX3NldEtleT1mdW5jdGlvbigpe3RoaXMuX2tleT10aGlzLl9maWxlSWQrIl8iK3RoaXMuX2Z1bGxOYW1lfSxlLnByb3RvdHlwZS5maWxlSWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZmlsZUlkfSxlLnByb3RvdHlwZS5maWxlUGF0aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl90ZXN0RmlsZSYmdGhpcy5fdGVzdEZpbGUucGF0aCgpfSxlLnByb3RvdHlwZS50aW1lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3RpbWV9LGUucHJvdG90eXBlLmVycm9ycz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb2d9LGUucHJvdG90eXBlLmFkZENvbnNvbGVNZXNzYWdlPWZ1bmN0aW9uKGUpe3RoaXMuX2NvbnNvbGVNZXNzYWdlc3x8KHRoaXMuX2NvbnNvbGVNZXNzYWdlcz1bXSksdGhpcy5fY29uc29sZU1lc3NhZ2VzLnB1c2goZSl9LGUucHJvdG90eXBlLmNvbnNvbGVNZXNzYWdlcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb25zb2xlTWVzc2FnZXN9LGUucHJvdG90eXBlLmlzRmFpbGluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0ZhaWxpbmd9LGUucHJvdG90eXBlLnNsb3c9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2xvd30sZS5wcm90b3R5cGUuc2V0VGVzdEZpbGU9ZnVuY3Rpb24oZSl7dGhpcy5fdGVzdEZpbGU9ZX0sZS5wcm90b3R5cGUub2Jzb2xldGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4gZGVsZXRlIHRoaXMuX3N0YXJ0UmFuZ2UsZGVsZXRlIHRoaXMuX3Rlc3RGaWxlLHRoaXMuX2NvdmVyZWRSYW5nZXMmJihfLmVhY2godGhpcy5fY292ZXJlZFJhbmdlcyxmdW5jdGlvbihuKXtpZihuLm5vdENvdmVyZWRCeShlKSwhbi5pc0Rpc3Bvc2VkKCkpe3ZhciBpPW4uc291cmNlRmlsZSgpO3RbaS5rZXkoKV09aX19KSxkZWxldGUgdGhpcy5fY292ZXJlZFJhbmdlcyksZGVsZXRlIHRoaXMuX2Vycm9yU3RhY2tNYXAsZGVsZXRlIHRoaXMuX2NvbnNvbGVNZXNzYWdlcyxkZWxldGUgdGhpcy5fY292ZXJlZEZpbGVzLHR9LGUucHJvdG90eXBlLmNvdmVycz1mdW5jdGlvbihlKXt0aGlzLl9jb3ZlcmVkUmFuZ2VzW2Uua2V5KCldPWU7dmFyIHQ9ZS5zb3VyY2VGaWxlKCk7dCYmIXQuaXNUZXN0RmlsZSgpJiYodGhpcy5fY292ZXJlZEZpbGVzW3Qua2V5KCldPXQpfSxlLnByb3RvdHlwZS5jb3ZlcmVkRmlsZXM9ZnVuY3Rpb24oKXtyZXR1cm4gXy5tYXAodGhpcy5fY292ZXJlZEZpbGVzLGZ1bmN0aW9uKGUpe3JldHVybiBlfSl9LGUucHJvdG90eXBlLnN0YXJ0UmFuZ2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc3RhcnRSYW5nZX0sZS5wcm90b3R5cGUuY29tcGxldGVJbml0aWFsaXphdGlvbj1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3RoaXMuX2Vycm9yU3RhY2tNYXAmJl8uZWFjaCh0aGlzLl9lcnJvclN0YWNrTWFwLGZ1bmN0aW9uKG4pe3ZhciBpPW4uc3RhY2tFbnRyeTtpZihpKXt2YXIgbz1lW2kuZmlsZUlkKCldO2lmKG8pe3ZhciByPW8uY2xvc2VzdFJhbmdlKGkubGluZSgpKTtyJiYoaS5zZXRSYW5nZShyKSxyLmZhaWxzVGVzdCh0LG4pKX19fSksdGhpcy5fY29uc29sZU1lc3NhZ2VzJiZfLmVhY2godGhpcy5fY29uc29sZU1lc3NhZ2VzLGZ1bmN0aW9uKGUpe3ZhciB0PWUuZmlsZSgpO3QmJmUuc2V0UmFuZ2UodC5jbG9zZXN0UmFuZ2UoZS5saW5lKCkpKX0pLHRoaXMuX2NvdmVyZWRSYW5nZXMmJihfLmlzVW5kZWZpbmVkKHRoaXMuX3N0YXJ0KXx8KHRoaXMuX3N0YXJ0UmFuZ2U9dGhpcy5fdGVzdEZpbGUuY2xvc2VzdFJhbmdlKHRoaXMuX3N0YXJ0KSxkZWxldGUgdGhpcy5fc3RhcnQpLHRoaXMuX3N0YXJ0UmFuZ2V8fF8uZWFjaCh0aGlzLl9jb3ZlcmVkUmFuZ2VzLGZ1bmN0aW9uKGUpe3ZhciBuPWUuc291cmNlRmlsZSgpO249PXQuX3Rlc3RGaWxlJiYodC5fc3RhcnRSYW5nZT9lLmVuZExpbmUoKTx0Ll9zdGFydFJhbmdlLmVuZExpbmUoKSYmKHQuX3N0YXJ0UmFuZ2U9ZSk6dC5fc3RhcnRSYW5nZT1lKX0pKX0sZS5wcm90b3R5cGUucGF0aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wYXRofSxlLnByb3RvdHlwZS50cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl90c30sZS5wcm90b3R5cGUuX2J1aWxkRnVsbE5hbWVBbmRQYXRoPWZ1bmN0aW9uKCl7dmFyIGU9W107ZS5wdXNoKHRoaXMuX25hbWUpO2Zvcih2YXIgdD10aGlzLl9wYXJlbnQ7bnVsbCE9dDspe3ZhciBuPXQuX25hbWU7ZS5wdXNoKG4pLHQ9dC5fcGFyZW50fWUucmV2ZXJzZSgpLHRoaXMuX2Z1bGxOYW1lPWUuam9pbigi4piGIiksdGhpcy5fcGF0aD1lfSxlfSgpKTt0LmV4cG9ydHM9b30seyIuL2Vycm9yRW50cnkiOjEyLCIuL3N0YWNrRW50cnkiOjE3fV0sMTQ6W2Z1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGksbz10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8ZnVuY3Rpb24oKXt2YXIgZT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oZSx0KXtlLl9fcHJvdG9fXz10fXx8ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiYoZVtuXT10W25dKX07cmV0dXJuIGZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gaSgpe3RoaXMuY29uc3RydWN0b3I9dH1lKHQsbiksdC5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooaS5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IGkpfX0oKSxyPWUoInBhdGgiKSxhPWUoImNob2tpZGFyIikuRlNXYXRjaGVyLHM9ZSgibWluaW1hdGNoIiksbD1lKCIuLi9zaGFyZWQvdXRpbHMiKSxjPTFlMyxwPTUwMCxkPTUwLHU9e2FwazoxLGJtcDoxLGNnbToxLGczOjEsZ2lmOjEsaWVmOjEsaXJ4OjEsanBlZzoxLGpwZzoxLGpwZToxLGt0eDoxLHBuZzoxLGJ0aWY6MSxzZ2k6MSxzdmc6MSxzdmd6OjEsdGlmZjoxLHRpZjoxLHBzZDoxLHV2aToxLHV2dmk6MSx1dmc6MSx1dnZnOjEsZGp2dToxLGRqdjoxLHN1YjoxLGR3ZzoxLGR4ZjoxLGZiczoxLGZweDoxLGZzdDoxLG1tcjoxLHJsYzoxLG1kaToxLHdkcDoxLG5weDoxLHdibXA6MSx4aWY6MSx3ZWJwOjEsIjNkcyI6MSxyYXM6MSxjbXg6MSxmaDoxLGZoYzoxLGZoNDoxLGZoNToxLGZoNzoxLGljbzoxLHNpZDoxLHBjeDoxLHBpYzoxLHBjdDoxLHBubToxLHBibToxLHBnbToxLHBwbToxLHJnYjoxLHRnYToxLHhibToxLHhwbToxLHh3ZDoxLGJpbjoxLHhsczoxLHhsc3g6MSx6aXA6MSxtcDQ6MSxtbzoxLG5vZGU6MSxkdW1wOjEsZGxsOjEsbWFwOjEsbGliOjEsZXhwOjEsb2JqOjEscGRiOjEsZ3ppcDoxLGd6OjEsZGI6MSxkb2N4OjF9LGg9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbihuLGkpe3ZhciBvPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gby5fZGlmZk1hdGNoUGF0Y2g9aS5kaWZmTWF0Y2hQYXRjaCxvLl9iYXNlRGlyPW4sby5faXNSZWFkeT0hMSxvLl9pc1N0b3BwZWQ9ITEsby5fZmlsZXNCeVBhdGg9T2JqZWN0LmNyZWF0ZShudWxsKSxvLl9maWxlc0J5SWQ9T2JqZWN0LmNyZWF0ZShudWxsKSxvLl9maWxlSWQ9MCxvLl9scnVDYWNoZT1lKCJscnUtY2FjaGUiKSh7bWF4OjEwNDg1NzYqZCxsZW5ndGg6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubGVuZ3RofX0pLG8uX3JlYWRGaWxlUHJvbWlzZT1pLnJlYWRGaWxlUHJvbWlzZSxvLl9yZWFscGF0aFN5bmM9aS5yZWFscGF0aFN5bmMsb31yZXR1cm4gbyhuLHQpLG4ucHJvdG90eXBlLnNldHVwPWZ1bmN0aW9uKHQsbil7dmFyIG89dGhpcyxzPXRoaXM7aWYoaT1lKCJkZWJ1ZyIpKCJ3YWxsYWJ5OmZzIikscHJvY2Vzcy5lbnYucXVva2thKXt2YXIgbD10WzBdLGQ9e307cmV0dXJuIHMuX2lzUmVhZHk9ITAsZFtsLnBhdHRlcm5dPXMuX2ZpbGVBZGRlZChsLnBhdHRlcm4se21ldGFkYXRhOmwsbXRpbWU6e2dldFRpbWU6ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGV9fX0pLFEud2hlbihkKX12YXIgdT1bXSxoPVtdLG09e30sZj17fSxTPTA7Xy5lYWNoKHQsZnVuY3Rpb24oZSl7ZS5pZ25vcmU/aC5wdXNoKGUpOih1LnB1c2goZSksZS5vcmRlcj0rK1MpfSk7dmFyIHc9biYmbi5nbG9iLHY9biYmbi5kb3Q7biYmbi5maWxlU2NhblRpbWVvdXQmJihjPXA9bi5maWxlU2NhblRpbWVvdXQpO3ZhciBnPXRoaXMuX2lzSW5jbHVkZWQocy5fYmFzZURpcix1LGgsbSx3LHYpLHk9e2lnbm9yZUluaXRpYWw6ITEsaWdub3JlUGVybWlzc2lvbkVycm9yczohMCx1c2VQb2xsaW5nOiJkYXJ3aW4iPT09cHJvY2Vzcy5wbGF0Zm9ybXx8ImxpbnV4Ij09PXByb2Nlc3MucGxhdGZvcm0saWdub3JlZDpmdW5jdGlvbihlLHQpe2lmKCF0KXJldHVybiExO2lmKHQuaXNTeW1ib2xpY0xpbmsoKSl0cnl7ZltlXT17cGF0aDplLHJlYWxQYXRoOnMuX3JlYWxwYXRoU3luYyhlKX19Y2F0Y2gobil7fXZhciBpPXQuaXNGaWxlKCk7aWYoIWkpe3ZhciBhPW8uX2lzRW50aXR5RXhjbHVkZWQoci5qb2luKHIucmVsYXRpdmUocy5fYmFzZURpcixlKSwiLyIpLGgsdyx2KTtyZXR1cm4gYS5maWxlJiZhLnRlc3R9dmFyIGw9IWcoZSx0KTtpZihsKXt2YXIgYz1fLmZpbmQoZixmdW5jdGlvbih0KXtyZXR1cm4gXy5zdGFydHNXaXRoKGUsdC5yZWFsUGF0aCl9KTtjJiYobD0hZyhlLnJlcGxhY2UoYy5yZWFsUGF0aCxjLnBhdGgpLHQpKX1yZXR1cm4gbH0sY3dkOnMuX2Jhc2VEaXJ9O2lmKHMuX2lzR2xvYihzLl9iYXNlRGlyKSl0aHJvdyBuZXcgRXJyb3IoIllvdXIgcHJvamVjdCBmaWxlIHBhdGggbG9va3MgbGlrZSBhIHZhbGlkIGdsb2IgcGF0dGVybiBhbmQgY29udGFpbnMgZ2xvYiBjaGFyYWN0ZXJzLCBsaWtlIGB7YCwgYH1gLCBgW2AsIGBdYCwgYChgLCBgKWAsIGAqYCwgYHxgOyBpdCBtYXkgY2F1c2UgdGhlIHByb2plY3QgZmlsZSBzY2FubmluZyB0byBmYWlsLCBwbGVhc2UgcmVtb3ZlIGdsb2IgY2hhcmFjdGVycyBmcm9tIHRoZSBwcm9qZWN0IHBhdGguIik7dGhpcy5fd2F0Y2hlcj1uZXcgYSh5KTt2YXIgVj1fLnJlZHVjZSh1LGZ1bmN0aW9uKGUsdCl7dmFyIG49cy5fZ2V0QmFzZURpcih0LnBhdHRlcm4pO3JldHVybiBlW25dPW4sZX0se30pLEQ9MDtfLmVhY2goVixmdW5jdGlvbihlKXtpZighXy5maW5kKFYsZnVuY3Rpb24odCl7cmV0dXJuIHQhPT1lJiZlLnN1YnN0cigwLHQubGVuZ3RoKzEpPT09dCsiLyJ9KSl7dmFyIHQ9dm9pZCAwLG49ci5ub3JtYWxpemUoci5qb2luKHMuX2Jhc2VEaXIsZSkpO3RyeXt0PXIubm9ybWFsaXplKHMuX3JlYWxwYXRoU3luYyhuKSl9Y2F0Y2gobyl7RCsrfXQmJnQhPT1uPyhpKCJQb3NzaWJsZSBzeW1saW5rOiAlcyAtPiAlcyIsdCxuKSxtW3RdPXtyZWFsUGF0aDp0LGxpbmtlZFBhdGg6bn0scy5fd2F0Y2hlci5hZGQodCkpOnMuX3dhdGNoZXIuYWRkKGUpfX0pLEQmJkQ9PT1fLmtleXMoVikubGVuZ3RoJiZjb25zb2xlLndhcm4oIkxvb2tzIGxpa2Ugbm9uZSBvZiB0aGUgcGF0aHMgc3BlY2lmaWVkIGluIHlvdXIgZmlsZXMvdGVzdHMgbGlzdCBleGlzdCBpbiAiK3MuX2Jhc2VEaXIrIi4iKTt2YXIgYjtyZXR1cm4gUS5wcm9taXNlKGZ1bmN0aW9uKGUsdCl7dmFyIG49ZnVuY3Rpb24odCl7cy5faXNSZWFkeXx8KHMuX2lzUmVhZHk9ITAsdCYmaSgiRmlsZSBzeXN0ZW0gc2NhbiBoYXMgZmluaXNoZWQgYnkgdGltZW91dCIpLGUocy5fZmlsZXNCeVBhdGgpKX07dHJ5e3MuX3dhdGNoZXIub24oImFsbCIsZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoYiksYj1zZXRUaW1lb3V0KF8uYmluZChuLG51bGwsITApLGMpfSkub24oImFkZCIsXy5iaW5kKHMuX3dpdGhOb3JtYWxpemVkUGF0aCxzLHMuX2ZpbGVBZGRlZCkpLm9uKCJjaGFuZ2UiLF8uYmluZChzLl93aXRoTm9ybWFsaXplZFBhdGgscyxzLl9maWxlQ2hhbmdlZCkpLm9uKCJ1bmxpbmsiLF8uYmluZChzLl93aXRoTm9ybWFsaXplZFBhdGgscyxzLl9maWxlRGVsZXRlZCkpLm9uKCJyZWFkeSIsXy5kZWJvdW5jZShuLHApKS5vbigiZXJyb3IiLF8uYmluZChzLmVtaXQscywiZXJyb3IiKSl9Y2F0Y2gobyl7dChvKX19KX0sbi5wcm90b3R5cGUuX2hhc0dsb2JDaGFycz1mdW5jdGlvbihlKXtyZXR1cm5+ZS5pbmRleE9mKCIoIil8fH5lLmluZGV4T2YoIikiKXx8fmUuaW5kZXhPZigifCIpfHx+ZS5pbmRleE9mKCJ7Iil8fH5lLmluZGV4T2YoIn0iKXx8fmUuaW5kZXhPZigiKiIpfHx+ZS5pbmRleE9mKCJbIil8fH5lLmluZGV4T2YoIl0iKX0sbi5wcm90b3R5cGUuX2lzR2xvYj1mdW5jdGlvbihlKXt2YXIgdD17InsiOiJ9IiwiKCI6IikiLCJbIjoiXSJ9O2lmKCJzdHJpbmciIT10eXBlb2YgZXx8IiI9PT1lKXJldHVybiExO2lmKC9bQD8hKypdXCgvLnRlc3QoZSkpcmV0dXJuITA7Zm9yKHZhciBuLGk9L1xcKC4pfCheIXxcKnxbXF0uKyldXD98XFtbXlxcXF1dK1xdfFx7W15cXH1dK1x9fFwoXD9bOiE9XVteXFwpXStcKXxcKFtefF0rXHxbXlxcKV0rXCkpLztuPWkuZXhlYyhlKTspe2lmKG5bMl0pcmV0dXJuITA7dmFyIG89bi5pbmRleCtuWzBdLmxlbmd0aCxyPW5bMV0sYT1yP3Rbcl06bnVsbDtpZihyJiZhKXt2YXIgcz1lLmluZGV4T2YoYSxvKTtzIT09LTEmJihvPXMrMSl9ZT1lLnNsaWNlKG8pfXJldHVybiExfSxuLnByb3RvdHlwZS5sb2FkRmlsZXM9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gUS5hbGwoXy5tYXAoZSxmdW5jdGlvbihlKXtyZXR1cm4gdC5fbG9hZEZpbGUoZSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gdC5lbWl0KCJsb2FkZWQiLGUpfSl9KSl9LG4ucHJvdG90eXBlLmZpbGVDaGFuZ2VkSW5FZGl0b3I9ZnVuY3Rpb24oZSx0LG4sbyl7dmFyIHI9dGhpcy5fZmlsZXNCeVBhdGhbZV07aWYociYmIXIuYmluYXJ5KXtpKCJGaWxlIGNoYW5nZWQgaW4gZWRpdG9yOiAlcyIsci5wYXRoKTt2YXIgYT10aGlzLl9scnVDYWNoZS5nZXQoci5wYXRoKTt0aGlzLl9scnVDYWNoZS5zZXQoci5wYXRoLG8mJl8uaXNTdHJpbmcoYSk/YTp0KSxyLmNoYW5nZVRzKyssdGhpcy5fZW1pdEZpbGVDaGFuZ2UoXy5leHRlbmQoe30scix7Y29udGVudDp0fSksYSxuLCEwLG8pLHIuaGFkVHJhbnNpZW50Q2hhbmdlPW99fSxuLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKCl7dGhpcy5faXNTdG9wcGVkPSEwLHRoaXMuX3dhdGNoZXImJih0aGlzLl93YXRjaGVyLmNsb3NlKCksZGVsZXRlIHRoaXMuX2xydUNhY2hlKX0sbi5wcm90b3R5cGUuaWRCeVBhdGg9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZmlsZXNCeVBhdGhbZV07aWYodClyZXR1cm4gdC5pZH0sbi5wcm90b3R5cGUuX2xvYWRGaWxlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2ZpbGVzQnlJZFtlXTtpZighdCl0aHJvdyBuZXcgRXJyb3IoIk5vIGZpbGUgd2l0aCBpZCAiK2UrIiBmb3VuZCIpO3JldHVybiB0aGlzLl9sb2FkRmlsZVdpdGhDYWNoZSh0KX0sbi5wcm90b3R5cGUuX2xvYWRGaWxlV2l0aENhY2hlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsbj1lLmNoYW5nZVRzLGk9dGhpcy5fbHJ1Q2FjaGUuZ2V0KGUucGF0aCk7cmV0dXJuKF8uaXNVbmRlZmluZWQoaSk/dGhpcy5fcmVhZEZpbGVQcm9taXNlKHIuam9pbih0Ll9iYXNlRGlyLGUucGF0aCkpOlEud2hlbihpKSkudGhlbihmdW5jdGlvbihpKXtyZXR1cm4gaT1pP2UuYmluYXJ5P2kudG9TdHJpbmcoImJhc2U2NCIpOmkudG9TdHJpbmcoKToiIix0Ll9pc1N0b3BwZWR8fG4hPT1lLmNoYW5nZVRzfHx0Ll9scnVDYWNoZS5zZXQoZS5wYXRoLGkpLFEud2hlbihfLmV4dGVuZCh7fSxlLHtjb250ZW50Oml9KSl9KVsiY2F0Y2giXShmdW5jdGlvbihlKXtyZXR1cm4gdC5lbWl0KCJlcnJvciIsZSl9KX0sbi5wcm90b3R5cGUuX2ZpbGVBZGRlZD1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7aWYoaSgiRmlsZSBhZGRlZDogJXMiLGUpLHQmJnQubWV0YWRhdGEpe3ZhciBvPXQubWV0YWRhdGEsYT1yLmV4dG5hbWUoZSkuc3Vic3RyKDEpO3JldHVybiBvLmNoYW5nZVRzPTEsby5pZD0rK3RoaXMuX2ZpbGVJZCxvLnRzPXQubXRpbWUuZ2V0VGltZSgpLG8udHlwZT1hJiZhLnRvTG93ZXJDYXNlKCksby5iaW5hcnk9by5iaW5hcnl8fHVbby50eXBlXSxvLnBhdGg9ZSx0aGlzLl9maWxlc0J5UGF0aFtlXT1vLHRoaXMuX2ZpbGVzQnlJZFtvLmlkXT1vLHRoaXMuX2lzUmVhZHkmJih0aGlzLl9scnVDYWNoZS5kZWwoZSksdGhpcy5fbG9hZEZpbGVXaXRoQ2FjaGUobykudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gbi5lbWl0KCJhZGRlZCIsZSl9KSksb31pKCJObyBtZXRhZGF0YSBmb3IgYWRkZWQgZmlsZSBmb3VuZDogJXMiLGUpfSxuLnByb3RvdHlwZS5fZmlsZUNoYW5nZWQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpKCJGaWxlIGNoYW5nZWQ6ICVzIixlKTt2YXIgbj10aGlzLl9maWxlc0J5UGF0aFtlXTtpZihuKXtpZih0aGlzLl9pc1JlYWR5KXt2YXIgbz10aGlzLl9scnVDYWNoZS5nZXQoZSk7dGhpcy5fbHJ1Q2FjaGUuZGVsKGUpO3ZhciByPSsrbi5jaGFuZ2VUczt0aGlzLl9sb2FkRmlsZVdpdGhDYWNoZShuKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlLmNoYW5nZVRzPT09ciYmdC5fZW1pdEZpbGVDaGFuZ2UoZSxvKX0pfX1lbHNlIGkoIk5vIG1ldGFkYXRhIGZvciBjaGFuZ2VkIGZpbGUgZm91bmQ6ICVzIixlKX0sbi5wcm90b3R5cGUuX2VtaXRGaWxlQ2hhbmdlPWZ1bmN0aW9uKGUsdCxuLG8scil7dmFyIGE9ZS5jb250ZW50O2lmKF8uaXNTdHJpbmcodCkpe3ZhciBzPXRoaXMuX2RpZmZNYXRjaFBhdGNoLnBhdGNoX21ha2UodCxhKTtpZighcy5sZW5ndGgpcmV0dXJuIGkoIk5vIGNoYW5nZXMgZGV0ZWN0ZWQgZm9yICVzIixlLnBhdGgpLHZvaWQgdGhpcy5lbWl0KCJub3RDaGFuZ2VkIixlLGEsbik7ZS5oYWRUcmFuc2llbnRDaGFuZ2V8fHJ8fChlLmNvbnRlbnQ9dGhpcy5fZGlmZk1hdGNoUGF0Y2gucGF0Y2hfdG9UZXh0KHMpKX10aGlzLmVtaXQoImNoYW5nZWQiLGUsYSxuLG8pfSxuLnByb3RvdHlwZS5fZmlsZURlbGV0ZWQ9ZnVuY3Rpb24oZSl7aSgiRmlsZSBkZWxldGVkOiAlcyIsZSksdGhpcy5fbHJ1Q2FjaGUuZGVsKGUpO3ZhciB0PXRoaXMuX2ZpbGVzQnlQYXRoW2VdO3Q/KGRlbGV0ZSB0aGlzLl9maWxlc0J5UGF0aFtlXSxkZWxldGUgdGhpcy5fZmlsZXNCeUlkW3QuaWRdLHRoaXMuX2lzUmVhZHkmJnRoaXMuZW1pdCgiZGVsZXRlZCIsdCkpOmkoIk5vIG1ldGFkYXRhIGZvciBkZWxldGVkIGZpbGUgZm91bmQ6ICVzIixlKX0sbi5wcm90b3R5cGUuX3dpdGhOb3JtYWxpemVkUGF0aD1mdW5jdGlvbihlLHQsbil7cmV0dXJuIG4mJm4ubGlua2VkUGF0aCYmKHQ9bi5saW5rZWRQYXRoKSxlLmNhbGwodGhpcyxsLm5vcm1hbGl6ZVBhdGgodCksbil9LG4ucHJvdG90eXBlLl9pc0luY2x1ZGVkPWZ1bmN0aW9uKGUsdCxuLGksbyxhKXt2YXIgbD10aGlzO3JldHVybiBmdW5jdGlvbihjLHApe3ZhciBkPWlbY107aWYoZCljPXIucmVsYXRpdmUoZSxkLmxpbmtlZFBhdGgpLHAmJihwLmxpbmtlZFBhdGg9Yyk7ZWxzZSBpZigwPT09Yy5pbmRleE9mKGUpKWM9ci5yZWxhdGl2ZShlLGMpO2Vsc2V7dmFyIHU9Xy5maW5kKGksZnVuY3Rpb24oZSx0KXtyZXR1cm4gMD09PWMuaW5kZXhPZih0KX0pO2lmKCF1KXJldHVybiExO2M9ci5yZWxhdGl2ZShlLGMucmVwbGFjZSh1LnJlYWxQYXRoLHUubGlua2VkUGF0aCkpLHAmJihwLmxpbmtlZFBhdGg9Yyl9dmFyIGg9bC5faXNFbnRpdHlFeGNsdWRlZChjLG4sbyxhKTtpZihoLmZpbGUmJmgudGVzdClyZXR1cm4hMTt2YXIgbT1vPyIuLyIrYzpjLGY9Xy5jbG9uZShfLmZpbmQodCxmdW5jdGlvbihlKXtyZXR1cm4oIWguZmlsZSYmIWUudGVzdHx8IWgudGVzdCYmZS50ZXN0KSYmcyhtLChvPyIuLyI6IiIpK2UucGF0dGVybix7ZG90OmF9KX0pKTtyZXR1cm4gcCYmKHAubWV0YWRhdGE9ZiksISFmfX0sbi5wcm90b3R5cGUuX2lzRW50aXR5RXhjbHVkZWQ9ZnVuY3Rpb24oZSx0LG4saSl7Zm9yKHZhciBvLHIsYT1uPyIuLyIrZTplLGw9MCxjPXQubGVuZ3RoO2w8YztsKyspe3ZhciBwPXRbbF0sZD1wLnRlc3Q7aWYoKCFvfHxkKSYmcyhhLChuPyIuLyI6IiIpK3AucGF0dGVybix7ZG90Oml9KSl7aWYoZCl7cj1wO2JyZWFrfW89cH19cmV0dXJue2ZpbGU6byx0ZXN0OnJ9fSxuLnByb3RvdHlwZS5fZ2V0QmFzZURpcj1mdW5jdGlvbihlKXt2YXIgdD1sLm5vcm1hbGl6ZVBhdGgoZS5yZXBsYWNlKC9bXC9cXF1bXlwvXFxdKlwqLiokLywiIikucmVwbGFjZSgvW1wvXFxdW15cL1xcXSpbXCFcK11cKC4qJC8sIiIpLnJlcGxhY2UoL1tcL1xcXVteXC9cXF0qXClcPy4qJC8sIiIpfHxyLnNlcCk7cmV0dXJuIHRoaXMuX2hhc0dsb2JDaGFycyh0KSYmKHQ9Ii4vIiksdH0sbn0oRXZlbnRFbWl0dGVyKTt0LmV4cG9ydHM9aH0seyIuLi9zaGFyZWQvdXRpbHMiOjIwLGNob2tpZGFyOnZvaWQgMCxkZWJ1Zzp2b2lkIDAsImxydS1jYWNoZSI6dm9pZCAwLG1pbmltYXRjaDp2b2lkIDAscGF0aDp2b2lkIDB9XSwxNTpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8ZnVuY3Rpb24oKXt2YXIgZT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oZSx0KXtlLl9fcHJvdG9fXz10fXx8ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiYoZVtuXT10W25dKX07cmV0dXJuIGZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gaSgpe3RoaXMuY29uc3RydWN0b3I9dH1lKHQsbiksdC5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooaS5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IGkpfX0oKSxvPShlKCJwYXRoIiksZSgibWluaW1hdGNoIikpLHI9ZSgiLi4vc2hhcmVkL3V0aWxzIiksYT1fLm9taXQoZSgiLi9icm93c2VyR2xvYmFscyIpLCJsZW5ndGgiLCJzZWxmIiwidG9wIiwicGFyZW50Iiwic3RvcCIsImNsb3NlIiwibmFtZSIsImNvbmZpcm0iLCJibHVyIiwiZm9jdXMiLCJvcGVuIiwicHJpbnQiLCJwcm9tcHQiKSxzPWUoIi4vdHJhY2tlZFNvdXJjZUZpbGUiKSxsPWUoIi4vY292ZXJhYmxlUmFuZ2UiKSxjPWUoIi4vZXhlY3V0ZWRUZXN0IikscD1lKCIuL2NvbnNvbGVNZXNzYWdlIiksZD1lKCIuL2Vycm9yRW50cnkiKSx1PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7dmFyIG49ZS5jYWxsKHRoaXMpfHx0aGlzLGk9bjtuLl9maWxlSWRCeVBhdGg9dC5maWxlSWRCeVBhdGgsbi5fYWx3YXlzU2VuZEFsbExpbmVzPXQuYWx3YXlzU2VuZEFsbExpbmVzLG4uX2ZpbGVzPU9iamVjdC5jcmVhdGUobnVsbCksbi5fbnVtYmVyT2ZBbGxSYW5nZXM9MCxuLl9udW1iZXJPZkNvdmVyZWRSYW5nZXM9MCxuLl9jb3ZlcmFnZT17dmFsdWU6MCxsb3c6ITB9LG4uX3Rlc3RzPU9iamVjdC5jcmVhdGUobnVsbCksbi5fZmFpbGluZ1Rlc3RzPU9iamVjdC5jcmVhdGUobnVsbCksbi5fZ2xvYmFsRXJyb3JzPU9iamVjdC5jcmVhdGUobnVsbCksbi5fdGVzdFJ1bkdsb2JhbExvZ3M9W10sbi5fZmlsZXNXaXRoTWVzc2FnZXM9e30sbi5fZmlsZXNXaXRoTG9hZGFibGVNZXNzYWdlcz17fSxuLl9jaGFuZ2VkPSEwLG4uX3Byb2plY3Q9dC5wcm9qZWN0O3ZhciBvPWZ1bmN0aW9uKGUpe3ZhciB0PWlbInByb2plY3Q6IitlLnR5cGVdO3QmJnQuY2FsbChpLGUpfTtyZXR1cm4gbi5fcHJvamVjdC5fbW9kZWx8fHByb2Nlc3MuZW52LnF1b2trYT9uLl9wcm9qZWN0Lm9uKCJtZXNzYWdlIixvKTpuLl9wcm9qZWN0Lm9uKCJtZXNzYWdlIixmdW5jdGlvbihlKXtyZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiBvKGUpfSwzMCl9KSxufXJldHVybiBpKHQsZSksdC5wcm90b3R5cGUuY29uZmlnRmlsZVBhdGg9ZnVuY3Rpb24oKXtyZXR1cm4gci5ub3JtYWxpemVQYXRoKHRoaXMuX3Byb2plY3QuY29uZmlnRmlsZVBhdGgoKSl9LHQucHJvdG90eXBlLnByb2plY3ROYW1lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb2plY3QucHJvamVjdE5hbWUoKX0sdC5wcm90b3R5cGUucHJvamVjdENvbmZpZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9qZWN0LnNldHRpbmdzKCl9LHQucHJvdG90eXBlLmxvd0NvdmVyYWdlVGhyZXNob2xkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb2plY3Quc2V0dGluZ3MoKS5sb3dDb3ZlcmFnZVRocmVzaG9sZH0sdC5wcm90b3R5cGUuY29yZVZlcnNpb249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJvamVjdC5jb3JlVmVyc2lvbigpfSx0LnByb3RvdHlwZS5maWxlQnlQYXRoPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2ZpbGVJZEJ5UGF0aChlKTtpZih0KXJldHVybiB0aGlzLl9maWxlc1t0XX0sdC5wcm90b3R5cGUuZmlsZUJ5SWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2ZpbGVzW2VdfSx0LnByb3RvdHlwZS5maWxlQ29udGVudEJ5UGF0aD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmZpbGVCeVBhdGgoZSk7cmV0dXJuIHQmJnRoaXMuX3Byb2plY3QucmVhZFNvdXJjZUZpbGUodC5rZXkoKSl9LHQucHJvdG90eXBlLnRlc3RzQnlSZXF1ZXN0PWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2lmKGUuZmlsZSl7dmFyIG49dGhpcy5maWxlQnlQYXRoKGUuZmlsZSk7biYmKGUubGluZXx8IW4uaXNUZXN0RmlsZSgpPyhfLmVhY2goZS5saW5lP24ubGluZVRlc3RzKGUubGluZSk6bi5jb3ZlcmluZ1Rlc3RzKCksZnVuY3Rpb24oZSl7dC5wdXNoKFtlLmZpbGVJZCgpXS5jb25jYXQoZS5wYXRoKCkpKX0pLCF0Lmxlbmd0aCYmbi5pc1Rlc3RGaWxlKCkmJnQucHVzaChbbi5rZXkoKV0pKTp0LnB1c2goW24ua2V5KCldKSl9cmV0dXJuIHR9LHQucHJvdG90eXBlLnVuY292ZXJlZFJlZ2lvbnNCeVJlcXVlc3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5maWxlQnlQYXRoKGUuZmlsZSk7aWYodClyZXR1cm4gXy5jaGFpbihlLmxpbmU/dC5saW5lUmFuZ2VzKGUubGluZSk6dC5yYW5nZXMoKSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFlLmlzQ292ZXJlZCgpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybltlLnN0YXJ0TGluZSgpLGUuc3RhcnRDb2x1bW4oKSxlLmVuZExpbmUoKSxlLmVuZENvbHVtbigpXX0pLnZhbHVlKCl9LHQucHJvdG90eXBlLmxpbmVSZXBvcnRCeVJlcXVlc3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5maWxlQnlQYXRoKGUuZmlsZSk7aWYodClyZXR1cm4gdGhpcy5fbGluZVJlcG9ydCh0LGUubGluZSl9LHQucHJvdG90eXBlLmxvY2F0aW9uQnlSZXF1ZXN0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2xhdGVzdEZhaWxpbmdUZXN0QnlGaWxlQW5kTGluZShlKTtpZih0KXtpZigiZmFpbGluZ1Rlc3QiPT09ZS50eXBlKXt2YXIgbj10LnN0YXJ0UmFuZ2UoKTtyZXR1cm4gbj97ZmlsZTp0LmZpbGVQYXRoKCksbG9jOltuLnN0YXJ0TGluZSgpLG4uc3RhcnRDb2x1bW4oKV19Ont9fWlmKCJlcnJvclNvdXJjZSI9PT1lLnR5cGUpe3ZhciBpPV8uZmluZCh0LmVycm9ycygpLGZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLnN0YWNrJiZlLnN0YWNrKCkubGVuZ3RofSk7aWYoIWkpe3ZhciBuPXQuc3RhcnRSYW5nZSgpO3JldHVybiBuP3tmaWxlOnQuZmlsZVBhdGgoKSxsb2M6W24uc3RhcnRMaW5lKCksbi5zdGFydENvbHVtbigpXX06e319dmFyIG89aS5zdGFjaygpWzBdLHI9by5yYW5nZSgpLGE9e307cmV0dXJuIGEuZmlsZT1vLmZpbGVQYXRoKCksciYmKGEubG9jPVtyLnN0YXJ0TGluZSgpLHIuc3RhcnRDb2x1bW4oKV0pLGF9fX0sdC5wcm90b3R5cGUuX2xhdGVzdEZhaWxpbmdUZXN0QnlGaWxlQW5kTGluZT1mdW5jdGlvbihlKXt2YXIgdD1lLmZpbGUmJnRoaXMuZmlsZUJ5UGF0aChlLmZpbGUpLG49dCYmZS5saW5lJiZ0LmxpbmVDb3ZlcmluZ1Rlc3RzT3JkZXJlZEJ5RmFpbGluZ1RoZW5EYXRlKGUubGluZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5pc0Vycm9yU291cmNlKCl8fGUuaXNPbkVycm9yUGF0aCgpfSlbMF07cmV0dXJuIG4mJm4uaXNGYWlsaW5nKCl8fChuPXRoaXMubGF0ZXN0RmFpbGluZ1Rlc3QoKSksbn0sdC5wcm90b3R5cGUuZXJyb3JCeVJlcXVlc3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fbGF0ZXN0RmFpbGluZ1Rlc3RCeUZpbGVBbmRMaW5lKGUpO2lmKHQpe3ZhciBuPXQuZXJyb3JzKCk7aWYoIW4ubGVuZ3RoKXJldHVybjt2YXIgaT10LmZpbGVJZCgpO2lmKCJlcnJvclNvdXJjZSI9PT1lLnR5cGUpcmV0dXJuIHRoaXMuX21hcEVycm9ycyhfLmZpbHRlcihuLGZ1bmN0aW9uKHQpe3JldHVybiBfLmZpbmQodC5zdGFjaygpLGZ1bmN0aW9uKHQpe3JldHVybiB0LmZpbGVJZCgpPT09aSYmdC5saW5lKCk9PT1lLmxpbmV9KX0pKVswXTtpZigiZmFpbGluZ1Rlc3QiPT09ZS50eXBlKXJldHVybiB0aGlzLl9tYXBFcnJvcnMobilbMF19fSx0LnByb3RvdHlwZS5sYXRlc3RGYWlsaW5nVGVzdD1mdW5jdGlvbigpe3JldHVybiBfLmxhc3QoXy52YWx1ZXModGhpcy5fZmFpbGluZ1Rlc3RzKSl9LHQucHJvdG90eXBlLmZ1bGxUZXN0UmVzdWx0c1JlcG9ydD1mdW5jdGlvbihlKXtpZih0aGlzLl9ydW5FcnJvcilyZXR1cm4gdGhpcy5fcnVuRXJyb3I7dmFyIHQ9e2Vycm9yczp0aGlzLl9tYXBFcnJvcnModGhpcy5fZ2xvYmFsRXJyb3JzKSx0aW1lOmUsYWRkaXRpb25hbEhlYWRlck1lc3NhZ2U6dGhpcy5fYWRkaXRpb25hbEhlYWRlck1lc3NhZ2V9O2lmKHByb2Nlc3MuZW52LnF1b2trYSl7dC5tZXNzYWdlcz10aGlzLl9tYXBNZXNzYWdlcyh0aGlzLl90ZXN0UnVuR2xvYmFsTG9ncyk7dmFyIG49dGhpcy5fcHJvamVjdC5zZXR0aW5ncygpO24mJm4ucXVva2thJiZfLmVhY2godC5lcnJvcnMsZnVuY3Rpb24oZSl7aWYoZSYmZS5tZXNzYWdlKXtpZihuLnF1b2trYS5pbnN0YWxsUGFja2FnZS5hbGxvd1RvSW5zdGFsbEltcG9ydGVkTW9kdWxlcyl7dmFyIHQ9ZS5tZXNzYWdlLm1hdGNoKC9DYW5ub3QgZmluZCBtb2R1bGUgJyhbXidccyZ8O10rKScvKTt0JiZ0WzFdJiYoZS5taXNzaW5nUGFja2FnZT1yLnZhbGlkUGFja2FnZU5hbWUodFsxXSkpfXZhciBpPWUubWVzc2FnZS5tYXRjaCgvKFteXHNdKykgaXMgbm90IGRlZmluZWQvKTtpJiZpWzFdJiYoaT1pWzFdLGFbaV0/ZS5taXNzaW5nQnJvd3Nlckdsb2JhbD1pOmUudW5kZWZpbmVkTmFtZT1pKX19KX1lbHNlIHQudG90YWxOdW1iZXI9Xy5zaXplKHRoaXMuX3Rlc3RzKSx0LmZhaWxpbmdOdW1iZXI9Xy5zaXplKHRoaXMuX2ZhaWxpbmdUZXN0cyksdC50ZXN0cz10aGlzLl9tYXBUZXN0cyh0aGlzLl9mYWlsaW5nVGVzdHMpLnJldmVyc2UoKS52YWx1ZSgpO3JldHVybiB0fSx0LnByb3RvdHlwZS5hbGxUZXN0RmlsZXM9ZnVuY3Rpb24oKXtyZXR1cm4gXy5maWx0ZXIodGhpcy5fZmlsZXMsZnVuY3Rpb24oZSl7cmV0dXJuIGUuaXNUZXN0RmlsZSgpfSl9LHQucHJvdG90eXBlLnN1bW1hcnk9ZnVuY3Rpb24oKXt2YXIgZT1fLnNpemUodGhpcy5fdGVzdHMpLHQ9Xy5zaXplKHRoaXMuX2ZhaWxpbmdUZXN0cyk7cmV0dXJue3RvdGFsOmUscGFzc2VkOmUtdCxmYWlsZWQ6dCxjb3ZlcmFnZTp0aGlzLl9jb3ZlcmFnZX19LHQucHJvdG90eXBlLmFsbEZpbGVzPWZ1bmN0aW9uKCl7cmV0dXJuIF8ubWFwKHRoaXMuX2ZpbGVzLGZ1bmN0aW9uKGUpe3JldHVybntwYXRoOmUucGF0aCgpLGlkOmUua2V5KCl9fSl9LHQucHJvdG90eXBlLmdsb2JhbEVycm9ycz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9nbG9iYWxFcnJvcnN9LHQucHJvdG90eXBlLmdldEZpbGVNZXNzYWdlcz1mdW5jdGlvbihlKXt0aGlzLl9maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzW2VdPXt9LHRoaXMuX2VtaXRGaWxlc01lc3NhZ2VzKGUpfSx0LnByb3RvdHlwZVsicHJvamVjdDpzdGFydGluZyJdPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7Xy5lYWNoKGUuZmlsZXMsZnVuY3Rpb24oZSl7cmV0dXJuIHQuX2FkZEZpbGUobmV3IHMoZSkpfSksdGhpcy5fZW1pdCgiYWxsRmlsZXMiLHtmaWxlczplLmZpbGVzfSl9LHQucHJvdG90eXBlWyJwcm9qZWN0OmZpbGUiXT1mdW5jdGlvbihlKXt2YXIgdD1lLmZpbGUsbj1lWyJkZWxldGUiXSxpPXRoaXMuZmlsZUJ5SWQodC5pZCk7aWYoaSYmIW4mJnRoaXMuX2VtaXQoImZpbGVDaGFuZ2VkIix7ZmlsZTp0fSksaXx8bnx8KGk9bmV3IHModCksdGhpcy5fYWRkRmlsZShpKSx0aGlzLl9lbWl0KCJmaWxlQWRkZWQiLHtmaWxlOnR9KSksaSYmbil7dGhpcy5fZGVsZXRlRmlsZSh0LmlkKTt2YXIgbz1PYmplY3QuY3JlYXRlKG51bGwpLHI9aS5vd25UZXN0cygpO3RoaXMuX3Rlc3RzUmVtb3ZlZChyKSxfLmVhY2gocixmdW5jdGlvbihlKXtyZXR1cm4gXy5leHRlbmQobyxlLm9ic29sZXRlKCkpfSksZGVsZXRlIG9bdC5pZF0saS5pc1Rlc3RGaWxlKCkmJnRoaXMuX2VtaXQoInRlc3RGaWxlRGVsZXRlZCIse2ZpbGU6dH0pLHRoaXMuX2VtaXQoImZpbGVEZWxldGVkIix7ZmlsZTp0fSksdGhpcy5fdXBkYXRlQWZmZWN0ZWRGaWxlcyhvKSx0aGlzLl9hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UoaSwhMCksdGhpcy5fdXBkYXRlVG90YWxDb3ZlcmFnZSgpLGkuZGlzcG9zZSgpfX0sdC5wcm90b3R5cGVbInByb2plY3Q6Y29uc29sZU91dHB1dCJdPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBwKGUuZGF0YSksbj10LmZpbGVJZCgpO2lmKG4pe3ZhciBpPXRoaXMuZmlsZUJ5SWQobiksbz10LnJhbmdlKCk7aSYmbyYmdC5zZXRGaWxlKGkpfXRoaXMuX2VtaXQoImNvbnNvbGVPdXRwdXQiLHttZXNzYWdlOnRoaXMuX21hcE1lc3NhZ2UodCl9KX0sdC5wcm90b3R5cGVbInByb2plY3Q6dGVzdFJ1bkVycm9yIl09ZnVuY3Rpb24oZSl7dGhpcy5fcmVwb3J0RmFpbGVkUnVuKGUubWVzc2FnZSl9LHQucHJvdG90eXBlWyJwcm9qZWN0OnRlc3RSZXN1bHRzIl09ZnVuY3Rpb24oZSl7dmFyIHQsbj10aGlzLGk9T2JqZWN0LmNyZWF0ZShudWxsKSxvPU9iamVjdC5jcmVhdGUobnVsbCkscj17fTtuLl9hZGRpdGlvbmFsSGVhZGVyTWVzc2FnZT1lLmFkZGl0aW9uYWxIZWFkZXJNZXNzYWdlLHRoaXMuX3JlcG9ydE5vcm1hbFJ1bigpLHRoaXMuX3Rlc3RSdW5HbG9iYWxMb2dzPVtdLF8uZWFjaChlLnRlc3RzLGZ1bmN0aW9uKG8pe3ZhciByPW5ldyBjKG8pO3IuaW5pdChudWxsLGUudHMsZnVuY3Rpb24oZSl7aVtlLmlkKCldPWUsdCE9PSExJiYodD90LmlzRmFpbGluZygpfHwodD0hIWUuaXNGYWlsaW5nKCkmJmUpOnQ9ZSl9LGZ1bmN0aW9uKGUpe3JldHVybiBlLnNldEZpbGUobi5maWxlQnlJZChlLmZpbGVJZCgpKSl9KX0pLF8uZWFjaChlLmxvZyxmdW5jdGlvbihlKXt2YXIgdD1uZXcgcChlKSxvPXQudGVzdElkKCk7aWYoMCE9PW8pe3ZhciBhPWlbb107YSYmYS5hZGRDb25zb2xlTWVzc2FnZSh0KX12YXIgcz10LmZpbGVJZCgpO2lmKHMpe3ZhciBsPW4uZmlsZUJ5SWQocyksYz10LnJhbmdlKCk7aWYobCYmYyYmKGwuc2V0UmFuZ2VDb25zb2xlTG9nKCJkaWZmIiE9PXQudHlwZSgpP3QudGV4dCgpOiI8c2VlIHRoZSBkaWZmIGluIHF1b2trYSBvdXRwdXQ+IixjKSx0LnNldEZpbGUobCkpLHQudmFsdWVCYWcoKSl7dmFyIGQ9cltzXT1yW3NdfHx7ZmlsZTpsLnBhdGgoKSxtZXNzYWdlczpbXX07ZC5tZXNzYWdlcy5wdXNoKHQpfX0wPT09byYmcHJvY2Vzcy5lbnYucXVva2thJiZuLl90ZXN0UnVuR2xvYmFsTG9ncy5wdXNoKHQpfSk7dmFyIGE9T2JqZWN0LmNyZWF0ZShudWxsKSxzPU9iamVjdC5jcmVhdGUobnVsbCksbD1fLm1hcChlLmZpbGVzLGZ1bmN0aW9uKGUpe3JldHVybntjb3ZlcmFnZTplLGZpbGU6bi5maWxlQnlJZChlLmlkKX19KSx1PV8uZmlsdGVyKGwsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5maWxlLmlzVGVzdEZpbGUoKSxuPWUuY292ZXJhZ2UuY2hhbmdlZCYmIWUuY292ZXJhZ2Uuc2luZ2xlVGVzdENoYW5nZWQsaT10JiZuO3JldHVybiBpP2FbZS5maWxlLmtleSgpXT1lLmZpbGU6dCYmKHNbZS5maWxlLmtleSgpXT1lLmZpbGUpLGl9KTtfLmVhY2godSxmdW5jdGlvbihlKXt2YXIgdD1lLmZpbGU7bi5fdGVzdHNSZW1vdmVkKHQub3duVGVzdHMoKSksXy5lYWNoKHQucmVtb3ZlQWxsVGVzdHMoKSxmdW5jdGlvbihlKXtvW2Uua2V5KCldPWV9KX0pLF8uZWFjaChpLGZ1bmN0aW9uKGUpe3ZhciB0PW4uZmlsZUJ5SWQoZS5maWxlSWQoKSk7Xy5lYWNoKHQuYWRkVGVzdChlKSxmdW5jdGlvbihlKXtvW2Uua2V5KCldPWV9KSxuLl90ZXN0QWRkZWQoZSl9KSxfLmVhY2gobCxmdW5jdGlvbihlKXtuLl91cGRhdGVGaWxlUmFuZ2VzKGUsaSksb1tlLmZpbGUua2V5KCldPWUuZmlsZX0pLF8uZWFjaChpLGZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbXBsZXRlSW5pdGlhbGl6YXRpb24obi5fZmlsZXNCeUlkKCkpfSk7dmFyIGg9W107Xy5lYWNoKGUuZ2xvYmFsRXJyb3JzLGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBkKGUpO3QuaW5pdCgpLF8uZWFjaCh0LnN0YWNrKCksZnVuY3Rpb24oZSl7dmFyIGk9bi5maWxlQnlJZChlLmZpbGVJZCgpKTtpZihpKXtlLnNldEZpbGUoaSk7dmFyIG89aS5jbG9zZXN0UmFuZ2UoZS5saW5lKCkpO251bGwhPW8mJihlLnNldFJhbmdlKG8pLG8uZmFpbHModCkpfX0pLGgucHVzaCh0KX0pLF8uZWFjaChuLl90ZXN0UnVuR2xvYmFsTG9ncyxmdW5jdGlvbihlKXt2YXIgdD1lLmZpbGUoKTt0JiZlLnNldFJhbmdlKHQuY2xvc2VzdFJhbmdlKGUubGluZSgpKSl9KSx0aGlzLl9yZXBvcnRHbG9iYWxFcnJvcnMoaCksdGhpcy5fdXBkYXRlQWZmZWN0ZWRGaWxlcyhvLGUudGltZSxyKSx0aGlzLl9lbWl0KCJ0ZXN0c0V4ZWN1dGVkIix7Zmlyc3RGYWlsaW5nT3JTaW5nbGVFeGVjdXRlZFRlc3Q6dHx8dm9pZCAwLGFsbEFmZmVjdGVkRmlsZXM6byxjaGFuZ2VkOmEsZXhlY3V0ZWQ6cyxmdWxsUnVuOmUuZnVsbFJ1bn0pfSx0LnByb3RvdHlwZS5fYWRkRmlsZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3RoaXMuX2ZpbGVzW2Uua2V5KCldPWUsZS5oYXNSZXBvcnRhYmxlQ292ZXJhZ2UoKSYmKGUuX25vQ292ZXJhZ2VDYWxjdWxhdGlvbj0hIV8uZmluZCh0aGlzLl9wcm9qZWN0LnNldHRpbmdzKCkuZmlsZXNXaXRoTm9Db3ZlcmFnZUNhbGN1bGF0ZWQsZnVuY3Rpb24obil7cmV0dXJuIG8oZS5wYXRoKCksbix7ZG90OnQuX3Byb2plY3Quc2V0dGluZ3MoKS5kb3R9KX0pKX0sdC5wcm90b3R5cGUuX2RlbGV0ZUZpbGU9ZnVuY3Rpb24oZSl7ZGVsZXRlIHRoaXMuX2ZpbGVzW2VdLGRlbGV0ZSB0aGlzLl9maWxlc1dpdGhNZXNzYWdlc1tlXX0sdC5wcm90b3R5cGUuX2xpbmVSZXBvcnQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dGVzdHM6dGhpcy5fbWFwVGVzdHMoZS5saW5lQ292ZXJpbmdUZXN0c09yZGVyZWRCeUZhaWxpbmdUaGVuRGF0ZSh0KSl9fSx0LnByb3RvdHlwZS5fcmVwb3J0RmFpbGVkUnVuPWZ1bmN0aW9uKGUpe3RoaXMuX2NoYW5nZWQ9ITAsdGhpcy5fcnVuRXJyb3I9ZX0sdC5wcm90b3R5cGUuX3JlcG9ydE5vcm1hbFJ1bj1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzLl9ydW5FcnJvcn0sdC5wcm90b3R5cGUuX3JlcG9ydEdsb2JhbEVycm9ycz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLG49T2JqZWN0LmNyZWF0ZShudWxsKTt0aGlzLl9jaGFuZ2VkPXRoaXMuX2NoYW5nZWR8fF8uc2l6ZSh0aGlzLl9nbG9iYWxFcnJvcnMpIT09ZS5sZW5ndGgsXy5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIGk9ZS5rZXkoKTtkZWxldGUgdC5fZ2xvYmFsRXJyb3JzW2ldLG5baV09ZX0pLHRoaXMuX2NoYW5nZWQ9dGhpcy5fY2hhbmdlZHx8IV8uaXNFbXB0eSh0aGlzLl9nbG9iYWxFcnJvcnMpLHRoaXMuX2dsb2JhbEVycm9ycz1ufSx0LnByb3RvdHlwZS5fdGVzdHNSZW1vdmVkPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7Xy5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIG49ZS5rZXkoKSxpPSEhdC5fZmFpbGluZ1Rlc3RzW25dO2RlbGV0ZSB0Ll90ZXN0c1tuXSxkZWxldGUgdC5fZmFpbGluZ1Rlc3RzW25dLHQuX2NoYW5nZWQ9aXx8dC5fY2hhbmdlZH0pfSx0LnByb3RvdHlwZS5fdGVzdEFkZGVkPWZ1bmN0aW9uKGUpe3ZhciB0PWUua2V5KCksbj10aGlzLl90ZXN0c1t0XTt0aGlzLl90ZXN0c1t0XT1lLGRlbGV0ZSB0aGlzLl9mYWlsaW5nVGVzdHNbdF0sZS5pc0ZhaWxpbmcoKSYmKHRoaXMuX2ZhaWxpbmdUZXN0c1t0XT1lKSx0aGlzLl9jaGFuZ2VkPSFufHxuJiZuLmlzRmFpbGluZygpfHxlLmlzRmFpbGluZygpfHx0aGlzLl9jaGFuZ2VkfSx0LnByb3RvdHlwZS5fZmlsZXNCeUlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGVzfSx0LnByb3RvdHlwZS5fdXBkYXRlQWZmZWN0ZWRGaWxlcz1mdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxvPXRoaXMscj1PYmplY3QuY3JlYXRlKG51bGwpLGE9W107Xy5lYWNoKGUsZnVuY3Rpb24oZSl7by5fYWdncmVnYXRlRmlsZUNvdmVyYWdlKGUpJiZhLnB1c2goZSk7dmFyIHQ9ZS51cGRhdGVEb2N1bWVudCgpO2lmKHQmJihyW2UucGF0aCgpXT1vLl9hbHdheXNTZW5kQWxsTGluZXM/ZS5hbGxMaW5lcygpOnQpLG4pe3ZhciBzPWUua2V5KCksbD1uW3NdO2w/aS5fZmlsZXNXaXRoTWVzc2FnZXNbc109bDpkZWxldGUgaS5fZmlsZXNXaXRoTWVzc2FnZXNbc119fSksXy5pc0VtcHR5KHIpfHx0aGlzLl9lbWl0KCJkb2N1bWVudHNVcGRhdGVkIix7ZG9jdW1lbnRzOnJ9KTt2YXIgcz10aGlzLl9jaGFuZ2VkO3MmJmRlbGV0ZSB0aGlzLl9jaGFuZ2VkLGEubGVuZ3RoJiZ0aGlzLl91cGRhdGVUb3RhbENvdmVyYWdlKCksdGhpcy5fZW1pdCgic3RhdHNNYXliZUNoYW5nZWQiLHt0ZXN0UmVzdWx0c0NoYW5nZWQ6cyxmaWxlc1dpdGhDaGFuZ2VkQ292ZXJhZ2U6YSx0aW1lOnR9KSxwcm9jZXNzLmVudi5xdW9ra2F8fHRoaXMuX2VtaXRGaWxlc01lc3NhZ2VzKCl9LHQucHJvdG90eXBlLl9lbWl0RmlsZXNNZXNzYWdlcz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLG49e307Xy5lYWNoKGU/KGk9e30saVtlXT10aGlzLl9maWxlc1dpdGhNZXNzYWdlc1tlXXx8e30saSk6dGhpcy5fZmlsZXNXaXRoTWVzc2FnZXMsZnVuY3Rpb24oZSxpKXt2YXIgbz0hIWUubWVzc2FnZXMuZmluZChmdW5jdGlvbihlKXtyZXR1cm4gZS52YWx1ZUJhZygpLmRhdGEuYXV0b0V4cGFuZH0pO28mJiF0Ll9maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzW2ldJiYodC5fZmlsZXNXaXRoTG9hZGFibGVNZXNzYWdlc1tpXT17fSk7dmFyIHI9dC5fZmlsZXNXaXRoTG9hZGFibGVNZXNzYWdlc1tpXTtuW2ldPXttZXNzYWdlczpyP3QuX21hcE1lc3NhZ2VzKGUubWVzc2FnZXMsITApOltdLG5hbWU6ZS5maWxlfSxyJiYoZS5tZXNzYWdlcz1bXSl9KSwoXy5pc0VtcHR5KG4pfHxlJiYhbltlXS5uYW1lKSYmKG49dm9pZCAwKSx0aGlzLl9lbWl0KCJmaWxlTWVzc2FnZXMiLHtmaWxlczpuLHNwZWNpZmljRmlsZTplfSk7dmFyIGl9LHQucHJvdG90eXBlLl9hZ2dyZWdhdGVGaWxlQ292ZXJhZ2U9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzO2lmKGUuaGFzUmVwb3J0YWJsZUNvdmVyYWdlKCkpe3ZhciBpPXQ/MDplLm51bWJlck9mQWxsUmFuZ2VzKCksbz10PzA6ZS5udW1iZXJPZkNvdmVyZWRSYW5nZXMoKSxyPTAsYT0wO2lmKGUuX3ZhbHVlc0luY2x1ZGVkSW5Db3ZlcmFnZUFnZ3JlZ2F0ZT8ocj1pLWUuX3ZhbHVlc0luY2x1ZGVkSW5Db3ZlcmFnZUFnZ3JlZ2F0ZS5udW1iZXJPZkFsbFJhbmdlcyxhPW8tZS5fdmFsdWVzSW5jbHVkZWRJbkNvdmVyYWdlQWdncmVnYXRlLm51bWJlck9mQ292ZXJlZFJhbmdlcyk6KHI9aSxhPW8pLGUuX3ZhbHVlc0luY2x1ZGVkSW5Db3ZlcmFnZUFnZ3JlZ2F0ZT17bnVtYmVyT2ZBbGxSYW5nZXM6aSxudW1iZXJPZkNvdmVyZWRSYW5nZXM6b30sbi5fbnVtYmVyT2ZBbGxSYW5nZXMrPXIsbi5fbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzKz1hLDAhPT1yfHwwIT09YSlyZXR1cm4hMH19LHQucHJvdG90eXBlLl91cGRhdGVUb3RhbENvdmVyYWdlPWZ1bmN0aW9uKCl7dmFyIGU9TWF0aC5yb3VuZCgxZTQqdGhpcy5fbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzL3RoaXMuX251bWJlck9mQWxsUmFuZ2VzKS8xMDB8fDA7dGhpcy5fY292ZXJhZ2U9e3ZhbHVlOmUsbG93OmU8dGhpcy5sb3dDb3ZlcmFnZVRocmVzaG9sZCgpfX0sdC5wcm90b3R5cGUuX3VwZGF0ZUZpbGVSYW5nZXM9ZnVuY3Rpb24oZSx0KXt2YXIgbj1bXSxpPWUuZmlsZSxvPWUuY292ZXJhZ2U7Xy5lYWNoKG8ucmFuZ2VzLGZ1bmN0aW9uKGUpe3ZhciBvPW5ldyBsKGUpO28uaW5pdChpLHQpLG8uc2V0Q29uc29sZUxvZyhpLnJhbmdlQ29uc29sZUxvZyhvKSksbi5wdXNoKG8pfSksaS5zZXRSYW5nZXMobixvLmNoYW5nZWQsZS5jb3ZlcmFnZS5zaW5nbGVUZXN0Q2hhbmdlZCksaS5jbGVhclJhbmdlQ29uc29sZUxvZygpfSx0LnByb3RvdHlwZS5fbWFwVGVzdHM9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gXyhlKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJue2ZhaWxpbmc6ZS5pc0ZhaWxpbmcoKSxsb2M6dC5fcmFuZ2VUb0xvYyhlLnN0YXJ0UmFuZ2UoKSksZmlsZTplLmZpbGVQYXRoKCksdGltZTplLnRpbWUoKSxlcnJvcnM6dC5fbWFwRXJyb3JzKGUuZXJyb3JzKCkpLHBhdGg6ZS5wYXRoKCksbWVzc2FnZXM6dC5fbWFwTWVzc2FnZXMoZS5jb25zb2xlTWVzc2FnZXMoKSl9fSl9LHQucHJvdG90eXBlLl9tYXBNZXNzYWdlcz1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7cmV0dXJuIF8uY2hhaW4oZSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiF0fHxlLnZhbHVlQmFnKCl9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG4uX21hcE1lc3NhZ2UoZSx0KX0pLnZhbHVlcygpfSx0LnByb3RvdHlwZS5fbWFwTWVzc2FnZT1mdW5jdGlvbihlLHQpe3JldHVybnt0eXBlOmUudHlwZSgpLHRleHQ6dD92b2lkIDA6ZS50ZXh0KCksZmlsZTplLmZpbGUoKSYmZS5maWxlKCkucGF0aCgpLGxvYzp0aGlzLl9yYW5nZVRvTG9jKGUucmFuZ2UoKSl8fGUubGluZSgpLGNvbnRleHQ6ZS5jb250ZXh0KCksdmFsdWVCYWc6dD9lLmRldGFjaFZhbHVlQmFnKCk6cHJvY2Vzcy5lbnYucXVva2thP2UudmFsdWVCYWcoKTp2b2lkIDAsZXhwZWN0ZWQ6ZS5leHBlY3RlZCgpLGFjdHVhbDplLmFjdHVhbCgpfX0sdC5wcm90b3R5cGUuX21hcEVycm9ycz1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBfLm1hcChlLGZ1bmN0aW9uKGUpe3JldHVybnttZXNzYWdlOmUubWVzc2FnZSgpLHN0YWNrOl8ubWFwKGUuc3RhY2soKSxmdW5jdGlvbihlKXtyZXR1cm57ZmlsZTplLmZpbGVQYXRoKCksbG9jOnQuX3JhbmdlVG9Mb2MoZS5yYW5nZSgpKXx8ZS5saW5lKCksY29udGV4dDplLmNvbnRleHQoKX19KSxleHBlY3RlZDplLmV4cGVjdGVkKCksYWN0dWFsOmUuYWN0dWFsKCksc25hcHNob3Q6ZS5zbmFwc2hvdCgpfX0pfSx0LnByb3RvdHlwZS5fcmFuZ2VUb0xvYz1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5zdGFydExpbmUmJmUuc3RhcnRMaW5lKCkrIjoiK2Uuc3RhcnRDb2x1bW4oKXx8dm9pZCAwfSx0LnByb3RvdHlwZS5fZW1pdD1mdW5jdGlvbihlLHQpe3RoaXMuZW1pdCgibWVzc2FnZSIsXy5leHRlbmQoe3R5cGU6ZX0sdCkpfSx0fShFdmVudEVtaXR0ZXIpO3QuZXhwb3J0cz11fSx7Ii4uL3NoYXJlZC91dGlscyI6MjAsIi4vYnJvd3Nlckdsb2JhbHMiOjcsIi4vY29uc29sZU1lc3NhZ2UiOjgsIi4vY292ZXJhYmxlUmFuZ2UiOjksIi4vZXJyb3JFbnRyeSI6MTIsIi4vZXhlY3V0ZWRUZXN0IjoxMywiLi90cmFja2VkU291cmNlRmlsZSI6MTgsbWluaW1hdGNoOnZvaWQgMCxwYXRoOnZvaWQgMH1dLDE2OltmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBpPWUoImRncmFtIiksbz1lKCJvcyIpLHI9ZSgiLi8uLi8uLi91dGlscyIpLGE9ci5yYW5kb21JZCgpLHM9bi5vcHRpb25zPXt0dGw6MTI4LGFkZHJlc3M6IjIzMC4wLjAuMyIscG9ydDo1NjM5OH0sbD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt0cnl7dmFyIGU9dGhpczt0aGlzLl9saXN0ZW5lcnM9e30sdGhpcy5fc2VuZGVyPWkuY3JlYXRlU29ja2V0KCJ1ZHA0IiksdGhpcy5fc2VuZGVyLmJpbmQoZnVuY3Rpb24oKXtlLl9zZW5kZXIuc2V0QnJvYWRjYXN0KCEwKSxlLl9zZW5kZXIuc2V0TXVsdGljYXN0VFRMKHMudHRsKX0pLHRoaXMuX3NlbmRlci5vbigiZXJyb3IiLGZ1bmN0aW9uKCl7dHJ5e2UuX3NlbmRlci5jbG9zZSgpfWNhdGNoKHQpe319KSx0aGlzLl9yZWNlaXZlcj1pLmNyZWF0ZVNvY2tldCgidWRwNCIpLHRoaXMuX3JlY2VpdmVyLm9uKCJsaXN0ZW5pbmciLGZ1bmN0aW9uKCl7dHJ5e2UuX3JlY2VpdmVyLnNldEJyb2FkY2FzdCghMCksZS5fcmVjZWl2ZXIuc2V0TXVsdGljYXN0VFRMKHMudHRsKSxlLl9yZWNlaXZlci5hZGRNZW1iZXJzaGlwKHMuYWRkcmVzcyl9Y2F0Y2godCl7fX0pLHRoaXMuX3JlY2VpdmVyLm9uKCJtZXNzYWdlIixmdW5jdGlvbih0KXt0cnl7dD1KU09OLnBhcnNlKHQudG9TdHJpbmcoInV0ZjgiKSksdC5ldmVudCYmdC5zb3VyY2UmJnQuc291cmNlSWQmJnQuc291cmNlIT09ZS5fc291cmNlKCkmJnQuc291cmNlSWQhPT1hJiZfLmVhY2goZS5fbGlzdGVuZXJzW3QuZXZlbnRdLGZ1bmN0aW9uKGUpe2UuYXBwbHkobnVsbCxbdC5kYXRhLHQuc291cmNlXSl9KX1jYXRjaChuKXt9fSksdGhpcy5fcmVjZWl2ZXIub24oImVycm9yIixmdW5jdGlvbigpe3RyeXtlLl9yZWNlaXZlci5jbG9zZSgpfWNhdGNoKHQpe319KSx0aGlzLl9yZWNlaXZlci5iaW5kKHMucG9ydCl9Y2F0Y2godCl7fX1yZXR1cm4gZS5wcm90b3R5cGUub249ZnVuY3Rpb24oZSx0KXt0aGlzLl9saXN0ZW5lcnMmJih0aGlzLl9saXN0ZW5lcnNbZV18fCh0aGlzLl9saXN0ZW5lcnNbZV09W10pLHRoaXMuX2xpc3RlbmVyc1tlXS5wdXNoKHQpKX0sZS5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbihlLHQpe3RyeXt2YXIgbj1uZXcgQnVmZmVyKEpTT04uc3RyaW5naWZ5KHtldmVudDplLGRhdGE6dCxzb3VyY2U6dGhpcy5fc291cmNlKCksc291cmNlSWQ6YX0pKTt0aGlzLl9zZW5kZXIuc2VuZChuLDAsbi5sZW5ndGgscy5wb3J0LHMuYWRkcmVzcyl9Y2F0Y2goaSl7fX0sZS5wcm90b3R5cGUuX3NvdXJjZT1mdW5jdGlvbigpe3JldHVybiBvLmhvc3RuYW1lKCkrIiAoIitlLl9nZXRJUHY0QWRkcmVzcygpKyIpIn0sZS5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbigpe3RyeXt0aGlzLl9zZW5kZXIuY2xvc2UoKX1jYXRjaChlKXt9dHJ5e3RoaXMuX3JlY2VpdmVyLmNsb3NlKCl9Y2F0Y2goZSl7fX0sZS5fZ2V0SVB2NEFkZHJlc3M9ZnVuY3Rpb24oKXt2YXIgZT0iIjtyZXR1cm4gXy5lYWNoKG8ubmV0d29ya0ludGVyZmFjZXMoKSxmdW5jdGlvbih0KXtpZighZSlmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIGk9dFtuXTtpZigiSVB2NCI9PT1pLmZhbWlseSYmIjEyNy4wLjAuMSIhPT1pLmFkZHJlc3MmJiFpLmludGVybmFsKXJldHVybiB2b2lkKGU9aS5hZGRyZXNzKX19KSxlfHwiMC4wLjAuMCJ9LGV9KCk7dC5leHBvcnRzPW5ldyBsfSx7Ii4vLi4vLi4vdXRpbHMiOjI3LGRncmFtOnZvaWQgMCxvczp2b2lkIDB9XSwxNzpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXtpZihhcmd1bWVudHMubGVuZ3RoPjEpdGhpcy5fZmlsZUlkPWFyZ3VtZW50c1swXSx0aGlzLl9saW5lPWFyZ3VtZW50c1sxXSx0aGlzLl9jb250ZXh0PWFyZ3VtZW50c1syXTtlbHNlIGlmKGFyZ3VtZW50cy5sZW5ndGgpe3ZhciBlPWFyZ3VtZW50c1swXS5zcGxpdCgiXyIpO3RoaXMuX2ZpbGVJZD1wYXJzZUludChlWzBdLDEwKSx0aGlzLl9saW5lPXBhcnNlSW50KGVbMV0sMTApfX1yZXR1cm4gZS5wcm90b3R5cGUua2V5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGVJZCsiXyIrdGhpcy5fbGluZX0sZS5wcm90b3R5cGUuZmlsZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGVJZH0sZS5wcm90b3R5cGUubGluZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9saW5lfSxlLnByb3RvdHlwZS5jb250ZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvbnRleHR9LGUucHJvdG90eXBlLnNldEZpbGU9ZnVuY3Rpb24oZSl7dGhpcy5fZmlsZT1lfSxlLnByb3RvdHlwZS5maWxlUGF0aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9maWxlJiZ0aGlzLl9maWxlLnBhdGgoKXx8dGhpcy5fZmlsZUlkJiZ+dGhpcy5fZmlsZUlkLmluZGV4T2YoIi4iKSYmdGhpcy5fZmlsZUlkfSxlLnByb3RvdHlwZS5zZXRSYW5nZT1mdW5jdGlvbihlKXt0aGlzLl9yYW5nZT1lfSxlLnByb3RvdHlwZS5yYW5nZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yYW5nZX0sZX0oKTt0LmV4cG9ydHM9aX0se31dLDE4OltmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBpPWUoIi4vY292ZXJhYmxlUmFuZ2UiKSxvPWUoIi4vZG9jdW1lbnRJbkVkaXRvciIpLHI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMuX2RhdGE9ZSx0aGlzLl9yYW5nZUNvbnNvbGVMb2c9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9yYW5nZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9uZXdSYW5nZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9hZmZlY3RlZFJhbmdlcz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX291dGRhdGVkUmFuZ2VzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fbGluZVRvUmFuZ2VNYXA9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl90ZXN0TWFwPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzPTB9cmV0dXJuIGUucHJvdG90eXBlLnNldFJhbmdlQ29uc29sZUxvZz1mdW5jdGlvbihlLHQpe3ZhciBuPTgxOTIsbz1pLnJhbmdlS2V5KHQpLHI9dGhpcy5fcmFuZ2VDb25zb2xlTG9nW29dO3J8fChyPXRoaXMuX3JhbmdlQ29uc29sZUxvZ1tvXT1bXSk7dmFyIGE9ZS5sZW5ndGg+bj8iLi4uIjoiIjtlPWUuc3Vic3RyKDAsbiksci5wdXNoKGUrYSl9LGUucHJvdG90eXBlLnJhbmdlcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yYW5nZXN9LGUucHJvdG90eXBlLmluc3RydW1lbnRlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhLmNvdmVyYWJsZX0sZS5wcm90b3R5cGUudXBkYXRlRG9jdW1lbnQ9ZnVuY3Rpb24oKXt2YXIgZT1fLmV4dGVuZCh7fSx0aGlzLl9uZXdSYW5nZXMsdGhpcy5fYWZmZWN0ZWRSYW5nZXMsdGhpcy5fb3V0ZGF0ZWRSYW5nZXMpLHQ9dGhpcy5fYWxsUmFuZ2VzUmVjZWl2ZWQsbj10aGlzLl9pbnZhbGlkYXRlRG9jdW1lbnQ7aWYoZGVsZXRlIHRoaXMuX2FsbFJhbmdlc1JlY2VpdmVkLGRlbGV0ZSB0aGlzLl9pbnZhbGlkYXRlRG9jdW1lbnQsXy5lYWNoKHRoaXMuX291dGRhdGVkUmFuZ2VzLGZ1bmN0aW9uKGUpe3JldHVybiBlLmRpc3Bvc2UoKX0pLHRoaXMuX25ld1Jhbmdlcz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2FmZmVjdGVkUmFuZ2VzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fb3V0ZGF0ZWRSYW5nZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9kb2N1bWVudEluRWRpdG9yKXt2YXIgaT1uP3RoaXMuX2RvY3VtZW50SW5FZGl0b3IudXBkYXRlKF8udmFsdWVzKHRoaXMuX3JhbmdlcyksITAsITApOnRoaXMuX2RvY3VtZW50SW5FZGl0b3IudXBkYXRlKGUsdCwhMSk7cmV0dXJuIGkuZnVsbFVwZGF0ZT1uLGl9fSxlLnByb3RvdHlwZS5hbGxMaW5lcz1mdW5jdGlvbigpe2lmKHRoaXMuX2RvY3VtZW50SW5FZGl0b3Ipe3ZhciBlPXRoaXMuX2RvY3VtZW50SW5FZGl0b3IuYWxsTGluZXMoKTtyZXR1cm4gZSYmKGUuY292ZXJhZ2U9e3ZhbHVlOnRoaXMuY292ZXJhZ2UoKX0pLGV9fSxlLnByb3RvdHlwZS5vcGVuZWRJbkVkaXRvcj1mdW5jdGlvbigpe3RoaXMuX2RvY3VtZW50SW5FZGl0b3J8fCh0aGlzLl9kb2N1bWVudEluRWRpdG9yPW5ldyBvLHRoaXMuX2RvY3VtZW50SW5FZGl0b3IudXBkYXRlKF8udmFsdWVzKHRoaXMuX3JhbmdlcyksITEsITApKX0sZS5wcm90b3R5cGUuY2xvc2VkSW5BbGxFZGl0b3JzPWZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXMuX2RvY3VtZW50SW5FZGl0b3J9LGUucHJvdG90eXBlLmlzT3BlbmVkSW5FZGl0b3I9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZG9jdW1lbnRJbkVkaXRvcn0sZS5wcm90b3R5cGUuc2hpZnREb2N1bWVudExpbmVzPWZ1bmN0aW9uKGUsdCxuKXt0aGlzLl9kb2N1bWVudEluRWRpdG9yJiZ0aGlzLl9kb2N1bWVudEluRWRpdG9yLnNoaWZ0TGluZXMoZSx0LG4pfSxlLnByb3RvdHlwZS5pbnZhbGlkYXRlRG9jdW1lbnRMaW5lcz1mdW5jdGlvbihlKXt0aGlzLl9kb2N1bWVudEluRWRpdG9yJiZ0aGlzLl9kb2N1bWVudEluRWRpdG9yLmludmFsaWRhdGVMaW5lcyhlKX0sZS5wcm90b3R5cGUuaW52YWxpZGF0ZURvY3VtZW50PWZ1bmN0aW9uKCl7dGhpcy5fZG9jdW1lbnRJbkVkaXRvciYmKHRoaXMuX2ludmFsaWRhdGVEb2N1bWVudD0hMCl9LGUucHJvdG90eXBlLmhhc1ZhbGlkRG9jdW1lbnQ9ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5faW52YWxpZGF0ZURvY3VtZW50fSxlLnByb3RvdHlwZS5saW5lVGVzdHM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2NvdmVyaW5nVGVzdHMoZSl9LGUucHJvdG90eXBlLmxpbmVSYW5nZXM9ZnVuY3Rpb24oZSl7aWYodGhpcy5fZG9jdW1lbnRJbkVkaXRvcil7dmFyIHQ9dGhpcy5fZG9jdW1lbnRJbkVkaXRvci5saW5lKGUpO2lmKHQpcmV0dXJuIHQucmFuZ2VzKCl9fSxlLnByb3RvdHlwZS5jb3ZlcmluZ1Rlc3RzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NvdmVyaW5nVGVzdHMoKX0sZS5wcm90b3R5cGUubGluZUNvdmVyaW5nVGVzdHNPcmRlcmVkQnlGYWlsaW5nVGhlbkRhdGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gXy5jaGFpbih0aGlzLl9jb3ZlcmluZ1Rlc3RzKGUsdCkpLnNvcnRCeShmdW5jdGlvbihlKXtyZXR1cm4hZS5pc0ZhaWxpbmcoKX0pLnNvcnRCeShmdW5jdGlvbihlKXtyZXR1cm4tZS50cygpfSkudmFsdWUoKX0sZS5wcm90b3R5cGUuX2NvdmVyaW5nVGVzdHM9ZnVuY3Rpb24oZSx0KXt2YXIgbjtpZihlKXtpZighdGhpcy5fZG9jdW1lbnRJbkVkaXRvcilyZXR1cm5bXTtpZihuPXRoaXMuX2RvY3VtZW50SW5FZGl0b3IubGluZShlKSwhbilyZXR1cm5bXX12YXIgaT1uP24ucmFuZ2VzKCk6dGhpcy5fcmFuZ2VzO3JldHVybiB0JiYoaT1fLmZpbHRlcihpLHQpKSxfLnJlZHVjZShpLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIF8uZWFjaCh0LmNvdmVyaW5nVGVzdHMoKSxmdW5jdGlvbih0KXtlW3Qua2V5KCldPXR9KSxlfSx7fSl9LGUucHJvdG90eXBlLmRpc3Bvc2U9ZnVuY3Rpb24oKXtkZWxldGUgdGhpcy5fZG9jdW1lbnRJbkVkaXRvcixfLmVhY2godGhpcy5fcmFuZ2VzLGZ1bmN0aW9uKGUpe3JldHVybiBlLmRpc3Bvc2UoKX0pLGRlbGV0ZSB0aGlzLl9yYW5nZXMsZGVsZXRlIHRoaXMuX3Rlc3RNYXB9LGUucHJvdG90eXBlLnJhbmdlQ29uc29sZUxvZz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fcmFuZ2VDb25zb2xlTG9nW2Uua2V5KCldfSxlLnByb3RvdHlwZS5jbGVhclJhbmdlQ29uc29sZUxvZz1mdW5jdGlvbigpe3RoaXMuX3JhbmdlQ29uc29sZUxvZz1PYmplY3QuY3JlYXRlKG51bGwpfSxlLnByb3RvdHlwZS5rZXk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YS5pZH0sZS5wcm90b3R5cGUucGF0aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhLnBhdGh9LGUucHJvdG90eXBlLmFkZFRlc3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9T2JqZWN0LmNyZWF0ZShudWxsKSxuPXRoaXMuX3Rlc3RNYXBbZS5rZXkoKV07cmV0dXJuIG4mJl8uZWFjaChuLm9ic29sZXRlKCksZnVuY3Rpb24oZSl7dFtlLmtleSgpXT1lfSksdGhpcy5fdGVzdE1hcFtlLmtleSgpXT1lLGUuc2V0VGVzdEZpbGUodGhpcyksdH0sZS5wcm90b3R5cGUucmFuZ2VDb3ZlcmFnZUNoYW5nZWQ9ZnVuY3Rpb24oZSx0KXt0aGlzLl9hZmZlY3RlZFJhbmdlc1tlLmtleSgpXT1lO3ZhciBuPWUuaXNDb3ZlcmVkKCk7dCE9PW4mJih0aGlzLl9udW1iZXJPZkNvdmVyZWRSYW5nZXMrPW4/MTotMSl9LGUucHJvdG90eXBlLmlzVGVzdEZpbGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGF0YS50ZXN0fSxlLnByb3RvdHlwZS5jb3ZlcmFnZT1mdW5jdGlvbigpe2lmKHRoaXMuaGFzUmVwb3J0YWJsZUNvdmVyYWdlKCkpcmV0dXJuIE1hdGgucm91bmQoMWU0KnRoaXMuX251bWJlck9mQ292ZXJlZFJhbmdlcy9fLnNpemUodGhpcy5fcmFuZ2VzKSkvMTAwOwp9LGUucHJvdG90eXBlLmhhc1JlcG9ydGFibGVDb3ZlcmFnZT1mdW5jdGlvbigpe3JldHVybiF0aGlzLmlzVGVzdEZpbGUoKSYmdGhpcy5pbnN0cnVtZW50ZWQoKSYmIXRoaXMuX25vQ292ZXJhZ2VDYWxjdWxhdGlvbn0sZS5wcm90b3R5cGUubnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX251bWJlck9mQ292ZXJlZFJhbmdlc30sZS5wcm90b3R5cGUubnVtYmVyT2ZBbGxSYW5nZXM9ZnVuY3Rpb24oKXtyZXR1cm4gXy5zaXplKHRoaXMuX3Jhbmdlcyl9LGUucHJvdG90eXBlLnNldFJhbmdlcz1mdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpczt0aGlzLl9hbGxSYW5nZXNSZWNlaXZlZD10LHQmJnRoaXMuX3JlYnVpbGRSYW5nZU1hcCgpO3ZhciBvPU9iamVjdC5jcmVhdGUobnVsbCk7Xy5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIHI9ZS5rZXkoKSxhPWkuX3Jhbmdlc1tyXTtpZihhKXt2YXIgcz1hLmlzQ292ZXJlZCgpLGw9ZS5pc0NvdmVyZWQoKTt0fHxzPT09bHx8KGkuX251bWJlck9mQ292ZXJlZFJhbmdlcys9bD8xOi0xKSxhLnVwZGF0ZUZyb20oZSx0LG4pLG9bcl09YSxpLl9hZmZlY3RlZFJhbmdlc1tyXT1hfWVsc2UgaS5fcmFuZ2VzW3JdPWUsaS5fbmV3UmFuZ2VzW3JdPWUsZS5hdHRhY2hlZFRvU291cmNlRmlsZSgpLGUuaXNDb3ZlcmVkKCkmJiF0JiZpLl9udW1iZXJPZkNvdmVyZWRSYW5nZXMrK30pLHQmJihpLl9udW1iZXJPZkNvdmVyZWRSYW5nZXM9MCx0aGlzLl9saW5lVG9SYW5nZU1hcD1PYmplY3QuY3JlYXRlKG51bGwpLF8uZWFjaChfLnZhbHVlcyh0aGlzLl9yYW5nZXMpLGZ1bmN0aW9uKGUpe3ZhciB0PWUua2V5KCk7aWYoaS5fbmV3UmFuZ2VzW3RdfHxvW3RdKXtlLmlzQ292ZXJlZCgpJiZpLl9udW1iZXJPZkNvdmVyZWRSYW5nZXMrKztmb3IodmFyIG49ZS5zdGFydExpbmUoKTtuPD1lLmVuZExpbmUoKTtuKyspe3ZhciByPWkuX2xpbmVUb1JhbmdlTWFwW25dO3ImJiFlLmNsb3NlclRvVGhlTGluZVRoYW4obixyKXx8KGkuX2xpbmVUb1JhbmdlTWFwW25dPWUpfX1lbHNlIGkuX291dGRhdGVkUmFuZ2VzW3RdPWUsZGVsZXRlIGkuX3Jhbmdlc1t0XX0pKX0sZS5wcm90b3R5cGUub3duVGVzdHM9ZnVuY3Rpb24oKXtyZXR1cm4gXy52YWx1ZXModGhpcy5fdGVzdE1hcCl9LGUucHJvdG90eXBlLnJlbW92ZUFsbFRlc3RzPWZ1bmN0aW9uKCl7dmFyIGU9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4gXy5lYWNoKHRoaXMub3duVGVzdHMoKSxmdW5jdGlvbih0KXtfLmVhY2godC5vYnNvbGV0ZSgpLGZ1bmN0aW9uKHQpe2VbdC5rZXkoKV09dH0pfSksdGhpcy5fdGVzdE1hcD1PYmplY3QuY3JlYXRlKG51bGwpLGV9LGUucHJvdG90eXBlLmNsb3Nlc3RSYW5nZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbGluZVRvUmFuZ2VNYXBbZV19LGUucHJvdG90eXBlLl9yZWJ1aWxkUmFuZ2VNYXA9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5fcmFuZ2VzO3RoaXMuX3Jhbmdlcz1PYmplY3QuY3JlYXRlKG51bGwpLF8uZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciBuPXQua2V5KCksaT1lLl9yYW5nZXNbbl07ZS5fcmFuZ2VzW25dPXQsaSYmaS5kaXNwb3NlKCl9KX0sZX0oKTt0LmV4cG9ydHM9cn0seyIuL2NvdmVyYWJsZVJhbmdlIjo5LCIuL2RvY3VtZW50SW5FZGl0b3IiOjEwfV0sMTk6W2Z1bmN0aW9uKGUsdCxuKXt0LmV4cG9ydHM9e2xpbmVTdGF0ZTp7bm90Q292ZXJlZDoxLGZ1bGx5Q292ZXJlZDoyLHBhcnRpYWxseUNvdmVyZWQ6MyxlcnJvclNvdXJjZTo0LGVycm9yUGF0aDo1fX19LHt9XSwyMDpbZnVuY3Rpb24oZSx0LG4pe3ZhciBpPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLnJlcGxhY2UoL15ccyt8XHMrJC9nbSwiIil9LG89WyJKYW51YXJ5IiwiRmVicnVhcnkiLCJNYXJjaCIsIkFwcmlsIiwiTWF5IiwiSnVuZSIsIkp1bHkiLCJBdWd1c3QiLCJTZXB0ZW1iZXIiLCJPY3RvYmVyIiwiTm92ZW1iZXIiLCJEZWNlbWJlciJdO3QuZXhwb3J0cz17bm9ybWFsaXplUGF0aDpmdW5jdGlvbihlKXtyZXR1cm4id2luMzIiPT09cHJvY2Vzcy5wbGF0Zm9ybSYmZT9lLnJlcGxhY2UoL1xcL2csIi8iKTplfSxwYXJzZUtleTpmdW5jdGlvbihlKXt2YXIgdD17fTtpZihlKXt2YXIgbj1lLnNwbGl0KCI6Iik7Mj09PW4ubGVuZ3RoJiYoZT1pKG5bMV0pKX12YXIgcj1uZXcgQnVmZmVyKGUsImJhc2U2NCIpLnRvU3RyaW5nKCkuc3BsaXQoIlxuIik7dC5saWNlbnNlZU5hbWU9clswXSx0LmxpY2Vuc2VUYWdzPXJbMV07dmFyIGE9dC5saWNlbnNlVGFncy5zcGxpdCgiLCIpO2EubGVuZ3RoPj0xJiYodC5saWNlbnNlZUVtYWlsPWFbMF0pLGEubGVuZ3RoPj0yJiYodC5saWNlbnNlZFByb2R1Y3Q9YVsxXSksdC5leHBpcmF0aW9uRGF0ZVN0cmluZz1yWzJdLHQubGljZW5zZVNpZ25hdHVyZT1yWzNdO3RyeXt2YXIgcz10LmV4cGlyYXRpb25EYXRlU3RyaW5nLnNwbGl0KCIvIik7dC5leHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZD1zWzBdKyIgIitvW3BhcnNlSW50KHNbMV0sMTApLTFdKyIgIitzWzJdfWNhdGNoKGwpe3QuZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQ9dC5leHBpcmF0aW9uRGF0ZVN0cmluZ31yZXR1cm4gdH0sZm9ybWF0OmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUucmVwbGFjZSgvXHsoWzAtOWEtekEtWl9dKylcfS9nLGZ1bmN0aW9uKG4saSxvKXt2YXIgcjtyZXR1cm4ieyI9PT1lW28tMV0mJiJ9Ij09PWVbbytuLmxlbmd0aF0/aToocj10Lmhhc093blByb3BlcnR5KGkpP3RbaV06bnVsbCxudWxsPT09cnx8dm9pZCAwPT09cj8iIjpyKX0pfSx2YWxpZFBhY2thZ2VOYW1lOmZ1bmN0aW9uKGUpe2lmKGUmJiFlLm1hdGNoKC9eXC4vKSYmIWUubWF0Y2goL15fLykmJiEoZS5sZW5ndGg+MjE0fHxlLnRvTG93ZXJDYXNlKCkhPT1lfHwvW34nISgpKl0vLnRlc3QoZS5zcGxpdCgiLyIpLnNsaWNlKC0xKVswXSkpKXtpZihlbmNvZGVVUklDb21wb25lbnQoZSk9PT1lKXJldHVybiBlO3ZhciB0PWUubWF0Y2goL14oPzpAKFteXC9dKz8pW1wvXSk/KFteXC9dKz8pJC8pO2lmKHQpe3ZhciBuPXRbMV0saT10WzJdO2lmKGVuY29kZVVSSUNvbXBvbmVudChuKT09PW4mJmVuY29kZVVSSUNvbXBvbmVudChpKT09PWkpcmV0dXJuIGV9fX19fSx7fV0sMjE6W2Z1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGksbz10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8ZnVuY3Rpb24oKXt2YXIgZT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oZSx0KXtlLl9fcHJvdG9fXz10fXx8ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiYoZVtuXT10W25dKX07cmV0dXJuIGZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gaSgpe3RoaXMuY29uc3RydWN0b3I9dH1lKHQsbiksdC5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooaS5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IGkpfX0oKSxyPWUoIm5ldCIpLGE9ZSgiaHR0cCIpLHM9ZSgidXJsIiksbD1lKCJ3cyIpLlNlcnZlcixjPWUoIi4uL3NlcnZlci9kb2N1bWVudEluRWRpdG9yIikscD1bNTEyMzUsNTEyMzYsNTEyMzcsNTEyMzgsNTEyMzksNTEyNDAsNTEyNDEsNTEyNDIsNTEyNDMsNTEyNDQsNTI3NDIsNTI3NDMsNTI3NDQsNTI3NDUsNTI3NDYsNTI3NDcsNTI3NDgsNTI3NDksNTI3NTAsNTI3NTEsNTM1NzgsNTM1NzksNTM1ODAsNTM1ODEsNTM1ODIsNTM1ODMsNTM1ODQsNTM1ODUsNTM1ODYsNTM1ODddLGQ9NTEyNDUsdT0nPCFET0NUWVBFIGh0bWw+XG48aHRtbCBsYW5nPSJlbiI+XG48aGVhZD5cbiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+XG4gICAgPGxpbmsgaWQ9ImZhdmljb24iIHJlbD0iaWNvbiIgaHJlZj0iaHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLmljbyIgdHlwZT0iaW1hZ2UveC1pY29uIi8+XG4gICAgPGxpbmsgaWQ9InNob3J0Y3V0IiByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Imh0dHBzOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPlxuICAgIDxzdHlsZT5cbiAgICAgICAgaHRtbCxcbiAgICAgICAgYm9keSB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgfVxuICAgIDwvc3R5bGU+XG48L2hlYWQ+XG48Ym9keSBzdHlsZT0ibWFyZ2luOjBweDtwYWRkaW5nOjBweDtvdmVyZmxvdzpoaWRkZW47Ij5cbjxzY3JpcHQ+XG4gIHRyeSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCdtZXNzYWdlXCcsIGZ1bmN0aW9uIChtKSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAobS5kYXRhLnRpdGxlKSB7XG4gICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBtLmRhdGEudGl0bGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG0uZGF0YS5zdGF0dXMpIHtcbiAgICAgICAgICBpZiAobS5kYXRhLnN0YXR1cy5wYXNzaW5nKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcJ2Zhdmljb25cJykuc2V0QXR0cmlidXRlKFwnaHJlZlwnLCBcJ2h0dHBzOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi5pY29cJyk7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcJ3Nob3J0Y3V0XCcpLnNldEF0dHJpYnV0ZShcJ2hyZWZcJywgXCdodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24uaWNvXCcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcJ2Zhdmljb25cJykuc2V0QXR0cmlidXRlKFwnaHJlZlwnLCBcJ2h0dHBzOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi1hbHQuaWNvXCcpO1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCdzaG9ydGN1dFwnKS5zZXRBdHRyaWJ1dGUoXCdocmVmXCcsIFwnaHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLWFsdC5pY29cJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICB9XG4gICAgfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgfVxuPC9zY3JpcHQ+XG48aWZyYW1lIHNyYz0iaHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcCIgZnJhbWVib3JkZXI9IjAiIHN0eWxlPSJvdmVyZmxvdzpoaWRkZW47aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJSIgaGVpZ2h0PSIxMDAlIiB3aWR0aD0iMTAwJSI+PC9pZnJhbWU+XG48L2JvZHk+XG48L2h0bWw+XG4nLGg9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbihuKXt2YXIgbz10LmNhbGwodGhpcyl8fHRoaXMscj1vO3JldHVybiBvLl9maW5kRnJlZVBvcnQoKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiByLl9zdGFydChlLG4pfSlbImNhdGNoIl0oZnVuY3Rpb24oZSl7cmV0dXJuIGNvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBzdGFydCB3YWxsYWJ5IGFwcCBzZXJ2aWNlOiAiKyhlJiZlLm1lc3NhZ2UpKX0pLGk9ZSgiZGVidWciKSgid2FsbGFieTp1aVNlcnZpY2UiKSxyLl9jb25uZWN0aW9ucz1bXSxyLl9vcGVuZWRGaWxlcz17fSxvfXJldHVybiBvKG4sdCksbi5wcm90b3R5cGVbInVpOnN0YXJ0Il09ZnVuY3Rpb24oZSx0KXt0aGlzLl9zZW5kKF8uZXh0ZW5kKHt0eXBlOiJ1aTpzdW1tYXJ5In0sdGhpcy5fbW9kZWwuc3VtbWFyeSgpKSx0KTt2YXIgbj10aGlzLl9tb2RlbC5hbGxGaWxlcygpO18uaXNFbXB0eShuKXx8dGhpcy5fc2VuZEFsbEZpbGVzV2l0aENvdmVyYWdlKG4sdCl9LG4ucHJvdG90eXBlWyJ1aTpuYXZpZ2F0ZSJdPWZ1bmN0aW9uKGUpe2UubGluZT1wYXJzZUludChlLmxpbmUsMTApLGUuY29sdW1uPXBhcnNlSW50KGUuY29sdW1uLDEwKSxfLmlzTmFOKGUubGluZSkmJihlLmxpbmU9MSksXy5pc05hTihlLmNvbHVtbikmJmRlbGV0ZSBlLmNvbHVtbix0aGlzLmVtaXQoIm1lc3NhZ2UiLF8uZXh0ZW5kKGUse3R5cGU6Im5hdmlnYXRpb25SZXF1ZXN0ZWQifSkpfSxuLnByb3RvdHlwZVsidWk6cnVuVGVzdHMiXT1mdW5jdGlvbihlKXt0aGlzLl9tb2RlbC5fcHJvamVjdC5ydW5UZXN0cyh7dGVzdHM6ZS50ZXN0c30pfSxuLnByb3RvdHlwZVsidWk6b3BlbmVkSW5FZGl0b3IiXT1mdW5jdGlvbihlKXt0aGlzLl9vcGVuZWRGaWxlc1tlLnBhdGhdP3RoaXMuX29wZW5lZEZpbGVzW2UucGF0aF0rKzp0aGlzLl9vcGVuZWRGaWxlc1tlLnBhdGhdPTF9LG4ucHJvdG90eXBlWyJ1aTpjbG9zZWRJbkVkaXRvciJdPWZ1bmN0aW9uKGUpe3RoaXMuX29wZW5lZEZpbGVzW2UucGF0aF0mJnRoaXMuX29wZW5lZEZpbGVzW2UucGF0aF0tLX0sbi5wcm90b3R5cGVbInVpOmNvZGVSZXF1ZXN0ZWQiXT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMsaT10aGlzLl9tb2RlbC5maWxlQ29udGVudEJ5UGF0aChlLnBhdGgpO2kmJmkudGhlbihmdW5jdGlvbihpKXt2YXIgbyxyPW5ldyBjLGE9bi5fbW9kZWwuZmlsZUJ5UGF0aChlLnBhdGgpLHM9W10sbD1bXTthJiZhLmluc3RydW1lbnRlZCgpJiYoci51cGRhdGUoXy52YWx1ZXMoYS5yYW5nZXMoKSksITEsITApLGw9ci5hbGxMaW5lcygpLmxpbmVzfHxbXSxzPW4uX21vZGVsLnVuY292ZXJlZFJlZ2lvbnNCeVJlcXVlc3Qoe2ZpbGU6ZS5wYXRofSl8fFtdLG89bi5fcmVwb3J0RmlsZUNvdmVyYWdlKGEpKSxuLl9zZW5kKHt0eXBlOiJ1aTpjb2RlIixjb3JyZWxhdGlvbklkOmUuY29ycmVsYXRpb25JZCxjb2RlOmkudG9TdHJpbmcoKSxsaW5lczpsLHVuY292ZXJlZFJlZ2lvbnM6cyxjb3ZlcmFnZTpvfSx0KX0pfSxuLnByb3RvdHlwZVsidWk6dGVzdHM6cmVzdWx0c1JlcXVlc3RlZCJdPWZ1bmN0aW9uKGUsdCl7dC5fYWxsb3dlZFRvU2VuZFRlc3RSZXN1bHRzPSEwLHRoaXMuX3NlbmRUZXN0UmVzdWx0cyh2b2lkIDAsdCl9LG4ucHJvdG90eXBlWyJ1aTp0ZXN0czpyZXN1bHRzQWJhbmRvbmVkIl09ZnVuY3Rpb24oZSx0KXt0Ll9hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHM9ITF9LG4ucHJvdG90eXBlWyJtb2RlbDp0ZXN0RmlsZURlbGV0ZWQiXT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO18uZWFjaCh0aGlzLl9jb25uZWN0aW9ucyxmdW5jdGlvbihuKXtuLl9hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHMmJnQuX3NlbmQoe3R5cGU6InVpOnRlc3RzOnNvbWVSZXN1bHRzVXBkYXRlZCIsZmlsZXM6W3twYXRoOmUuZmlsZS5wYXRoLGFjdGlvbjoiZGVsZXRlZCJ9XX0sbil9KX0sbi5wcm90b3R5cGVbIm1vZGVsOmFsbEZpbGVzIl09ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztfLmVhY2godGhpcy5fY29ubmVjdGlvbnMsZnVuY3Rpb24obil7bi5fYWxsb3dlZFRvU2VuZEFsbEZpbGVzJiZ0Ll9zZW5kQWxsRmlsZXNXaXRoQ292ZXJhZ2UoXy5tYXAoZS5maWxlcyxmdW5jdGlvbihlKXtyZXR1cm57cGF0aDplLnBhdGgsaWQ6ZS5pZH19KSxuKX0pfSxuLnByb3RvdHlwZVsibW9kZWw6ZmlsZUFkZGVkIl09ZnVuY3Rpb24oZSl7dGhpcy5fc2VuZCh7dHlwZToidWk6ZmlsZXMiLGZpbGVzOlt7YWN0aW9uOiJhZGRlZCIscGF0aDplLmZpbGUucGF0aCxpZDplLmZpbGUuaWQsdGVzdDplLmZpbGUudGVzdHx8dm9pZCAwfV19KX0sbi5wcm90b3R5cGVbIm1vZGVsOmZpbGVDaGFuZ2VkIl09ZnVuY3Rpb24oZSl7dGhpcy5fc2VuZCh7dHlwZToidWk6ZmlsZXMiLGZpbGVzOlt7YWN0aW9uOiJjaGFuZ2VkIixwYXRoOmUuZmlsZS5wYXRoLGlkOmUuZmlsZS5pZH1dfSl9LG4ucHJvdG90eXBlWyJtb2RlbDpmaWxlRGVsZXRlZCJdPWZ1bmN0aW9uKGUpe3RoaXMuX3NlbmQoe3R5cGU6InVpOmZpbGVzIixmaWxlczpbe2FjdGlvbjoiZGVsZXRlZCIscGF0aDplLmZpbGUucGF0aCxpZDplLmZpbGUuaWR9XX0pfSxuLnByb3RvdHlwZVsibW9kZWw6dGVzdHNFeGVjdXRlZCJdPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aWYodGhpcy5fc2VuZChfLmV4dGVuZCh7dHlwZToidWk6c3VtbWFyeSJ9LHRoaXMuX21vZGVsLnN1bW1hcnkoKSkpLF8uZWFjaCh0aGlzLl9jb25uZWN0aW9ucyxmdW5jdGlvbihuKXtuLl9hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHMmJnQuX3NlbmRUZXN0UmVzdWx0cyhlLG4pfSksIV8uaXNFbXB0eShlLmFsbEFmZmVjdGVkRmlsZXMpKXt2YXIgbj1bXSxpPV8ucmVkdWNlKGUuYWxsQWZmZWN0ZWRGaWxlcyxmdW5jdGlvbihlLGkpe3ZhciBvPXQuX3JlcG9ydEZpbGVDb3ZlcmFnZShpKTtyZXR1cm4gbyYmby52YWx1ZUNoYW5nZWQmJihkZWxldGUgby52YWx1ZUNoYW5nZWQsZVtpLmtleSgpXT1vKSx0Ll9vcGVuZWRGaWxlc1tpLnBhdGgoKV0mJm4ucHVzaCh7YWN0aW9uOiJhZmZlY3RlZCIscGF0aDppLnBhdGgoKSxpZDppLmtleSgpLHRlc3Q6aS5pc1Rlc3RGaWxlKCl8fHZvaWQgMH0pLGV9LHt9KTtfLmlzRW1wdHkoaSl8fHRoaXMuX3NlbmQoe3R5cGU6InVpOmNvdmVyYWdlQ2hhbmdlZCIsY2hhbmdlczppfSksXy5pc0VtcHR5KG4pfHx0aGlzLl9zZW5kKHt0eXBlOiJ1aTpmaWxlcyIsZmlsZXM6bn0pfX0sbi5wcm90b3R5cGUuX3JlcG9ydEZpbGVDb3ZlcmFnZT1mdW5jdGlvbihlKXtpZihlKXt2YXIgdCxuPWUuY292ZXJhZ2UoKTtyZXR1cm4obj49MHx8ZS5fbGF0ZXN0UmVwb3J0ZWRDb3ZlcmFnZVZhbHVlPj0wKSYmKHQ9e3ZhbHVlOm4sbG93Om48dGhpcy5fbW9kZWwubG93Q292ZXJhZ2VUaHJlc2hvbGQoKSxyYW5nZXM6e2NvdmVyZWQ6ZS5udW1iZXJPZkNvdmVyZWRSYW5nZXMoKSxhbGw6ZS5udW1iZXJPZkFsbFJhbmdlcygpfSx2YWx1ZUNoYW5nZWQ6ZS5fbGF0ZXN0UmVwb3J0ZWRDb3ZlcmFnZVZhbHVlIT09bnx8dm9pZCAwfSxuPj0wfHwodC5ub3RDb3ZlcmVkPSEwKSxlLl9sYXRlc3RSZXBvcnRlZENvdmVyYWdlVmFsdWU9biksdH19LG4ucHJvdG90eXBlLl9zZW5kQWxsRmlsZXNXaXRoQ292ZXJhZ2U9ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzO3QuX2FsbG93ZWRUb1NlbmRBbGxGaWxlcz0hMSx0aGlzLl9zZW5kKHt0eXBlOiJ1aTpmaWxlcyIsZmlsZXM6ZS5tYXAoZnVuY3Rpb24oZSl7dmFyIHQ9bi5fbW9kZWwuZmlsZUJ5SWQoZS5pZCk7cmV0dXJue2FjdGlvbjoiYWRkZWQiLHBhdGg6ZS5wYXRoLGlkOmUuaWQsdGVzdDp0JiZ0LmlzVGVzdEZpbGUoKXx8dm9pZCAwLGNvdmVyYWdlOm4uX3JlcG9ydEZpbGVDb3ZlcmFnZSh0KX19KX0sdCl9LG4ucHJvdG90eXBlLl9zZW5kVGVzdFJlc3VsdHM9ZnVuY3Rpb24oZSx0KXt2YXIgbixpLG8scj0ic29tZVJlc3VsdHNVcGRhdGVkIjtlPyhlLmZ1bGxSdW4mJihyPSJhbGxSZXN1bHRzVXBkYXRlZCIpLG49ZS5jaGFuZ2VkLGk9ZS5leGVjdXRlZCxvPWUuZmlyc3RGYWlsaW5nT3JTaW5nbGVFeGVjdXRlZFRlc3QpOihyPSJhbGxSZXN1bHRzVXBkYXRlZCIsbj10aGlzLl9tb2RlbC5hbGxUZXN0RmlsZXMoKSksdGhpcy5fc2VuZCh7dHlwZToidWk6dGVzdHM6IityLGZpbGVzOnRoaXMuX2NyZWF0ZVRlc3RSZXN1bHRzKG4sbywiY2hhbmdlZCIpLmNvbmNhdCh0aGlzLl9jcmVhdGVUZXN0UmVzdWx0cyhpLG8sImV4ZWN1dGVkIikpfSx0KX0sbi5wcm90b3R5cGUuX2NyZWF0ZVRlc3RSZXN1bHRzPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT10aGlzLG89Xy5yZWR1Y2UodGhpcy5fbW9kZWwuZ2xvYmFsRXJyb3JzKCksZnVuY3Rpb24oZSx0KXt2YXIgbjtpZihfLmVhY2godC5zdGFjaygpLGZ1bmN0aW9uKGUpe3ZhciB0PWUuZmlsZUlkKCk7aWYodCl7dmFyIG89aS5fbW9kZWwuZmlsZUJ5SWQodCk7aWYoby5pc1Rlc3RGaWxlKCkpcmV0dXJuIG49bywhMX19KSxuKXt2YXIgbz1lW24ua2V5KCldPWVbbi5rZXkoKV18fFtdO28ucHVzaCh7bWVzc2FnZTp0Lm1lc3NhZ2UoKSxzdGFjazpfLm1hcCh0LnN0YWNrKCksZnVuY3Rpb24oZSl7cmV0dXJuIGkuX2J1aWxkTG9jYXRpb24oZSxlLmZpbGVQYXRoKCkpfSl9KX1yZXR1cm4gZX0se30pfHx7fTtyZXR1cm4gXy5tYXAoZSxmdW5jdGlvbihlKXt2YXIgcj17fTtyZXR1cm4gXy5lYWNoKGUub3duVGVzdHMoKSxmdW5jdGlvbihlKXt2YXIgbj1lLnBhdGgoKSxvPSI6IitfLmxhc3QobiksYT1yO24ubGVuZ3RoPjEmJl8uZWFjaChfLnRha2UobixuLmxlbmd0aC0xKSxmdW5jdGlvbihlKXtlPSI6IitlO3ZhciB0PWFbZV07dHx8KHQ9e30sYVtlXT10KSxhPXR9KTt2YXIgcz1fLm1hcChlLmNvdmVyZWRGaWxlcygpLGZ1bmN0aW9uKGUpe3JldHVybiBlLmtleSgpfSk7Xy5pc0VtcHR5KHMpJiYocz12b2lkIDApLGFbb109e2lzVGVzdDohMCxmaXJzdEZhaWxpbmdPclNpbmdsZUV4ZWN1dGVkOmU9PT10fHx2b2lkIDAsbmFtZTpvLnN1YnN0cigxKSx0aW1lOmUudGltZSgpLHNsb3c6ZS5zbG93KCksbGluZTplLnN0YXJ0UmFuZ2UoKT9lLnN0YXJ0UmFuZ2UoKS5zdGFydExpbmUoKToxLGxvZ3M6Xy5tYXAoZS5jb25zb2xlTWVzc2FnZXMoKSxmdW5jdGlvbihlKXt2YXIgdD17bWVzc2FnZTplLnRleHQoKX07cmV0dXJuIGUuZmlsZSgpJiYodC5sb2NhdGlvbj1pLl9idWlsZExvY2F0aW9uKGUsZS5maWxlKCkucGF0aCgpKSksdH0pLGVycm9yczpfLm1hcChlLmVycm9ycygpLGZ1bmN0aW9uKGUpe3JldHVybnttZXNzYWdlOmUubWVzc2FnZSgpLHN0YWNrOl8ubWFwKGUuc3RhY2soKSxmdW5jdGlvbihlKXtyZXR1cm4gaS5fYnVpbGRMb2NhdGlvbihlLGUuZmlsZVBhdGgoKSl9KSxhY3R1YWw6ZS5hY3R1YWwoKSxleHBlY3RlZDplLmV4cGVjdGVkKCl9fSksY292ZXJlZEZpbGVzOnN9fSkse3BhdGg6ZS5wYXRoKCksYWN0aW9uOm4sdGVzdHM6aS5fYnVpbGRBcnJheVRlc3RTdHJ1Y3R1cmUociksZXJyb3JzOm9bZS5rZXkoKV19fSl9LG4ucHJvdG90eXBlLl9idWlsZExvY2F0aW9uPWZ1bmN0aW9uKGUsdCl7dmFyIG49e3BhdGg6dH07cmV0dXJuIGUucmFuZ2UoKT8obi5saW5lPWUucmFuZ2UoKS5zdGFydExpbmUoKSxuLmNvbHVtbj1lLnJhbmdlKCkuc3RhcnRDb2x1bW4oKSk6ZS5saW5lKCkmJihuLmxpbmU9ZS5saW5lKCkpLG4uY29udGV4dD1lLmNvbnRleHQoKSxufSxuLnByb3RvdHlwZS5fYnVpbGRBcnJheVRlc3RTdHJ1Y3R1cmU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gXy5tYXAoZSxmdW5jdGlvbihlLG4pe3JldHVybiBlLmlzVGVzdD09PSEwPyhkZWxldGUgZS5pc1Rlc3QsZSk6e25hbWU6bi5zdWJzdHIoMSksdGVzdHM6dC5fYnVpbGRBcnJheVRlc3RTdHJ1Y3R1cmUoZSl9fSl9LG4ucHJvdG90eXBlLl9zdGFydD1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMsbz1mdW5jdGlvbihlKXtyZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbigpe3ZhciB0PW5bIm1vZGVsOiIrZS50eXBlXTt0JiZ0LmNhbGwobixlKX0pfSxyPWZ1bmN0aW9uKCl7bi5fd3NzPW5ldyBsKHtwb3J0OmUsdmVyaWZ5Q2xpZW50OmZ1bmN0aW9uKGUpe3ZhciB0PSExO3RyeXt2YXIgbj1zLnBhcnNlKGUub3JpZ2luKTt0PSJ3YWxsYWJ5anMuY29tIj09PW4uaG9zdG5hbWV9Y2F0Y2goaSl7fXJldHVybiB0fX0pLG4uX3dzcy5vbigiY29ubmVjdGlvbiIsZnVuY3Rpb24oZSl7aSgiVUkgY2xpZW50IGNvbm5lY3RlZCIpLG4uX21vZGVsPXQsZS5fYWxsb3dlZFRvU2VuZFRlc3RSZXN1bHRzPSExLGUuX2FsbG93ZWRUb1NlbmRBbGxGaWxlcz0hMCwhbi5fY29ubmVjdGlvbnMubGVuZ3RoJiZuLl9tb2RlbC5vbigibWVzc2FnZSIsbyksbi5fY29ubmVjdGlvbnMucHVzaChlKSxlLm9uKCJtZXNzYWdlIixmdW5jdGlvbih0KXt2YXIgbzt0cnl7bz1KU09OLnBhcnNlKHQpfWNhdGNoKHIpe3JldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBkZXNlcmlhbGl6ZSBtZXNzYWdlIGZyb20gd2FsbGFieSBVSTogIit0KyIsICIrKHImJnIubWVzc2FnZSkpfWkoIkluY29taW5nIG1lc3NhZ2UgJXMiLG8udHlwZSk7dmFyIGE9bltvLnR5cGVdO2EmJmEuY2FsbChuLG8sZSl9KSxlLm9uKCJjbG9zZSIsZnVuY3Rpb24oKXtpKCJVSSBjbGllbnQgZGlzY29ubmVjdGVkIiksbi5fY29ubmVjdGlvbnM9bi5fY29ubmVjdGlvbnMuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiB0IT1lfSksIW4uX2Nvbm5lY3Rpb25zLmxlbmd0aCYmbi5fbW9kZWwucmVtb3ZlTGlzdGVuZXIoIm1lc3NhZ2UiLG8pfSksbi5fc2VuZCh7dHlwZToidWk6aGFuZHNoYWtlIixwcm9qZWN0OntuYW1lOm4uX21vZGVsLnByb2plY3ROYW1lKCkscGF0aDpuLl9tb2RlbC5jb25maWdGaWxlUGF0aCgpLGNvbmZpZzpuLl9tb2RlbC5wcm9qZWN0Q29uZmlnKCl9LHZlcnNpb246bi5fbW9kZWwuY29yZVZlcnNpb24oKX0sZSl9KSxpKCJMaXN0ZW5pbmcgcG9ydCAlcyIsZSl9O24uX2NoZWNrUG9ydChkKS50aGVuKGZ1bmN0aW9uKGUpe2lmKGUpdHJ5e24uX2h0dHBTZXJ2ZXI9YS5jcmVhdGVTZXJ2ZXIoZnVuY3Rpb24oZSx0KXt0LndyaXRlSGVhZCgyMDAseyJDb250ZW50LVR5cGUiOiJ0ZXh0L2h0bWwifSksdC53cml0ZSh1KSx0LmVuZCgpfSkub24oImVycm9yIixmdW5jdGlvbigpe3JldHVybiByKCl9KS5vbmNlKCJsaXN0ZW5pbmciLGZ1bmN0aW9uKCl7cmV0dXJuIHIoKX0pLmxpc3RlbihlKX1jYXRjaCh0KXtyKCl9ZWxzZSByKCl9KX0sbi5wcm90b3R5cGUuX3NlbmQ9ZnVuY3Rpb24oZSx0KXt0JiYoInVpOnRlc3RzOmFsbFJlc3VsdHNVcGRhdGVkIj09PWUudHlwZT8odC5fc29tZVJlc3VsdHNSZXNwb25zZVNlcU51bT0wLGUuc2VxPXQuX3NvbWVSZXN1bHRzUmVzcG9uc2VTZXFOdW0rKyk6InVpOnRlc3RzOnNvbWVSZXN1bHRzVXBkYXRlZCI9PT1lLnR5cGUmJihlLnNlcT10Ll9zb21lUmVzdWx0c1Jlc3BvbnNlU2VxTnVtKyspKSxpKCJPdXRnb2luZyBtZXNzYWdlICVzIixlLnR5cGUpO3ZhciBuPUpTT04uc3RyaW5naWZ5KGUpO3Q/dC5zZW5kKG4pOl8uZWFjaCh0aGlzLl9jb25uZWN0aW9ucyxmdW5jdGlvbihlKXtyZXR1cm4gZS5zZW5kKG4pfSl9LG4ucHJvdG90eXBlLl9maW5kRnJlZVBvcnQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBRLmFsbChfLm1hcChwLGZ1bmN0aW9uKHQpe3JldHVybiBlLl9jaGVja1BvcnQodCl9KSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gXy5maW5kKGUsZnVuY3Rpb24oZSl7cmV0dXJuISFlfSl9KS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlfHxRLnJlamVjdChuZXcgRXJyb3IoIkNhbiBub3QgZmluZCBhIGZyZWUgcG9ydCIpKX0pfSxuLnByb3RvdHlwZS5fY2hlY2tQb3J0PWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuKXt2YXIgaT1yLmNyZWF0ZVNlcnZlcigpLm9uY2UoImVycm9yIixmdW5jdGlvbih0KXtyZXR1cm4gbih0JiYiRUFERFJOT1RBVkFJTCI9PT10LmNvZGU/ZTowKX0pLm9uY2UoImxpc3RlbmluZyIsZnVuY3Rpb24oKXtyZXR1cm4gaS5vbmNlKCJjbG9zZSIsZnVuY3Rpb24oKXtyZXR1cm4gbihlKX0pLmNsb3NlKCl9KS5saXN0ZW4oZSx0KX19O3JldHVybiBRLnByb21pc2UodCgiMC4wLjAuMCIpKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlP1EucHJvbWlzZSh0KCIxMjcuMC4wLjEiKSk6MH0pLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIGU/US5wcm9taXNlKHQoIjo6MSIpKTowfSl9LG4ucHJvdG90eXBlLnN0b3A9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX3dzcyYmZS5fd3NzLmNsb3NlKCksZS5faHR0cFNlcnZlciYmZS5faHR0cFNlcnZlci5jbG9zZSgpfSxufShFdmVudEVtaXR0ZXIpO3QuZXhwb3J0cz1ofSx7Ii4uL3NlcnZlci9kb2N1bWVudEluRWRpdG9yIjoxMCxkZWJ1Zzp2b2lkIDAsaHR0cDp2b2lkIDAsbmV0OnZvaWQgMCx1cmw6dm9pZCAwLHdzOnZvaWQgMH1dLDIyOltmdW5jdGlvbihlLHQsbil7dmFyIGk9ZSgicGFyc2V1cmwiKSxvPWUoIm1pbWUiKSxyPWUoInBhdGgiKSxhPWUoImdyYWNlZnVsLWZzIikscz17X2RhdGE6e30sc2V0OmZ1bmN0aW9uKGUsdCl7dGhpcy5fZGF0YVtlXT10fSxnZXQ6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2RhdGFbZV19fTt0LmV4cG9ydHM9e2NyZWF0ZTpmdW5jdGlvbih0LG4sbCl7dmFyIGM9ZSgiZGVidWciKSgid2FsbGFieTptaWRkbGV3YXJlIikscD0hbjtyZXR1cm4gZnVuY3Rpb24oZSxkKXt2YXIgdT1pKGUpLnBhdGhuYW1lOyIvIj09PXUmJih1PSIiKSxjKCJQcmVwYXJpbmcgdG8gc2VydmUgIisodXx8dCkpO3ZhciBoPXIubm9ybWFsaXplKHIuam9pbih0LHUpKSxtPXA/czpuLGY9bS5nZXQoaCksUz1mdW5jdGlvbihlKXtkLnNldCh7IkNhY2hlLUNvbnRyb2wiOiJwdWJsaWMsIG1heC1hZ2U9ODY0MDAiLEV4cGlyZXM6bmV3IERhdGUoRGF0ZS5ub3coKSs4NjRlNSkudG9VVENTdHJpbmcoKX0pLGQudHlwZShvLmxvb2t1cChoLCJ0ZXh0L3BsYWluIikpLGQuc3RhdHVzKDIwMCkuZW5kKGUpfTtfLmlzU3RyaW5nKGYpfHxmIGluc3RhbmNlb2YgQnVmZmVyPyhjKCJTZXJ2aW5nICIrKHV8fHQpKyIgZnJvbSBjYWNoZSIpLFMoZikpOihjKCJTZXJ2aW5nICIrKHV8fHQpKyIgZnJvbSBkaXNrIiksYS5yZWFkRmlsZShoLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU/KGMoIkVycm9yIHdoZW4gcmVhZGluZyBmaWxlICIraCsiLCAiK2UmJmUubWVzc2FnZSksbCYmY29uc29sZS5lcnJvcigiVHJ5aW5nIHRvIGFjY2VzcyBtaXNzaW5nIHJlc291cmNlIG9yIEFQSTogIit1KSx2b2lkIGQuc3RhdHVzKDQwNCkuZW5kKCkpOihtLnNldChoLHQpLHZvaWQgUyh0KSl9KSl9fX19LHtkZWJ1Zzp2b2lkIDAsImdyYWNlZnVsLWZzIjp2b2lkIDAsbWltZTp2b2lkIDAscGFyc2V1cmw6dm9pZCAwLHBhdGg6dm9pZCAwfV0sMjM6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaSxvPShlKCJmcyIpLGUoInBhdGgiKSkscj1lKCJjaGlsZF9wcm9jZXNzIikuc3Bhd24sYT1lKCIuL3J1bldvcmtlclBvb2wiKSxzPWUoIi4vdXRpbHMiKSxsPSIjIyN3cG0jIyMiLGM9ZnVuY3Rpb24odCl7dmFyIG49dGhpcztpPWUoImRlYnVnIikoIndhbGxhYnk6bm9kZVJ1bm5lciIpLG4uX3Byb2plY3Q9dCxuLl9ub2RlUGF0aD10LnNldHRpbmdzKCkuZW52LnJ1bm5lcixuLl9pbml0aWFsaXplcj10LnNldHRpbmdzKCkuYm9vdHN0cmFwLG4uX3RlYXJkb3duPXQuc2V0dGluZ3MoKS50ZWFyZG93bixuLl9zbG93VGVzdFRocmVzaG9sZD10LnNldHRpbmdzKCkuc2xvd1Rlc3RUaHJlc2hvbGQsbi5fbm9kZU1vZHVsZXM9by5qb2luKHQuX2xvY2FsUm9vdCwibm9kZV9tb2R1bGVzIik7dHJ5e24uX3JlZ2VuZXJhdG9yUnVudGltZT1vLmpvaW4oby5kaXJuYW1lKHMucmVzb2x2ZU1vZHVsZVBhdGhGcm9tKG4uX25vZGVNb2R1bGVzLCJyZWdlbmVyYXRvci1ydW50aW1lIikpLCJydW50aW1lLmpzIil9Y2F0Y2gocil7fW4uX3BhcmFtcz10LnNldHRpbmdzKCkuZW52LnBhcmFtcyxuLl9yZWN5Y2xlPXQuc2V0dGluZ3MoKS53b3JrZXJzLnJlY3ljbGUsbi5fdGVzdEZyYW1ld29yaz10LnNldHRpbmdzKCkudGVzdEZyYW1ld29yayxuLl9jd2Q9cHJvY2Vzcy5lbnYucXVva2thP3Byb2Nlc3MuY3dkKCk6dC5faW5zdHJ1bWVudGVkUm9vdCxuLl9sb2NhbFByb2plY3REaXI9dC5fbG9jYWxQcm9qZWN0RGlyLG4uX3JlcG9ydFVuaGFuZGxlZFByb21pc2VzPSEhdC5zZXR0aW5ncygpLnJlcG9ydFVuaGFuZGxlZFByb21pc2VzLG4uX3dvcmtlclBvb2w9bmV3IGEobi5fcHJvamVjdCx7Y3JlYXRlOl8uYmluZChuLl9jcmVhdGVOb2RlSW5zdGFuY2UsbikscmVjeWNsZTpfLmJpbmQobi5fcmVjeWNsZU5vZGVJbnN0YW5jZSxuKSxoZWFsdGh5Ol8uYmluZChuLl9pc05vZGVJbnN0YW5jZUhlYWx0aHksbikscHJlcGFyZTpfLmJpbmQobi5fcHJlcGFyZSxuKX0pLG4uX3dvcmtlclBvb2wuc2V0RmlsZVJvb3QodC5faW5zdHJ1bWVudGVkUm9vdCl9O2MucHJvdG90eXBlPXtydW46ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gdC5fd29ya2VyUG9vbC5ydW4oZSl9LGNhbmNlbDpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiB0Ll93b3JrZXJQb29sLmNhbmNlbChlKX0sc3RhcnQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBlLl93b3JrZXJQb29sLnN0YXJ0KCl9LHN0b3A6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX3dvcmtlclBvb2wuc3RvcCgpfSxfY3JlYXRlTm9kZUluc3RhbmNlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztzZXRJbW1lZGlhdGUoZnVuY3Rpb24oKXt0cnl7cHJvY2Vzcy5lbnYucXVva2thJiYobi5fcGFyYW1zPW4uX3Byb2plY3Quc2V0dGluZ3MoKS5lbnYucGFyYW1zLG4uX3JlY3ljbGU9bi5fcHJvamVjdC5zZXR0aW5ncygpLndvcmtlcnMucmVjeWNsZSk7dmFyIG89KG4uX3BhcmFtcy5ydW5uZXI/Xy5tYXAobi5fcGFyYW1zLnJ1bm5lci5yZXBsYWNlKC8iKFteIl0rKSIvZyxmdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKC9ccy9nLCJfc3BhY2VfdG9rZW5fIil9KS5zcGxpdCgiICIpLGZ1bmN0aW9uKGUpe3JldHVybiBfLnRyaW0oZS5yZXBsYWNlKC9fc3BhY2VfdG9rZW5fL2csIiAiKSwnIicpfSk6W10pLmNvbmNhdChbcHJvY2Vzcy5tYWluTW9kdWxlLmZpbGVuYW1lLCJydW5uZXIiLGUsbi5fd29ya2VyUG9vbC5yZWNlaXZlclBvcnQoKSxuLl90ZXN0RnJhbWV3b3JrLnZlcnNpb24sbi5fdGVzdEZyYW1ld29yay5wYXRofHwiIixuLl9ub2RlTW9kdWxlcyxwcm9jZXNzLmVudi5CQUJFTF9FTlYmJm4uX3JlZ2VuZXJhdG9yUnVudGltZXx8IiJdKSxhPV8uZXh0ZW5kKHt9LHByb2Nlc3MuZW52LG4uX3BhcmFtcy5lbnY/Xy5yZWR1Y2Uobi5fcGFyYW1zLmVudi5zcGxpdCgiOyIpLGZ1bmN0aW9uKGUsdCl7dmFyIG49dC5zcGxpdCgiPSIpLGk9Xy50cmltTGVmdChuWzBdKTtyZXR1cm4gZVtpXT10LnN1YnN0cmluZyhuWzBdLmxlbmd0aCsxKSxlfSx7fSk6e30pO2RlbGV0ZSBhLkFUT01fU0hFTExfSU5URVJOQUxfUlVOX0FTX05PREUsZGVsZXRlIGEuRUxFQ1RST05fUlVOX0FTX05PREU7dmFyIHM9e3Byb2Nlc3M6cihuLl9ub2RlUGF0aCxvLHtjd2Q6bi5fY3dkLGVudjphfSksb25Db25uZWN0ZWQ6ZnVuY3Rpb24oZSl7Xy5pc0Z1bmN0aW9uKGUpP3RoaXMuX29uQ29ubmVjdGVkPWU6dGhpcy5fb25Db25uZWN0ZWQmJih0aGlzLl9vbkNvbm5lY3RlZChlKSxkZWxldGUgdGhpcy5fb25Db25uZWN0ZWQsZGVsZXRlIHRoaXMub25Db25uZWN0ZWQpfX07cy5wcm9jZXNzLnN0ZGVyci5vbigiZGF0YSIsZnVuY3Rpb24oZSl7dmFyIHQ9ZS50b1N0cmluZygidXRmOCIpO2koIkVycm9yIGluIHdvcmtlcjogJXMiLHQpLGNvbnNvbGUuZXJyb3IodCl9KSx0KHMpfWNhdGNoKGwpe2koIkVycm9yIHdoaWxlIGNyZWF0aW5nIHdvcmtlciAjJXM6ICVzIixlLGwmJihsLnN0YWNrfHxsLm1lc3NhZ2UpKSx0KCl9fSl9LF9yZWN5Y2xlTm9kZUluc3RhbmNlOmZ1bmN0aW9uKGUpe3RyeXtlLnByb2Nlc3Muc3Rkb3V0LnJlbW92ZUFsbExpc3RlbmVycygiZGF0YSIpLGUucHJvY2Vzcy5zdGRlcnIucmVtb3ZlQWxsTGlzdGVuZXJzKCJkYXRhIil9ZmluYWxseXtlLnByb2Nlc3Mua2lsbCgpfX0sX2lzTm9kZUluc3RhbmNlSGVhbHRoeTpmdW5jdGlvbihlKXtyZXR1cm4gZS5wcm9jZXNzJiZlLnByb2Nlc3MucGlkJiYhZS5wcm9jZXNzLmtpbGxlZCYmIWUucHJvY2Vzcy5zaWduYWwmJm51bGw9PT1lLnByb2Nlc3MuZXhpdENvZGV9LF9wcmVwYXJlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxvPV8ucmFuZG9tSWQoKSxyPW4uX3NhbmRib3hOYW1lKHQsbyk7cmV0dXJuIGkoIlN0YXJ0aW5nIHNhbmRib3ggWyVzXSIsciksUS53aGVuKCkudGhlbihmdW5jdGlvbigpe3JldHVybiBuLl93b3JrZXJQb29sLmNhbmNlbGxlZCgpP1EucmVqZWN0KHtydW5DYW5jZWxsZWQ6ITB9KTooaSgiUHJlcGFyaW5nIHNhbmRib3ggWyVzXSIsciksbi5fd29ya2VyUG9vbC5nZXRXb3JrZXIodCkpfSkudGhlbihmdW5jdGlvbihhKXtyZXR1cm4gaSgiUHJlcGFyZWQgc2FuZGJveCBbJXNdIixyKSxRLndoZW4oe2luc3RhbmNlOntyZXN1bWU6ZnVuY3Rpb24oKXthLmNoYW5uZWwuc2VuZChKU09OLnN0cmluZ2lmeSh7dHlwZToiaW46dHJhY2VyLnJlc3VtZSIsZGF0YTp7fX0pKX0scGluZzpmdW5jdGlvbihlKXt2YXIgdD1fLnVuaXF1ZUlkKCksbj1mdW5jdGlvbihpKXt2YXIgbzt0cnl7bz1KU09OLnBhcnNlKGkpfWNhdGNoKHIpe3JldHVybn0icG9uZyI9PT1vLnR5cGUmJm8uZGF0YT09PXQmJihhLmNoYW5uZWwucmVtb3ZlTGlzdGVuZXIoIm1lc3NhZ2UiLG4pLGUoKSl9O2EuY2hhbm5lbC5vbigibWVzc2FnZSIsbiksYS5jaGFubmVsLnNlbmQoSlNPTi5zdHJpbmdpZnkoe3R5cGU6ImluOnBpbmciLGRhdGE6dH0pKX0sY2xvc2U6ZnVuY3Rpb24oKXtuLl9yZWN5Y2xlPyhuLl93b3JrZXJQb29sLnJlY3ljbGVXb3JrZXIodCksbi5fd29ya2VyUG9vbC5nZXRXb3JrZXIodCkudGhlbihfLm5vb3ApKTphLmNoYW5uZWwuc2VuZChKU09OLnN0cmluZ2lmeSh7dHlwZToiaW46c3RvcCIsZGF0YTp7fX0pKX0sY2xvc2luZzpfLm5vb3Asc3RhcnQ6ZnVuY3Rpb24odCxyKXtpZih0KCJzdWNjZXNzIikpe3RyeXthLnByb2Nlc3Muc3Rkb3V0LnJlbW92ZUFsbExpc3RlbmVycygiZGF0YSIpLGEucHJvY2Vzcy5zdGRvdXQub24oImRhdGEiLGZ1bmN0aW9uKGUpe3RyeXtlPWUmJmUudG9TdHJpbmcoInV0ZjgiKSx+ZS5pbmRleE9mKGwpJiYoZT1lLnNwbGl0KCJcbiIpLF8uZWFjaChlLGZ1bmN0aW9uKGUpe2lmKH5lLmluZGV4T2YobCkpdHJ5e0pTT04ucGFyc2UoZSk7YS5jaGFubmVsLmVtaXQoIm1lc3NhZ2UiLGUpfWNhdGNoKHQpe2koIkVycm9yIHdoaWxlIHByb2Nlc3NpbmcgU1RET1VUIG1lc3NhZ2U6ICIrdC5tZXNzYWdlKX19KSl9Y2F0Y2godCl7aSgiRXJyb3Igd2hpbGUgcHJvY2Vzc2luZyBTVERPVVQgbWVzc2FnZTogIit0Lm1lc3NhZ2UpfX0pfWNhdGNoKHMpe2koIkVycm9yIHdoaWxlIHN1YnNjcmliaW5nIHRvIHByb2Nlc3MgU1RET1VUOiAiK3MubWVzc2FnZSl9YS5wcm9jZXNzLnN0ZGVyci5yZW1vdmVBbGxMaXN0ZW5lcnMoImRhdGEiKSxhLnByb2Nlc3Muc3RkZXJyLm9uKCJkYXRhIixmdW5jdGlvbihlKXtpZihlPWUmJmUudG9TdHJpbmcoInV0ZjgiKSwhZXx8MCE9PWUuaW5kZXhPZigiRGVidWdnZXIgbGlzdGVuaW5nIG9uIHBvcnQiKSl7dmFyIHQ9IiI7aWYofmUuaW5kZXhPZihsKSl7dmFyIG47ZT1lLnNwbGl0KCJcbiIpLF8uZWFjaChlLGZ1bmN0aW9uKGUpe2lmKH5lLmluZGV4T2YobCkpdHJ5e249SlNPTi5wYXJzZShlKX1jYXRjaCh0KXtpKCJFcnJvciB3aGlsZSBwcm9jZXNzaW5nIFNUREVSUiBtZXNzYWdlOiAiK3QubWVzc2FnZSl9fSksbiYmcihuLm1lc3NhZ2Usbi5zdGFjayxuLmFjdHVhbCxuLmV4cGVjdGVkKX1lbHNle2lmKGUpe3ZhciBvPWUuc3BsaXQoIlxuIiksYT1bXTtfLmVhY2gobyxmdW5jdGlvbihlKXtyZXR1cm4hXy5zdGFydHNXaXRoKF8udHJpbUxlZnQoZSksImF0IikmJnZvaWQgYS5wdXNoKGUpfSksdD1hLmpvaW4oIlxuIil9cih0LGUpfX19KTt2YXIgYz17c2Vzc2lvbklkOm8sdGVzdHM6ZS50ZXN0cyxmaWxlczpfLm1hcChlLmFsbEZpbGVzLmNvbmNhdChlLmFsbFRlc3RGaWxlcyksZnVuY3Rpb24oZSl7cmV0dXJue2lkOmUuaWQscmFuZ2VzTGVuZ3RoOmUucmFuZ2VzTGVuZ3RofX0pLHRlc3RGaWxlczpfLm1hcChlLnRlc3RGaWxlc1RvTG9hZCxmdW5jdGlvbihlKXt2YXIgdDtpZigwPT09bi5fdGVzdEZyYW1ld29yay52ZXJzaW9uLmluZGV4T2YoImplc3QiKSl7dmFyIGk9bi5fcHJvamVjdC5fZ2V0RmlsZU1ldGFkYXRhQnlJZChlLmlkKTt0PWkmJmkuZ2V0RmlsZUxpbmVNYXAoKX1yZXR1cm57cGF0aDplLnBhdGgsaWQ6ZS5vcmlnaW5hbElkfHxlLmlkLHR5cGU6ZS50eXBlLG9yaWdpbmFsVHlwZTplLm9yaWdpbmFsVHlwZSxjb250ZW50OnByb2Nlc3MuZW52LnF1b2trYT9lLmNvbnRlbnQ6dm9pZCAwLGxpbmVNYXA6dH19KSxyb290Om4uX2N3ZCxsb2NhbFByb2plY3REaXI6bi5fbG9jYWxQcm9qZWN0RGlyLGZsdXNoQ2FjaGU6ITEsaW5pdGlhbGl6ZXI6bi5faW5pdGlhbGl6ZXIsdGVhcmRvd246bi5fdGVhcmRvd24sc2xvd1Rlc3RUaHJlc2hvbGQ6bi5fc2xvd1Rlc3RUaHJlc2hvbGQsbWFudWFsVGVzdFJ1bjplLm1hbnVhbFJ1bixyZXBvcnRVbmhhbmRsZWRQcm9taXNlczpuLl9yZXBvcnRVbmhhbmRsZWRQcm9taXNlcyxleHByZXNzaW9uc1RvRXZhbHVhdGU6ZS5leHByZXNzaW9uc1RvRXZhbHVhdGV9O2EuY2hhbm5lbC5zZW5kKEpTT04uc3RyaW5naWZ5KHt0eXBlOiJpbjpydW4iLGRhdGE6Y30pKX19fSxuYW1lOnIsc2Vzc2lvbklkOm8sd29ya2VySWQ6dH0pfSl9LF9zYW5kYm94TmFtZTpmdW5jdGlvbihlLHQpe3JldHVybiJ3b3JrZXIgIyIrZSsiLCBzZXNzaW9uICMiK3R9fSx0LmV4cG9ydHM9Y30seyIuL3J1bldvcmtlclBvb2wiOjI2LCIuL3V0aWxzIjoyNyxjaGlsZF9wcm9jZXNzOnZvaWQgMCxkZWJ1Zzp2b2lkIDAsZnM6dm9pZCAwLHBhdGg6dm9pZCAwfV0sMjQ6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaSxvPWUoInBoYW50b20iKSxyPWUoIi4vcnVuV29ya2VyUG9vbCIpLGE9ZSgiLi9icm93c2VyRW52aXJvbm1lbnQiKSxzPSExLGw9ZnVuY3Rpb24odCl7dmFyIG49dGhpcztpPWUoImRlYnVnIikoIndhbGxhYnk6cGhhbnRvbVJ1bm5lciIpLG4uX3Byb2plY3Q9dCxuLl9zY3JlZW5TaG90UmVhZHk9US53aGVuKCEwKSxuLl9wYXJhbXM9dC5zZXR0aW5ncygpLmVudi5wYXJhbXMsbi5fdmlld3BvcnRTaXplPXQuc2V0dGluZ3MoKS5lbnYudmlld3BvcnRTaXplLG4uX2NsZWFyTWVtb3J5Q2FjaGU9dC5zZXR0aW5ncygpLmVudi5jbGVhck1lbW9yeUNhY2hlLG4uX3BoYW50b21qc1BhdGg9dC5zZXR0aW5ncygpLmVudi5ydW5uZXJ8fG4uX3Byb2plY3QuX3BoYW50b21qcyxuLl93b3JrZXJQb29sPW5ldyByKG4uX3Byb2plY3Qse2NyZWF0ZTpfLmJpbmQobi5fY3JlYXRlUGhhbnRvbUluc3RhbmNlLG4pLHJlY3ljbGU6Xy5iaW5kKG4uX3JlY3ljbGVQaGFudG9tSW5zdGFuY2UsbiksaGVhbHRoeTpfLmJpbmQobi5faXNQaGFudG9tSW5zdGFuY2VIZWFsdGh5LG4pLHByZXBhcmU6Xy5iaW5kKG4uX3ByZXBhcmUsbil9KSxuLl9icm93c2VyRW52aXJvbm1lbnQ9bmV3IGEodCxuLl93b3JrZXJQb29sKX07bC5wcm90b3R5cGU9e3J1bjpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiB0Ll93b3JrZXJQb29sLnJ1bihlKX0sX2NyZWF0ZVBoYW50b21JbnN0YW5jZTpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7dHJ5e3ZhciByPXtkbm9kZU9wdHM6e3dlYWs6ITF9fTtuLl9waGFudG9tanNQYXRoJiYoci5iaW5hcnk9bi5fcGhhbnRvbWpzUGF0aCksci5vbkV4aXQ9ZnVuY3Rpb24odCxuKXtyZXR1cm4iU0lHU0VHViIhPT1ufHxzfHwoY29uc29sZS5lcnJvcigiTG9va3MgbGlrZSB0aGUgUGhhbnRvbUpzIHZlcnNpb24gYmVpbmcgdXNlZCBpcyBub3Qgc3VwcG9ydGVkIG9uIHlvdXIgT1MuXG5UcnkgdXNpbmcgYSBkaWZmZXJlbnQgUGhhbnRvbUpzIHZlcnNpb24gKGh0dHBzOi8vd2FsbGFieWpzLmNvbS9kb2NzL2ludGVncmF0aW9uL3BoYW50b21qczIuaHRtbClcbm9yIENocm9taXVtL1Y4IHZpYSBFbGVjdHJvbiBydW5uZXIgKGh0dHBzOi8vd2FsbGFieWpzLmNvbS9kb2NzL2ludGVncmF0aW9uL2VsZWN0cm9uLmh0bWwpIikscz0hMCksaSgiU2lnbmFsIGtpbGxlZCBwaGFudG9tanMgIyVzOiAlcywgZXhpdCBjb2RlOiAlcyIsZSxuLHQpfTt2YXIgYT1bIi0tZGlzay1jYWNoZT15ZXMiLCItLXdlYi1zZWN1cml0eT1mYWxzZSJdO24uX3BhcmFtcy5ydW5uZXImJihhPWEuY29uY2F0KF8uZmlsdGVyKG4uX3BhcmFtcy5ydW5uZXIuc3BsaXQoIiAiKSxmdW5jdGlvbihlKXtyZXR1cm4gZSYmISh+ZS5pbmRleE9mKCItLWRpc2stY2FjaGU9Iil8fH5lLmluZGV4T2YoIi0td2ViLXNlY3VyaXR5PSIpKX0pKSk7dmFyIGw9ITE7YS5wdXNoKGZ1bmN0aW9uKG8pe2lmKCFsKXtpZighbylyZXR1cm4gbD0hMCxpKCJBZGRpdGlvbmFsIGF0dGVtcHQgdG8gY3JlYXRlIHBoYW50b20gaW5zdGFuY2UgIyVzIixlKSxuLl9jcmVhdGVQaGFudG9tSW5zdGFuY2UoZSx0KTtvLnNldCgib25FcnJvciIsZnVuY3Rpb24odCl7aSgiUGhhbnRvbUpzIGZhaWx1cmU6ICVzLCByZWN5Y2xpbmcgcGhhbnRvbSBpbnN0YW5jZSAjJXMiLHQsZSksbi5fd29ya2VyUG9vbC5yZWN5Y2xlV29ya2VyKGUpfSksbD0hMCx0KG8pfX0pLGEucHVzaChyKSxvLmNyZWF0ZS5hcHBseShvLGEpfWNhdGNoKGMpe2koIkVycm9yIHdoaWxlIGNyZWF0aW5nIHdvcmtlciAjJXM6ICVzIixlLGMmJihjLnN0YWNrfHxjLm1lc3NhZ2UpKSx0KCl9fSxfcmVjeWNsZVBoYW50b21JbnN0YW5jZTpmdW5jdGlvbihlKXtlLmV4aXQoKSxlLnByb2Nlc3Mua2lsbCgpfSxfaXNQaGFudG9tSW5zdGFuY2VIZWFsdGh5OmZ1bmN0aW9uKGUpe3JldHVybiBlLnByb2Nlc3MmJmUucHJvY2Vzcy5waWQmJiFlLnByb2Nlc3Mua2lsbGVkJiYhZS5wcm9jZXNzLnNpZ25hbCYmbnVsbD09PWUucHJvY2Vzcy5leGl0Q29kZX0sX3ByZXBhcmU6ZnVuY3Rpb24odCxuKXt2YXIgbz10aGlzLHI9Xy5yYW5kb21JZCgpLGE9by5fYnJvd3NlckVudmlyb25tZW50LnNhbmRib3hOYW1lKG4scik7cmV0dXJuIGkoIlN0YXJ0aW5nIHNhbmRib3ggWyVzXSIsYSksUS53aGVuKCkudGhlbihmdW5jdGlvbigpe3JldHVybiBvLl93b3JrZXJQb29sLmNhbmNlbGxlZCgpP1EucmVqZWN0KHtydW5DYW5jZWxsZWQ6ITB9KTooaSgiUHJlcGFyaW5nIHNhbmRib3ggWyVzXSIsYSksUS5hbGwoW28uX2dldFBhZ2Uobiksby5fYnJvd3NlckVudmlyb25tZW50LnByZXBhcmVTYW5kYm94KHQscixuKV0pKX0pLnRoZW4oZnVuY3Rpb24ocyl7aSgiUHJlcGFyZWQgc2FuZGJveCBbJXNdIixhKTt2YXIgbD1zWzBdLGM9c1sxXTtyZXR1cm4gUS53aGVuKHtpbnN0YW5jZTp7cmVzdW1lOmZ1bmN0aW9uKCl7bC5ldmFsdWF0ZShmdW5jdGlvbigpeyRfJHRyYWNlci5yZXN1bWUoKX0pfSxwaW5nOmZ1bmN0aW9uKGUpe2wuZXZhbHVhdGUoZnVuY3Rpb24oKXt9LGUpfSxjbG9zZTpmdW5jdGlvbigpe3Q9bnVsbCxsLnN0b3AmJmwuc3RvcCgpLGwuY2xvc2UoKX0sY2xvc2luZzpmdW5jdGlvbigpe28uX2NhcHR1cmVTY3JlZW5TaG90KHQuc2NyZWVuLGwpfSxzdGFydDpmdW5jdGlvbihuLGkpe28uX2NsZWFyTWVtb3J5Q2FjaGUmJmwub25SZXNvdXJjZVJlcXVlc3RlZChmdW5jdGlvbih0LG4saSl7dHJ5e3ZhciBvPWdsb2JhbC5fdXJsVXRpbD1nbG9iYWwuX3VybFV0aWx8fGUoInVybCIpLHI9dC51cmw7aWYoIXIpcmV0dXJuO2lmKDA9PT1yLmluZGV4T2YoImRhdGE6IikpcmV0dXJuO2lmKH5yLmluZGV4T2YoIndhbGxhYnlGaWxlSWQiKSlyZXR1cm47dmFyIGE9by5wYXJzZSh0LnVybCkscz0iLyI9PT1hLnBhdGhuYW1lLmNoYXJBdCgwKT9hLnBhdGhuYW1lLnN1YnN0cigxKTphLnBhdGhuYW1lLGM9cyYmaVtzXTtpZighYylyZXR1cm47dmFyIHA9YS5zZWFyY2gmJmEuc2VhcmNoLmxlbmd0aDtuLmNoYW5nZVVybChyKyhwPyImIjoiPyIpK2MudHMrIiZ3YWxsYWJ5RmlsZUlkPSIrYy5pZCksbC5jbGVhck1lbW9yeUNhY2hlKCl9Y2F0Y2goZCl7Y29uc29sZS5sb2coZCYmZC5tZXNzYWdlKX19LF8ubm9vcCx0LmFsbEZpbGVzSGFzaCksbC5zZXQoIm9uRXJyb3IiLGkpLGwub3BlbihjLGZ1bmN0aW9uKGUpe24oZSkmJmwuZXZhbHVhdGUoZnVuY3Rpb24oKXskXyR0cmFjZXIuc3RhcnQoKX0pfSl9fSxuYW1lOmEsc2Vzc2lvbklkOnIsd29ya2VySWQ6bn0pfSl9LGNhbmNlbDpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiB0Ll93b3JrZXJQb29sLmNhbmNlbChlKX0sc3RhcnQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBlLl93b3JrZXJQb29sLnN0YXJ0KGUuX2Jyb3dzZXJFbnZpcm9ubWVudC53ZWJBcHAoKSl9LHN0b3A6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX3dvcmtlclBvb2wuc3RvcCgpfSxfY2FwdHVyZVNjcmVlblNob3Q6ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLGk9US5kZWZlcigpO3RyeXt0LnJlbmRlcihlLGZ1bmN0aW9uKCl7aS5yZXNvbHZlKCl9KSxuLl9zY3JlZW5TaG90UmVhZHk9aS5wcm9taXNlfWNhdGNoKG8pe2kucmVqZWN0KG5ldyBFcnJvcigiRmFpbGVkIHRvIHJlbmRlciB0ZXN0IHJ1biBzY3JlZW4gc2hvdCIpKSxjb25zb2xlLmVycm9yKCJGYWlsZWQgdG8gcmVuZGVyIHRlc3QgcnVuIHNjcmVlbiBzaG90IixvLm1lc3NhZ2UpfX0sX2dldFBhZ2U6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gdC5fd29ya2VyUG9vbC5nZXRXb3JrZXIoZSkudGhlbihmdW5jdGlvbihuKXtyZXR1cm4gdC5fd29ya2VyUG9vbC5jYW5jZWxsZWQoKT9RLnJlamVjdCh7cnVuQ2FuY2VsbGVkOiEwfSk6KGkoIkNyZWF0aW5nIHBhZ2UgZm9yIHdvcmtlciAjIitlKSx0Ll9jcmVhdGVQYWdlKG4sZSkpfSl9LF9jcmVhdGVQYWdlOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztyZXR1cm4gUS5wcm9taXNlKGZ1bmN0aW9uKG8scil7dmFyIGE9ITEscz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YXx8KGwoKSxuLl93b3JrZXJQb29sLnJlY3ljbGVXb3JrZXIodCksaSgiUGhhbnRvbSBwYWdlIGlzIG5vdCBjcmVhdGVkIGluIHRpbWUsIHJlY3ljbGluZyBpdCIpLHIoe3J1bkNhbmNlbGxlZDohMCxyZXJ1bjohMH0pKX0sNDAwKSxsPWZ1bmN0aW9uKCl7YT0hMCxjbGVhclRpbWVvdXQocyl9O3RyeXtlLmNyZWF0ZVBhZ2UoZnVuY3Rpb24oZSl7YXx8KGwoKSxpKCJQaGFudG9tIHBhZ2UgY3JlYXRlZCIpLGUuc2V0KCJ2aWV3cG9ydFNpemUiLG4uX3ZpZXdwb3J0U2l6ZXx8e3dpZHRoOjgwMCxoZWlnaHQ6NjAwfSksbyhlKSl9KX1jYXRjaChjKXtsKCkscihjKX19KX19LHQuZXhwb3J0cz1sfSx7Ii4vYnJvd3NlckVudmlyb25tZW50IjoxLCIuL3J1bldvcmtlclBvb2wiOjI2LGRlYnVnOnZvaWQgMCxwaGFudG9tOnZvaWQgMCx1cmw6dm9pZCAwfV0sMjU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiBpKGUpe3RoaXMucHJvY2Vzcz1yLmZvcmsoZSxbIndvcmtlciJdKSx0aGlzLnBpZD10aGlzLnByb2Nlc3MucGlkLHRoaXMuc3RhdHVzPVdvcmtlclN0YXRlLlNUQVJUSU5HLHRoaXMucHJvY2Vzcy5vbmNlKCJtZXNzYWdlIix0aGlzLm9uUmVhZHkuYmluZCh0aGlzKSksYS5FdmVudEVtaXR0ZXIuY2FsbCh0aGlzKX1mdW5jdGlvbiBvKGUsdCl7ZnVuY3Rpb24gbigpe3ZhciB0PW5ldyBpKGUpO3Qub24oInJlYWR5IixvLl9ydW4uYmluZChvKSksdC5wcm9jZXNzLm9uKCJleGl0IixmdW5jdGlvbihlKXtpZigwIT09ZSl7Zm9yKHZhciBpPTA7aTxvLndvcmtlcnMubGVuZ3RoO2krKylvLndvcmtlcnNbaV0ucGlkPT09dC5waWQmJm8ud29ya2Vycy5zcGxpY2UoaSwxKTtuKCl9fSksby53b3JrZXJzLnB1c2godCl9dGhpcy53b3JrZXJzPVtdLHRoaXMucXVldWU9W107dmFyIG89dGhpczt0PXR8fHMuY3B1cygpLmxlbmd0aDtmb3IodmFyIHI9MDtyPHQ7cisrKW4oKX12YXIgcj1lKCJjaGlsZF9wcm9jZXNzIiksYT1lKCJldmVudHMiKSxzPWUoIm9zIiksbD1lKCJ1dGlsIik7V29ya2VyU3RhdGU9e1NUQVJUSU5HOiJTVEFSVElORyIsUkVBRFk6IlJFQURZIixCVVNZOiJCVVNZIn0sbC5pbmhlcml0cyhpLGEuRXZlbnRFbWl0dGVyKSxpLnByb3RvdHlwZS5vblJlYWR5PWZ1bmN0aW9uKCl7dGhpcy5zdGF0dXM9PT1Xb3JrZXJTdGF0ZS5TVEFSVElORyYmKHRoaXMuc3RhdHVzPVdvcmtlclN0YXRlLlJFQURZLHRoaXMuZW1pdCgicmVhZHkiLHRoaXMpKX0saS5wcm90b3R5cGUub25NZXNzYWdlPWZ1bmN0aW9uKGUsdCl7ZSh0KSx0aGlzLnN0YXR1cz1Xb3JrZXJTdGF0ZS5SRUFEWSx0aGlzLmVtaXQoInJlYWR5Iix0aGlzKX0saS5wcm90b3R5cGUuc2VuZD1mdW5jdGlvbihlLHQpe3RoaXMuc3RhdHVzPVdvcmtlclN0YXRlLkJVU1ksdGhpcy5lbWl0KCJidXN5IiksdGhpcy5wcm9jZXNzLm9uY2UoIm1lc3NhZ2UiLHRoaXMub25NZXNzYWdlLmJpbmQodGhpcyx0KSksdGhpcy5wcm9jZXNzLnNlbmQoZSl9LG8ucHJvdG90eXBlLmVucXVldWU9ZnVuY3Rpb24oZSx0KXt0aGlzLnF1ZXVlLnB1c2goe3Rhc2s6ZSxjYWxsYmFjazp0fSkscHJvY2Vzcy5uZXh0VGljayh0aGlzLl9ydW4uYmluZCh0aGlzKSl9LG8ucHJvdG90eXBlLnN0b3A9ZnVuY3Rpb24oKXtfLmVhY2godGhpcy53b3JrZXJzLGZ1bmN0aW9uKGUpe2UucHJvY2Vzcy5zZW5kKHt0eXBlOiJleGl0In0pfSl9LG8ucHJvdG90eXBlLl9ydW49ZnVuY3Rpb24oZSl7aWYoMCE9PXRoaXMucXVldWUubGVuZ3RoKXtpZighZSlmb3IodmFyIHQ9MDt0PHRoaXMud29ya2Vycy5sZW5ndGg7dCsrKWlmKHRoaXMud29ya2Vyc1t0XS5zdGF0dXM9PT1Xb3JrZXJTdGF0ZS5SRUFEWSl7ZT10aGlzLndvcmtlcnNbdF07YnJlYWt9aWYoZSl7dmFyIG49dGhpcy5xdWV1ZS5zaGlmdCgpO2Uuc2VuZChuLnRhc2ssbi5jYWxsYmFjayl9fX0sdC5leHBvcnRzPXtfcXVldWU6dm9pZCAwLHN0YXJ0OmZ1bmN0aW9uKGUpe3RoaXMuX3F1ZXVlfHwodGhpcy5fcXVldWU9bmV3IG8oZSkpfSxzdGFydGVkOmZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLl9xdWV1ZX0scnVuOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIHQuX3F1ZXVlP1EucHJvbWlzZShmdW5jdGlvbihuLGkpe3RyeXt0Ll9xdWV1ZS5lbnF1ZXVlKGUsZnVuY3Rpb24oZSl7bihlKX0pfWNhdGNoKG8pe2kobyl9fSk6US5yZWplY3QobmV3IEVycm9yKCJQcm9jZXNzb3IgcG9vbCBpcyBub3Qgc3RhcnRlZCIpKX0sc3RvcDpmdW5jdGlvbigpe3RoaXMuX3F1ZXVlJiYodGhpcy5fcXVldWUuc3RvcCgpLGRlbGV0ZSB0aGlzLl9xdWV1ZSl9fX0se2NoaWxkX3Byb2Nlc3M6dm9pZCAwLGV2ZW50czp2b2lkIDAsb3M6dm9pZCAwLHV0aWw6dm9pZCAwfV0sMjY6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaSxvPWUoIm9zIikscj1lKCJwYXRoIiksYT1lKCJodHRwIikscz1lKCIuL3V0aWxzIiksbD1lKCJ3cyIpLlNlcnZlcixjPS9ed2luLy50ZXN0KHByb2Nlc3MucGxhdGZvcm0pLHA9NWUzLGQ9MjAwLHU9IiZ3YWxsYWJ5RmlsZUlkPSIsaD0iV2FsbGFieS5qcyBjYWNoZSBpcyBjb3JydXB0ZWQsIHBsZWFzZSByZXN0YXJ0IHdhbGxhYnkuanMiLG09ZnVuY3Rpb24odCxuKXt2YXIgbz10aGlzO2k9ZSgiZGVidWciKSgid2FsbGFieTp3b3JrZXJzIiksby5fcHJvamVjdD10LG8uX29wdHM9dC5zZXR0aW5ncygpLG8uX2V4dGVuc2lvbj1uLHByb2Nlc3MuZW52LnF1b2trYSYmKG8ucmVwb3J0Q29uc29sZU91dHB1dD1mdW5jdGlvbihlKXt2YXIgbj1fLmV4dGVuZCh7fSxlKTt0LnJlc29sdmVMb2dFbnRyeVJhbmdlKG4pLHQuX2VtaXRJbnRlcm5hbCh7dHlwZToiY29uc29sZU91dHB1dCIsZGF0YTpufSl9LG8ucmVwb3J0SW50ZXJtZWRpYXRlUmVzdWx0PWZ1bmN0aW9uKGUpe30pLG8uX3Nlc3Npb25zPXt9LG8uX2V4ZWN1dGVkVGVzdE51bWJlcj0wLG8uX3dvcmtlcnM9e30sby5fY29ubmVjdGluZ1dvcmtlcnM9e30sby5fd29ya2VyUGVuZGluZ0NsZWFudXA9e30sby5fY2FsY3VsYXRlTnVtYmVyT2ZQYXJhbGxlbFdvcmtlcnMoKTtmb3IodmFyIGE9MDthPE1hdGgubWF4KG8uX21heFdvcmtlcnMsby5fbWluV29ya2Vycyk7YSsrKW8uZ2V0V29ya2VyKGEpO28uX25vcm1hbGl6ZWRXYWxsYWJ5U2VydmVyUGF0aD10aGlzLl9wcm9qZWN0Lm5vcm1hbGl6ZVBhdGgoci5kaXJuYW1lKHByb2Nlc3MubWFpbk1vZHVsZS5maWxlbmFtZSkpLG8uX25vcm1hbGl6ZWRMb2NhbFJvb3Q9dGhpcy5fcHJvamVjdC5ub3JtYWxpemVQYXRoKHRoaXMuX3Byb2plY3QuX2xvY2FsUm9vdCl9O20ucHJvdG90eXBlPXtzdGFydDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLG49dC5faHR0cFNlcnZlcj1lP2EuY3JlYXRlU2VydmVyKGUpOmEuY3JlYXRlU2VydmVyKCk7cmV0dXJuIG4ubGlzdGVuKDApLFEucHJvbWlzZShmdW5jdGlvbihlLG8pe24ub24oImxpc3RlbmluZyIsZnVuY3Rpb24oKXt0cnl7dC5fcmVjZWl2ZXJQb3J0PW4uYWRkcmVzcygpLnBvcnQsaSgiV2ViIHNlcnZlciBpcyBsaXN0ZW5pbmcgYXQgIit0Ll9yZWNlaXZlclBvcnQpLHQuX3dzcz1uZXcgbCh7c2VydmVyOm4sdmVyaWZ5Q2xpZW50OmZ1bmN0aW9uKGUpe3JldHVybiBfLnZlcmlmeUxvY2FsT3JpZ2luKGUub3JpZ2luKX19KSx0Ll93c3Mub24oImNvbm5lY3Rpb24iLGZ1bmN0aW9uKGUpe2Uub24oIm1lc3NhZ2UiLGZ1bmN0aW9uKG4pe3ZhciBvO3RyeXtvPUpTT04ucGFyc2Uobil9Y2F0Y2gocil7cmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcigiRmFpbGVkIHRvIGRlc2VyaWFsaXplIG1lc3NhZ2UgZnJvbSB3b3JrZXI6ICIrbisiLCAiKyhyJiZyLm1lc3NhZ2UpKX1pZihvLndvcmtlcil7dmFyIGE9dC5fd29ya2Vyc1tvLndvcmtlcl07aWYoIWEpcmV0dXJuO2lmKGEub25Db25uZWN0ZWQpYS5vbkNvbm5lY3RlZChlKTtlbHNlIGlmKHByb2Nlc3MuZW52LnF1b2trYSYmYS5pbnN0YW5jZSl7aWYoYS5pbnN0YW5jZS5jaGFubmVsKXRyeXthLmluc3RhbmNlLmNoYW5uZWwuY2xvc2UoKSxhLmluc3RhbmNlLmNoYW5uZWwucmVtb3ZlQWxsTGlzdGVuZXJzKCl9Y2F0Y2gocil7fWEuaW5zdGFuY2UuY2hhbm5lbD1lfXRyeXtlLnNlbmQoSlNPTi5zdHJpbmdpZnkoe3R5cGU6ImluOmNvbm5lY3RlZCJ9KSl9Y2F0Y2gocil7Y29uc29sZS5lcnJvcignRmFpbGVkIHRvIHNlbmQgdGhlICJjb25uZWN0ZWQiIG1lc3NhZ2UgdG8gd29ya2VyLiAnK3IubWVzc2FnZSl9fWVsc2UgaWYoby5zZXNzaW9uKXt2YXIgcz10Ll9zZXNzaW9uc1tvLnNlc3Npb25dLGw9IXN8fHMuX2Rpc3Bvc2luZ3x8dC5fY2FuY2VsbGVkO2lmKCJjb25zb2xlIj09PW8udHlwZSYmby5kYXRhKXtpZigiZGVidWdMb2ciPT09by5kYXRhLnR5cGUpcmV0dXJuIHZvaWQgaShvLmRhdGEudGV4dCk7KG8uZGF0YS5zcGVjfHxwcm9jZXNzLmVudi5xdW9ra2EpJiYhbHx8ImF1dG9Mb2ciPT09by5kYXRhLnR5cGV8fGNvbnNvbGUubG9nKCJjb25zb2xlLiIrby5kYXRhLnR5cGUrIjogIitvLmRhdGEudGV4dCl9aWYobClyZXR1cm47dHJ5e3Nbby50eXBlXShvLmRhdGEpfWNhdGNoKHIpe2NvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBwcm9jZXNzIG1lc3NhZ2UgIitvLnR5cGUrIiBmcm9tIHdvcmtlciwgIisociYmci5tZXNzYWdlKSkscy5yZWplY3Qocil9fX0pfSksZSgpfWNhdGNoKHIpe28ocil9fSl9KX0sd2FsbGFieUZpbGVJZFByZWZpeDpmdW5jdGlvbigpe3JldHVybiB1fSxyZWNlaXZlclBvcnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVjZWl2ZXJQb3J0fSxzZXRGaWxlUm9vdDpmdW5jdGlvbihlKXt0aGlzLl9maWxlUm9vdD10aGlzLl9wcm9qZWN0Lm5vcm1hbGl6ZVBhdGgoZSl9LHJ1bjpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiB0Ll9jYW5jZWxsZWQ9ITEsdC5fZXhlY3V0ZWRUZXN0TnVtYmVyPTAsdC5fcnVuUHJpb3JpdHk9ZS5wcmlvcml0eSxlLnJlY3ljbGVCZWZvcmVSdW4mJl8uZWFjaCh0Ll93b3JrZXJzLGZ1bmN0aW9uKGUsbil7dC5yZWN5Y2xlV29ya2VyKG4pfSksaSgiU3RhcnRpbmcgdGVzdCBydW4sIHByaW9yaXR5OiAiK3QuX3J1blByaW9yaXR5KSwoZS5mdWxsUnVuJiZ0Ll9tYXhXb3JrZXJzPjEmJmUudGVzdEZpbGVzVG9Mb2FkLmxlbmd0aD4xP3QuX3J1bkluUGFyYWxsZWwoZSx0Ll9tYXhXb3JrZXJzKTp0Ll9taW5Xb3JrZXJzPjEmJmUudGVzdEZpbGVzVG9Mb2FkLmxlbmd0aD4xJiYhKGUuZnVsbFJ1biYmdC5fbWF4V29ya2Vyczx0Ll9taW5Xb3JrZXJzKT90Ll9ydW5JblBhcmFsbGVsKGUsdC5fbWluV29ya2Vycyk6dC5fZXh0ZW5zaW9uLnByZXBhcmUoZSwwKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiB0Ll9ydW5UZXN0cyhlKX0pKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiB0Ll9leGVjdXRlZFRlc3ROdW1iZXImJmNvbnNvbGUubG9nKCJGaW5pc2hlZCBleGVjdXRpbmcgIit0Ll9leGVjdXRlZFRlc3ROdW1iZXIrIiBhZmZlY3RlZCB0ZXN0KHMpIiksUS53aGVuKGUpfSl9LF9oYW5kbGVFcnJvcjpmdW5jdGlvbihlLHQsbixvLHIsYSxzKXt2YXIgbD10aGlzO2E9PT1zJiYoYT1zPXZvaWQgMCksaSgiU2FuZGJveCAoJXMpIFslc10gZXJyb3I6ICVzIixlLmFjdGl2ZSgpPyJhY3RpdmUiOiJpbmFjdGl2ZSIsdCxuKTt2YXIgYz1sLl9yZXBvcnRhYmxlRXJyb3IobixvKSxwPSJTeW50YXhFcnJvcjogUGFyc2UgZXJyb3IiPT09biYmXy5pc0VtcHR5KG8pO2lmKGwuX2NvcnJ1cHRlZENhY2hlKGMpKXJldHVybiBsLl9wcm9qZWN0LmludmFsaWRhdGVDYWNoZSgpLGUucmVqZWN0KG5ldyBFcnJvcihoKSksdm9pZCBlLnJlY3ljbGVXb3JrZXIoKTtpZihwcm9jZXNzLmVudi5xdW9ra2E/aSgiUnVudGltZSBlcnJvcjogIitjKTpjb25zb2xlLmVycm9yKCJSdW50aW1lIGVycm9yOiAiK2MpLGUuYWN0aXZlKCkpe2lmKGUuc2NoZWR1bGVDb21wbGV0ZUlmTm90QWN0aXZlRm9yKDEwMCksIW8pcmV0dXJuIHZvaWQgZS5yZWplY3QobmV3IEVycm9yKG4pKTtpZighcCl0cnl7dmFyIGQ9e21lc3NhZ2U6bixzdGFjazpfLmlzU3RyaW5nKG8pP286Xy5yZWR1Y2UobyxmdW5jdGlvbihlLHQpe3JldHVybiBlK3QuZmlsZSsiOiIrdC5saW5lKyJcbiJ9LCIiKSxleHRlcm5hbDohMCxhY3R1YWw6YSxleHBlY3RlZDpzfSx1PVtkXTtsLl9wcm9jZXNzVGVzdExvZyh1KSxkLnN0YWNrJiZkLnN0YWNrLmxlbmd0aHx8KH5kLm1lc3NhZ2UuaW5kZXhPZigiQ2Fubm90IGZpbmQgbW9kdWxlIil8fChkLm1lc3NhZ2U9YyksZC5zdGFjaz1bXSksIXImJmUuX2V4ZWN1dGluZ1Rlc3Q/ZS5hZGRUb1Rlc3RMb2coZCk6ZS5fZ2xvYmFsRXJyb3JzLnB1c2goZCl9Y2F0Y2gobSl7ZS5yZWplY3QobmV3IEVycm9yKG4rIiwgIisobSYmbS5tZXNzYWdlKSkpfX19LF9ydW5UZXN0czpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2lmKHQuY2FuY2VsbGVkKCkpcmV0dXJuIFEucmVqZWN0KHtydW5DYW5jZWxsZWQ6ITB9KTtpKCJbJXNdIFJ1bm5pbmcgdGVzdHMgaW4gc2FuZGJveCIsZS5uYW1lKTt2YXIgbj1lLnNlc3Npb25JZCxvPWUud29ya2VySWQ7cmV0dXJuIFEucHJvbWlzZShmdW5jdGlvbihyLGEpe3QuY2FuY2VsbGVkKCkmJmEoe3J1bkNhbmNlbGxlZDohMH0pO3RyeXt2YXIgcz1mdW5jdGlvbigpe3ZhciBpPXQuX2NyZWF0ZVNlc3Npb24obixvLGUuaW5zdGFuY2UscixhKTtlLmluc3RhbmNlLnN0YXJ0KGZ1bmN0aW9uKGUpe3JldHVybiB0LmNhbmNlbGxlZCgpPyhpLnJlamVjdCh7cnVuQ2FuY2VsbGVkOiEwfSksITEpOiJzdWNjZXNzIj09PWV8fChpLnJlamVjdChuZXcgRXJyb3IoIlNhbmRib3ggbG9hZCBmYWlsZWQsIHN0YXR1czogIitlKSksITEpfSxmdW5jdGlvbihlLG8scixhKXt0Ll9oYW5kbGVFcnJvcihpLG4sZSxvLCExLHIsYSl9KX0sbD10Ll93b3JrZXJQZW5kaW5nQ2xlYW51cFtvXTtsPyhpKCJbJXNdIFNhbmRib3ggaXMgd2FpdGluZyBmb3Igd29ya2VyIGNsZWFudXAiLG4pLGwub25Eb25lPWZ1bmN0aW9uKGUpe3JldHVybiB0LmNhbmNlbGxlZCgpPyhpKCJbJXNdIFNhbmRib3ggcnVuIGlzIGNhbmNlbGVkIHdoaWxlIGl0IHdhcyB3YWl0aW5nIGZvciB3b3JrZXIgY2xlYW51cCIsbiksYSh7cnVuQ2FuY2VsbGVkOiEwfSkpOmU/KGkoIlslc10gU2FuZGJveCB3b3JrZXIgcmVxdWlyZXMgcmVjeWNsaW5nIixuKSxhKHtydW5DYW5jZWxsZWQ6ITAscmVydW46ITB9KSk6dm9pZCBzKCl9KTpzKCl9Y2F0Y2goYyl7YShjKX19KS50aGVuKGZ1bmN0aW9uKGUpe2lmKGUuc2Vzc2lvbil7dmFyIG49ZS5zZXNzaW9uLGk9dC5fY3JlYXRlUnVuUmVzdWx0KG4sZS50aW1lKTtyZXR1cm4gXy5lYWNoKF8ua2V5cyhuKSxmdW5jdGlvbihlKXtlJiYiXyI9PT1lWzBdJiYhXy5pc0Z1bmN0aW9uKG5bZV0pJiYiX2Rpc3Bvc2luZyIhPT1lJiZkZWxldGUgbltlXX0pLGRlbGV0ZSBlLnNlc3Npb24sUS53aGVuKGkpfXJldHVybiBRLndoZW4oZSl9KX0sX2NyZWF0ZVJ1blJlc3VsdDpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMsaT1lLl9jb3ZlcmFnZSxvPWUuX2xvYWRpbmdTZXF1ZW5jZSxyPWUuX3Rlc3RzLGE9ZS5fbG9nLHM9ZS5fZ2xvYmFsRXJyb3JzLmNvbmNhdChlLl9leGVjdXRpbmdUZXN0TG9nKTtyZXR1cm4gXy5lYWNoKHMsZnVuY3Rpb24oZSl7cmV0dXJuIG4uX3JlbW92ZUFuc2koZSl9KSxzLmxlbmd0aHx8KHM9dm9pZCAwKSx7Y292ZXJhZ2U6aSx0ZXN0czpyLGxvZzphLGdsb2JhbEVycm9yczpzLGxvYWRpbmdTZXF1ZW5jZTpvLHRpbWU6dH19LF9yZW1vdmVBbnNpOmZ1bmN0aW9uKGUpe3JldHVybiFzLmhhc0Fuc2koZS5tZXNzYWdlKXx8cy5oYXNBbnNpKGUuYWN0dWFsKXx8cy5oYXNBbnNpKGUuZXhwZWN0ZWQpfHwoZS5tZXNzYWdlPXMucmVtb3ZlQW5zaShlLm1lc3NhZ2UpKSxlfSxfcmVwb3J0YWJsZUVycm9yOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztpZihfLmlzU3RyaW5nKHQpKXsKdmFyIGk9e3N0YWNrOnR9O3JldHVybiBuLl9wcm9qZWN0Ll9jbGVhblN0YWNrKGkpLHQ9aS5zdGFja31yZXR1cm4gZX0sY2FuY2VsOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7aWYoIV8uaXNFbXB0eSh0Ll9zZXNzaW9ucykpcmV0dXJuIGU+PXQuX3J1blByaW9yaXR5JiYoXy5lYWNoKHQuX3Nlc3Npb25zLGZ1bmN0aW9uKGUpe2UucmVqZWN0KHtydW5DYW5jZWxsZWQ6ITB9KX0pLHQuX2NhbmNlbGxlZD0hMCxpKCJDYW5jZWxsaW5nIHRlc3QgcnVuLCBjYW5jZWwgcmVxdWVzdGVyIHByaW9yaXR5OiAlcywgY3VycmVudCBydW4gcHJpb3JpdHk6ICVzIixlLHQuX3J1blByaW9yaXR5KSwhMCl9LGNhbmNlbGxlZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jYW5jZWxsZWR9LF9jcmVhdGVTZXNzaW9uOmZ1bmN0aW9uKGUsdCxuLG8scil7dmFyIGE9dGhpcztyZXR1cm4gYS5fc2Vzc2lvbnNbZV09e19jb3ZlcmFnZTp7fSxfdGVzdHM6W10sX2xvYWRpbmdTZXF1ZW5jZTp7fSxfbG9nOltdLF9leGVjdXRpbmdUZXN0TG9nOltdLF9nbG9iYWxFcnJvcnM6W10sX3RvdGFsOjAsX3NraXBwZWQ6MCxfZGlzcG9zaW5nOiExLF9leGNlZWRlZE1heFRlc3RBbGxvd2VkTG9nTGltaXQ6ITEsX29uRmluaXNoZWQ6bi5jbG9zaW5nLF9tZXNzYWdlc1BlclRlc3Q6e30sX2Nsb3NlQnlFcnJvclRpbWVvdXQ6MCxfbG9uZ1J1bm5pbmdXYXJuaW5nVGltZW91dDowLF9sb25nUnVubmluZ1BpbmdUaW1lb3V0OjAsX2V4ZWN1dGluZ0ZpbGVzOnt9LF9leGVjdXRpbmdUZXN0OnZvaWQgMCxzdGFydGVkOmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXM7aSgiWyVzXSBMb2FkZWQgJXMgdGVzdChzKSIsZSx0LnRvdGFsKSx0aGlzLl90b3RhbD10LnRvdGFsLF8uZWFjaCh0LmxvYWRpbmdTZXF1ZW5jZSxmdW5jdGlvbihlKXtlLmxlbmd0aD4xJiYobi5fbG9hZGluZ1NlcXVlbmNlW2VbMF1dPWUuc2xpY2UoMSkpfSl9LGFjdGl2ZTpmdW5jdGlvbigpe3JldHVybiF0aGlzLl9kaXNwb3NpbmcmJiFhLl9jYW5jZWxsZWR9LHNjaGVkdWxlQ29tcGxldGVJZk5vdEFjdGl2ZUZvcjpmdW5jdGlvbihlKXt2YXIgdD10aGlzO2NsZWFyVGltZW91dCh0Ll9jbG9zZUJ5RXJyb3JUaW1lb3V0KSx0Ll9jbG9zZUJ5RXJyb3JUaW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXt0LmNvbXBsZXRlKCl9LGUpfSxhZGRUb1Rlc3RMb2c6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZXhlY3V0aW5nVGVzdExvZ1t0aGlzLl9leGVjdXRpbmdUZXN0TG9nLmxlbmd0aC0xXTt0JiZ0aGlzLl9hcmVMb2dFbnRyeU1lc3NhZ2VzRXF1YWwodC5tZXNzYWdlfHx2b2lkIDAsZS5tZXNzYWdlfHx2b2lkIDApJiZ0LnN0YWNrJiZlLnN0YWNrJiZ0LnN0YWNrLmxlbmd0aD4wJiZlLnN0YWNrLmxlbmd0aD4wJiZfLmlzRXF1YWwoZS5zdGFja1swXSx0LnN0YWNrWzBdKT9lLnN0YWNrLmxlbmd0aD50LnN0YWNrLmxlbmd0aCYmKHQuc3RhY2s9ZS5zdGFjayk6dGhpcy5fZXhlY3V0aW5nVGVzdExvZy5wdXNoKGUpfSxfYXJlTG9nRW50cnlNZXNzYWdlc0VxdWFsOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHZvaWQgMD09PWUmJihlPSIiKSx2b2lkIDA9PT10JiYodD0iIiksZT09PXR8fChhLl9vcHRzLnRlc3RGcmFtZXdvcmsmJmEuX29wdHMudGVzdEZyYW1ld29yay52ZXJzaW9uJiYwPT09YS5fb3B0cy50ZXN0RnJhbWV3b3JrLnZlcnNpb24uaW5kZXhPZigibW9jaGEiKT9lLmluZGV4T2YoIjoiKT4wJiZfLmNvbnRhaW5zKGUsdCl8fHQuaW5kZXhPZigiOiIpPjAmJl8uY29udGFpbnModCxlKTp2b2lkIDApfSxpbnRlcm1lZGlhdGVDb21wbGV0ZTpmdW5jdGlvbigpe2EucmVwb3J0SW50ZXJtZWRpYXRlUmVzdWx0JiZhLnJlcG9ydEludGVybWVkaWF0ZVJlc3VsdChhLl9jcmVhdGVSdW5SZXN1bHQodGhpcykpfSxjb21wbGV0ZTpmdW5jdGlvbih0KXt2YXIgbj10aGlzO2NsZWFyVGltZW91dCh0aGlzLl9jbG9zZUJ5RXJyb3JUaW1lb3V0KSxjbGVhclRpbWVvdXQodGhpcy5fbG9uZ1J1bm5pbmdXYXJuaW5nVGltZW91dCksY2xlYXJUaW1lb3V0KHRoaXMuX2xvbmdSdW5uaW5nUGluZ1RpbWVvdXQpLG4uX29uRmluaXNoZWQoKSx0aGlzLl9kaXNwb3NlKGZ1bmN0aW9uKCl7YS5fY2FuY2VsbGVkP3Ioe3J1bkNhbmNlbGxlZDohMH0pOm8oe3Nlc3Npb246bix0aW1lOnQmJnQudGltZX0pfSksaSgiWyVzXSBSdW4gJXMgdGVzdChzKSwgc2tpcHBlZCAlcyB0ZXN0KHMpIixlLHRoaXMuX3Rlc3RzLmxlbmd0aC10aGlzLl9za2lwcGVkLHRoaXMuX3NraXBwZWQpfSxnbG9iYWxFcnJvcjpmdW5jdGlvbih0KXthLl9oYW5kbGVFcnJvcih0aGlzLGUsdC5tZXNzYWdlLHQuc3RhY2ssdC5kZWNsYXJhdGlvbix0LmFjdHVhbCx0LmV4cGVjdGVkKX0scHJvZ3JhbVNjb3BlU3RhcnQ6ZnVuY3Rpb24oZSl7dGhpcy5fZXhlY3V0aW5nRmlsZXNbZV09MSx0aGlzLl9zZXRUaW1lb3V0Rm9yTG9uZ1J1bm5pbmdPcGVyYXRpb24oKX0scHJvZ3JhbVNjb3BlRW5kOmZ1bmN0aW9uKGUpe2RlbGV0ZSB0aGlzLl9leGVjdXRpbmdGaWxlc1tlXSxfLmlzRW1wdHkodGhpcy5fZXhlY3V0aW5nRmlsZXMpJiYhdGhpcy5fZXhlY3V0aW5nVGVzdCYmKGNsZWFyVGltZW91dCh0aGlzLl9sb25nUnVubmluZ1dhcm5pbmdUaW1lb3V0KSxjbGVhclRpbWVvdXQodGhpcy5fbG9uZ1J1bm5pbmdQaW5nVGltZW91dCkpfSxwcmVUZXN0OmZ1bmN0aW9uKGUpe3RoaXMuX3NldFRpbWVvdXRGb3JMb25nUnVubmluZ09wZXJhdGlvbigpLHRoaXMuX2V4ZWN1dGluZ1Rlc3Q9ZX0scG9zdFRlc3Q6ZnVuY3Rpb24oKXtkZWxldGUgdGhpcy5fZXhlY3V0aW5nVGVzdH0sX3NldFRpbWVvdXRGb3JMb25nUnVubmluZ09wZXJhdGlvbjpmdW5jdGlvbigpe2lmKCFwcm9jZXNzLmVudi5xdW9ra2Epe3ZhciBlPXRoaXM7Y2xlYXJUaW1lb3V0KHRoaXMuX2xvbmdSdW5uaW5nV2FybmluZ1RpbWVvdXQpLGNsZWFyVGltZW91dCh0aGlzLl9sb25nUnVubmluZ1BpbmdUaW1lb3V0KSx0aGlzLl9sb25nUnVubmluZ1dhcm5pbmdUaW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgdD0iU29tZSBsb25nIHJ1bm5pbmcgY29kZSBoYXMgYmVlbiBkZXRlY3RlZDogIixpPWUuX2V4ZWN1dGluZ1Rlc3Qsbz0hXy5pc0VtcHR5KGUuX2V4ZWN1dGluZ0ZpbGVzKTtpZih0Kz0oaT8ndGVzdCAiJytpKyciJzoib25lIG9mIHlvdXIgIisobz8iZmlsZXMiOiJ0ZXN0cyIpKSsiIGlzIHRha2luZyBtb3JlIHRoYW4gIitwKyJtcyB0byBleGVjdXRlLiIsbyYmKHQrPSJcbkV4ZWN1dGlvbiBvZiB0aGUgZm9sbG93aW5nIGZpbGVzIGhhcyBzdGFydGVkIGJ1dCBoYXMgbm90IGZpbmlzaGVkOiIsXy5lYWNoKGUuX2V4ZWN1dGluZ0ZpbGVzLGZ1bmN0aW9uKGUsbil7dmFyIGk9YS5fcHJvamVjdC5fZ2V0RmlsZU1ldGFkYXRhQnlJZChuKTt0Kz0iXG4tICIrKGk/aS5wYXRoOiJ1bmtub3duIil9KSksZS5fbG9nLmxlbmd0aCYmKHQrPSJcblRoZSBsYXN0IHJlY29yZGVkIGNvbnNvbGUubG9nOiAiK18ubGFzdChlLl9sb2cpLnRleHQpLGl8fG8pe3QrPSJcblRyeSBjb21tZW50aW5nIG91dCB0aGUgdGVzdCBvciBleGNsdWRpbmcgdGhlIHRlc3QgZmlsZSBmcm9tIHRoZSBgdGVzdHNgIGxpc3QgaW4geW91ciB3YWxsYWJ5IGNvbmZpZyxcbmFuZCByZXN0YXJ0aW5nIHdhbGxhYnkgdG8gbWFrZSBzdXJlIHRoYXQgaXQgaXMgdGhpcyB0ZXN0L2ZpbGUgY2F1c2luZyB0aGUgaXNzdWUgYW5kIG5vdCBzb21ldGhpbmcgZWxzZS4iLGkmJih0Kz0iXG5BbHNvIHJldmlldyB5b3VyIHJlY2VudCBjaGFuZ2VzIHRvIHRoZSBjb2RlIHRoYXQgdGhlIHRlc3QgY292ZXJzLCBhcyB3ZWxsIGFzIGl0cyBgYmVmb3JlYCBhbmQgYGFmdGVyYCBob29rcy4iKSx0Kz0iXG5QaW5naW5nIHRlc3QgcnVubmVyIHNhbmRib3guLi4iO3RyeXtuLnBpbmcoZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoZS5fbG9uZ1J1bm5pbmdQaW5nVGltZW91dCksZS5hY3RpdmUoKSYmY29uc29sZS53YXJuKCJTYW5kYm94IGlzIHJlc3BvbnNpdmUuIFRoZSBpc3N1ZSBtYXkgaGF2ZSB0aGUgYXN5bmNocm9ub3VzIG5hdHVyZSwgbGlrZSBhIG1pc3NpbmcgY2FsbGJhY2suIil9KSxlLl9sb25nUnVubmluZ1BpbmdUaW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtjb25zb2xlLndhcm4oIlRoZSBzYW5kYm94IGlzIG5vdCByZXNwb25zaXZlLiBDaGVjayBmb3IgcG9zc2libHkgcmVjZW50bHkgaW50cm9kdWNlZCBpbmZpbml0ZSBsb29wcy4iKX0sZCl9Y2F0Y2gocil7dCs9IlxuVGhlIHNhbmRib3ggcGluZyBmYWlsZWQ6ICIrci5tZXNzYWdlfX1jb25zb2xlLndhcm4odCl9LHApfX0sbW9kdWxlOmZ1bmN0aW9uKGUpe2EuX3Byb2plY3QuX2VtaXRJbnRlcm5hbCh7dHlwZToibW9kdWxlTG9hZGVkIixwYXRoOmUucGF0aCxzZXNzaW9uOnRoaXN9KX0sdGVzdDpmdW5jdGlvbih0KXt2YXIgbj10aGlzO3JldHVybiBkZWxldGUgdGhpcy5fZXhlY3V0aW5nVGVzdCxjbGVhclRpbWVvdXQodGhpcy5fY2xvc2VCeUVycm9yVGltZW91dCksdGhpcy5fc2V0VGltZW91dEZvckxvbmdSdW5uaW5nT3BlcmF0aW9uKCksdC5ob29rJiZ0LmxvZz8oYS5fcHJvY2Vzc1Rlc3RMb2codC5sb2cpLF8uaXNTdHJpbmcodC5ob29rKSYmXy5lYWNoKHQubG9nLGZ1bmN0aW9uKGUpe2UubWVzc2FnZT10Lmhvb2srKGUubWVzc2FnZT8iOiAiOiIiKStlLm1lc3NhZ2V9KSx2b2lkKHRoaXMuX2dsb2JhbEVycm9ycz10aGlzLl9nbG9iYWxFcnJvcnMuY29uY2F0KHQubG9nKSkpOih0LnNraXBwZWQ/KHRoaXMuX3NraXBwZWQrKyxhLl9wcm9jZXNzVGVzdExvZyh0LmxvZykpOihpKCJbJXNdIFRlc3QgZXhlY3V0ZWQ6ICIrdC5uYW1lLGUpLGEuX3Byb2Nlc3NUZXN0TG9nKHQubG9nKSx0LmxvZyYmXy5lYWNoKHQubG9nLGZ1bmN0aW9uKGUpe3JldHVybiBuLmFkZFRvVGVzdExvZyhlKX0pLHRoaXMuX2V4ZWN1dGluZ1Rlc3RMb2cubGVuZ3RoJiYodC5sb2c9dGhpcy5fZXhlY3V0aW5nVGVzdExvZy5zbGljZSgpKSxfLmlzVW5kZWZpbmVkKHQuc2xvdykmJih0LnNsb3c9dC50aW1lPmEuX29wdHMuc2xvd1Rlc3RUaHJlc2hvbGQpLHQuc2xvdz10LnNsb3d8fHZvaWQgMCx0aGlzLl9leGVjdXRpbmdUZXN0TG9nLmxlbmd0aD0wLCsrYS5fZXhlY3V0ZWRUZXN0TnVtYmVyJTUwfHxjb25zb2xlLmxvZygiRXhlY3V0aW9uIHByb2dyZXNzOiAiK2EuX2V4ZWN1dGVkVGVzdE51bWJlcisiIHRlc3RzIikpLHZvaWQgdGhpcy5fdGVzdHMucHVzaCh0KSl9LGNvdmVyYWdlOmZ1bmN0aW9uKGUpe3RoaXMuX2NvdmVyYWdlW2UuaWRdPWUucmFuZ2VzfSxjb25zb2xlOmZ1bmN0aW9uKGUpe3ZhciB0PWEuX29wdHMubWF4Q29uc29sZU1lc3NhZ2VzUGVyVGVzdCxuPXRoaXMuX21lc3NhZ2VzUGVyVGVzdFtlLnNwZWNdPSh0aGlzLl9tZXNzYWdlc1BlclRlc3RbZS5zcGVjXXx8MCkrMTtuPT09dCsxP2NvbnNvbGUud2FybigiTnVtYmVyIG9mIGNvbnNvbGUgbWVzc2FnZXMgcGVyIHRlc3QgZXhjZWVkZWQgbWF4aW11bSBhbGxvd2VkIHZhbHVlICgiK3QrIiksIGN1cnJlbnQgdGVzdCBjb25zb2xlIG1lc3NhZ2VzIHJlY29yZGluZyBzdG9wcGVkLlxuWW91IG1heSBpbmNyZWFzZSB0aGUgbGltaXQgYnkgYWRkaW5nIGBtYXhDb25zb2xlTWVzc2FnZXNQZXJUZXN0YCBzZXR0aW5nIHRvIHlvdXIgY29uZmlnIGZpbGUuIik6bjw9dCYmdGhpcy5fbG9nLnB1c2goZSksYS5yZXBvcnRDb25zb2xlT3V0cHV0KGUpfSxyZXN1bWU6ZnVuY3Rpb24oKXtpKCJTYW5kYm94IHJlcXVlc3RlZCBlYXJseSBzY3JlZW4gc2hvdCBjYXB0dXJlIiksdGhpcy5fb25GaW5pc2hlZCgpLHRoaXMuX29uRmluaXNoZWQ9Xy5ub29wLG4ucmVzdW1lKCl9LHJlamVjdDpmdW5jdGlvbihlKXt0aGlzLl9kaXNwb3Npbmd8fHRoaXMuX2Rpc3Bvc2UoZnVuY3Rpb24oKXtyKGEuX2NhbmNlbGxlZD97cnVuQ2FuY2VsbGVkOiEwfTplKX0pfSxyZWN5Y2xlV29ya2VyOmZ1bmN0aW9uKCl7YS5yZWN5Y2xlV29ya2VyKHQpfSxfZGlzcG9zZTpmdW5jdGlvbihvKXt0aGlzLl9kaXNwb3Npbmc9ITAsY2xlYXJUaW1lb3V0KHRoaXMuX2Nsb3NlQnlFcnJvclRpbWVvdXQpLGNsZWFyVGltZW91dCh0aGlzLl9sb25nUnVubmluZ1dhcm5pbmdUaW1lb3V0KSxjbGVhclRpbWVvdXQodGhpcy5fbG9uZ1J1bm5pbmdQaW5nVGltZW91dCk7dmFyIHI9YS5fd29ya2VyUGVuZGluZ0NsZWFudXBbdF09e30scz0hMSxsPSExLGM9ZnVuY3Rpb24obil7bD0hMCxzJiZjbGVhclRpbWVvdXQocyksZGVsZXRlIGEuX3Nlc3Npb25zW2VdLHIub25Eb25lJiZyLm9uRG9uZShuKSxkZWxldGUgYS5fd29ya2VyUGVuZGluZ0NsZWFudXBbdF0sbygpfSxwPWZ1bmN0aW9uKCl7bHx8KGkoIlslc10gU2FuZGJveCBpcyBub3QgcmVzcG9uc2l2ZSwgcmVjeWNsaW5nIHdvcmtlciBpbnN0YW5jZSIsZSksYS5fdHJ5Q2xvc2luZ1NhbmRib3gobi5jbG9zZSxlKSxhLnJlY3ljbGVXb3JrZXIodCksYyghMCkpfTt0cnl7bi5waW5nKGZ1bmN0aW9uKCl7bHx8KGkoIlslc10gU2FuZGJveCBpcyByZXNwb25zaXZlLCBjbG9zaW5nIGl0IixlKSxhLl90cnlDbG9zaW5nU2FuZGJveChuLmNsb3NlLGUpLGMoKSl9KX1jYXRjaChkKXtyZXR1cm4gaSgiWyVzXSBTYW5kYm94IGNhbiBub3QgYmUgcGluZ2VkOiAlcyIsZSxkJiZkLm1lc3NhZ2UpLHZvaWQgcCgpfXM9c2V0VGltZW91dChmdW5jdGlvbigpe3AoKX0sMWUzKX19fSxfdHJ5Q2xvc2luZ1NhbmRib3g6ZnVuY3Rpb24oZSx0KXt0cnl7ZSgpfWNhdGNoKG4pe2koIlslc10gU2FuZGJveCBjbG9zaW5nIGVycm9yLCAlcyIsdCxuLm1lc3NhZ2UpfX0sX2NvcnJ1cHRlZENhY2hlOmZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLm1hdGNoKC9ldmFsdWF0aW5nICdbYS16XVwuXCRfXCRjb3ZlcmFnZVxbLyl9LF9wcm9jZXNzVGVzdExvZzpmdW5jdGlvbihlKXt2YXIgdD10aGlzLG49dS5sZW5ndGg7Xy5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIG89ZS5tZXNzYWdlJiZlLm1lc3NhZ2UuaW5kZXhPZigiIGluIGZpbGU6Ly8vIil8fC0xO2lmKH5vJiYoZS5tZXNzYWdlPWUubWVzc2FnZS5zdWJzdHJpbmcoMCxvKSksdC5fY29ycnVwdGVkQ2FjaGUoZS5tZXNzYWdlKSYmKHQuX3Byb2plY3QuaW52YWxpZGF0ZUNhY2hlKCksZS5tZXNzYWdlPWgpLHQuX3JlbW92ZUFuc2koZSksZS5zdGFjayYmXy5pc1N0cmluZyhlLnN0YWNrKSl7dmFyIHIsYSxsPVtdLGM9e30scD1lLnN0YWNrLnNwbGl0KCJcbiIpO3AmJnQuX2NvcnJ1cHRlZENhY2hlKHBbMF0pJiYodC5fcHJvamVjdC5pbnZhbGlkYXRlQ2FjaGUoKSxlLm1lc3NhZ2U9aCksXy5lYWNoKHAsZnVuY3Rpb24oZSl7dmFyIGk9ZS5sYXN0SW5kZXhPZih1KTtpZih+aSl7dmFyIG89ZS5zdWJzdHIoaStuKS5zcGxpdCgiOiIpO28ubGVuZ3RoPj0yJiYocj10Ll9wcm9qZWN0LnN0YWNrRW50cnlCeUZpbGVJZChwYXJzZUludChvWzBdLDEwKXx8b1swXSxwYXJzZUludChvWzFdLDEwKSksciYmci5saW5lJiYoYT10Ll9leHRyYWN0QnJvd3NlclN0YWNrTGluZUNvbnRleHQoZSksYSYmKGNbbC5sZW5ndGhdPWEpLGwucHVzaChbci5maWxlLHIubGluZV0pKSl9ZWxzZSBpZihwcm9jZXNzLmVudi5xdW9ra2Epe2lmKHByb2Nlc3MuZW52LnF1b2trYSlpZihlPXQuX3Byb2plY3Qubm9ybWFsaXplUGF0aChlKSxfLmNvbnRhaW5zKGUsdC5fbm9ybWFsaXplZFdhbGxhYnlTZXJ2ZXJQYXRoKSl7aWYoXy5jb250YWlucyhlLCJxdW9ra2FTdGFja1RyYWNlTWFya2VyIikpcmV0dXJuITF9ZWxzZXt2YXIgcCxkLGg9ZTtlPWUucmVwbGFjZSh0Ll9ub3JtYWxpemVkTG9jYWxSb290LCIuIik7dmFyIG09aCE9PWU/aC5sYXN0SW5kZXhPZih0Ll9ub3JtYWxpemVkTG9jYWxSb290KTplLmxhc3RJbmRleE9mKCIoIikrMTtpZih3PWghPT1lP2Uuc3Vic3RyKG0pLnNwbGl0KCI6Iik6ZS5zdWJzdHJpbmcobSxlLmxhc3RJbmRleE9mKCIpIiktMSkuc3BsaXQoIjoiKSwzPT09dy5sZW5ndGgpe2E9dC5fZXh0cmFjdE5vZGVTdGFja0xpbmVDb250ZXh0KGUsbSk7dmFyIGY9cGFyc2VJbnQod1sxXSwxMCk7cj10Ll9wcm9qZWN0LnN0YWNrRW50cnlCeUZpbGVQYXRoKHQuX3Byb2plY3Qubm9ybWFsaXplUGF0aChzLmlzTGV2ZWxVcFJlbGF0aXZlUGF0aCh3WzBdKT93WzBdOl8ubHRyaW0od1swXSwiLi8iKSksZiksciYmci5saW5lPyhwPXIuZmlsZSxkPXIubGluZSk6KHA9d1swXSxkPWYpLGEmJihjW2wubGVuZ3RoXT1hKSxsLnB1c2goW3AsZF0pfX19ZWxzZXtlPXQuX3Byb2plY3Qubm9ybWFsaXplUGF0aChlKTt2YXIgUz10Ll9maWxlUm9vdD9lLmxhc3RJbmRleE9mKHQuX2ZpbGVSb290KTotMTtpZih+Uyl7dmFyIHc9Xy5ydHJpbShlLnN1YnN0cihTK3QuX2ZpbGVSb290Lmxlbmd0aCksIikiKS5zcGxpdCgiOiIpOzMhPT13Lmxlbmd0aCYmMiE9PXcubGVuZ3RofHwocj10Ll9wcm9qZWN0LnN0YWNrRW50cnlCeUZpbGVQYXRoKHQuX3Byb2plY3Qubm9ybWFsaXplUGF0aChfLmx0cmltKHdbMF0sIi8iKSkscGFyc2VJbnQod1sxXSwxMCkpLHImJnIubGluZSYmKGE9dC5fZXh0cmFjdE5vZGVTdGFja0xpbmVDb250ZXh0KGUsUyksYSYmKGNbbC5sZW5ndGhdPWEpLGwucHVzaChbci5maWxlLHIubGluZV0pKSl9fX0pLGwubGVuZ3RofHxpKCJGYWlsZWQgdG8gbWFwIHRoZSBzdGFjayB0byB1c2VyIGNvZGUsIGVudHJ5IG1lc3NhZ2U6ICVzLCBzdGFjazogJXMiLGUubWVzc2FnZSYmZS5tZXNzYWdlLnN1YnN0cmluZygwLDEwMjQpLGUuc3RhY2suc3Vic3RyaW5nKDAsMTAyNCkpLGUubWVzc2FnZT10Ll9wcm9qZWN0Ll9jbGVhbk1lc3NhZ2UoZS5tZXNzYWdlKSwibm9kZSI9PT10Ll9wcm9qZWN0LnNldHRpbmdzKCkuZW52LnR5cGUmJn5lLm1lc3NhZ2UuaW5kZXhPZigiQ2Fubm90IGZpbmQgbW9kdWxlIikmJihlLm1lc3NhZ2U9dC5fcHJvamVjdC5fY2xlYW5NZXNzYWdlKGUubWVzc2FnZSx0Ll9wcm9qZWN0Ll9yb290KSksZS5zdGFjaz1sLF8uaXNFbXB0eShjKXx8KGUuY29udGV4dD1jKX1wcm9jZXNzLmVudi5xdW9ra2EmJmUubWVzc2FnZSYmKGUubWVzc2FnZT1lLm1lc3NhZ2UucmVwbGFjZSh0Ll9ub3JtYWxpemVkTG9jYWxSb290LCIuIikucmVwbGFjZSh0Ll9wcm9qZWN0Ll9sb2NhbFJvb3QsIi4iKSl9KX0sX2V4dHJhY3ROb2RlU3RhY2tMaW5lQ29udGV4dDpmdW5jdGlvbihlLHQpe2lmKHQ+NCYmIigiPT09ZVt0LTFdKXt2YXIgbj1lLnN1YnN0cigwLHQtMil8fCIiO3JldHVybiBuLnNwbGl0KCJhdCAiKVsxXX19LF9leHRyYWN0QnJvd3NlclN0YWNrTGluZUNvbnRleHQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5zcGxpdCgiIChodHRwIik7cmV0dXJuIHQubGVuZ3RoPj0yPyh0WzBdfHwiIikuc3BsaXQoImF0ICIpWzFdOih0PWUuc3BsaXQoIkBodHRwIiksdC5sZW5ndGg+PTI/dFswXTp2b2lkIDApfSxfcnVuSW5QYXJhbGxlbDpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMsbz1lLnRlc3RGaWxlc1RvTG9hZCxyPXt9O2koIkRpc3RyaWJ1dGluZyB0ZXN0cyBiZXR3ZWVuICVzIHdvcmtlcnMiLHQpO2Zvcih2YXIgYT0wO2E8dDthKyspe3ZhciBzPV8ub21pdChlLCJ0ZXN0RmlsZXMiKTtzLnRlc3RGaWxlc1RvTG9hZD1bXSxyW2FdPXtvcHRzOnMsd29ya2VySWQ6YSxyYW5nZXM6MH19cmV0dXJuIF8uZWFjaChvLGZ1bmN0aW9uKGUpe3ZhciB0PV8uc29ydEJ5KHIsZnVuY3Rpb24oZSl7cmV0dXJuIGUucmFuZ2VzfSlbMF07dC5vcHRzLnRlc3RGaWxlc1RvTG9hZC5wdXNoKGUpLHQucmFuZ2VzKz1lLnJhbmdlc0xlbmd0aH0pLGkoIlJ1bm5pbmcgdGVzdHMgaW4gcGFyYWxsZWwiKSxRLmFsbChfLmNoYWluKHIpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS5yYW5nZXN9KS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIG4uX2V4dGVuc2lvbi5wcmVwYXJlKGUub3B0cyxlLndvcmtlcklkKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBuLl9ydW5UZXN0cyhlKX0pfSkudmFsdWUoKSkudGhlbihmdW5jdGlvbihlKXtpKCJNZXJnaW5nIHBhcmFsbGVsIHRlc3QgcnVuIHJlc3VsdHMiKTt2YXIgdD1fLnJlZHVjZShlLGZ1bmN0aW9uKGUsdCl7ZS5ydW5DYW5jZWxsZWQ9dC5ydW5DYW5jZWxsZWR8fGUucnVuQ2FuY2VsbGVkLGUudGVzdHM9ZS50ZXN0cy5jb25jYXQodC50ZXN0c3x8W10pLGUubG9nPWUubG9nLmNvbmNhdCh0LmxvZ3x8W10pLGUuZ2xvYmFsRXJyb3JzPWUuZ2xvYmFsRXJyb3JzLmNvbmNhdCh0Lmdsb2JhbEVycm9yc3x8W10pLGUuZXJyb3I9dCBpbnN0YW5jZW9mIEVycm9yfHxlLmVycm9yLGUubG9hZGluZ1NlcXVlbmNlPV8uZXh0ZW5kKGUubG9hZGluZ1NlcXVlbmNlLHQubG9hZGluZ1NlcXVlbmNlfHx7fSk7dmFyIG49ZS5jb3ZlcmFnZTtyZXR1cm4gXy5pc0VtcHR5KG4pPyhlLmNvdmVyYWdlPXQuY292ZXJhZ2UsZSk6KF8uZWFjaCh0LmNvdmVyYWdlLGZ1bmN0aW9uKGUsdCl7dmFyIGk9blt0XTtyZXR1cm4gaT92b2lkIF8uZWFjaChlLGZ1bmN0aW9uKGUsdCl7dmFyIG49aVt0XTtyZXR1cm4gbj92b2lkIF8uZXh0ZW5kKG4sZSk6dm9pZChpW3RdPWUpfSk6dm9pZChuW3RdPWUpfSksZSl9LHtjb3ZlcmFnZTp7fSx0ZXN0czpbXSxsb2c6W10sZ2xvYmFsRXJyb3JzOltdLGxvYWRpbmdTZXF1ZW5jZTp7fX0pO3JldHVybiB0LnJ1bkNhbmNlbGxlZD9RLnJlamVjdCh0KTp0LmVycm9yP1EucmVqZWN0KHQuZXJyb3IpOlEud2hlbih0KX0pfSxnZXRXb3JrZXI6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxuPXQuX3dvcmtlcnNbZV07cmV0dXJuIG58fChuPXQuX3dvcmtlcnNbZV09e2lkOmUscHJvbWlzZTpRLnByb21pc2UoZnVuY3Rpb24obixvKXt2YXIgcj10Ll93b3JrZXJzW2VdO2lmKHIpaWYoci5pbnN0YW5jZSl7aWYodC5fZXh0ZW5zaW9uLmhlYWx0aHkoci5pbnN0YW5jZSkpcmV0dXJuIHZvaWQgbihyKTtpKCJGb3VuZCBpbmFjdGl2ZSBydW4gd29ya2VyIGluc3RhbmNlICMlcywgcmVjeWNsaW5nIixlKSx0LnJlY3ljbGVXb3JrZXIoZSl9ZWxzZSBpZihyLnByb21pc2UpcmV0dXJuIHIucHJvbWlzZTtpKCJTdGFydGluZyBydW4gd29ya2VyIGluc3RhbmNlICMiK2UpO3RyeXt0Ll9leHRlbnNpb24uY3JlYXRlKGUsZnVuY3Rpb24ocil7aWYoIXIpcmV0dXJuIHZvaWQgbyhuZXcgRXJyb3IoIkZhaWxlZCB0byBjcmVhdGUgd29ya2VyIGluc3RhbmNlIikpO3ZhciBhPXQuX3dvcmtlcnNbZV09dC5fd29ya2Vyc1tlXXx8e2lkOmV9O2lmKHIub25Db25uZWN0ZWQpe2Eub25Db25uZWN0ZWQ9Xy5iaW5kKHIub25Db25uZWN0ZWQsYSksZGVsZXRlIHIub25Db25uZWN0ZWQ7dmFyIHMsbDthLnByb21pc2U9US5wcm9taXNlKGZ1bmN0aW9uKGUsdCl7cz1lLGw9dH0pO3ZhciBjPSExLHA9c2V0VGltZW91dChmdW5jdGlvbigpe2lmKCFjKXtkKCk7dmFyIG49dC5fd29ya2Vyc1tlXTtuJiZuLl9jb25uZWN0ZWQ/dC5fZXh0ZW5zaW9uLnJlY3ljbGUocik6dC5yZWN5Y2xlV29ya2VyKGUpLGkoIldvcmtlciBpcyBub3QgY3JlYXRlZCBpbiB0aW1lLCByZWN5Y2xpbmcgaXQiKSxsJiZsKHtydW5DYW5jZWxsZWQ6ITAscmVydW46ITB9KSxvKHtydW5DYW5jZWxsZWQ6ITAscmVydW46ITB9KX19LDFlNCksZD1mdW5jdGlvbigpe2M9ITAsY2xlYXJUaW1lb3V0KHApfSx1PXQuX2Nvbm5lY3RpbmdXb3JrZXJzW2VdO3UmJnQuX2V4dGVuc2lvbi5yZWN5Y2xlKHUpLHQuX2Nvbm5lY3RpbmdXb3JrZXJzW2VdPXIsYS5vbkNvbm5lY3RlZChmdW5jdGlvbihvKXtkZWxldGUgdC5fY29ubmVjdGluZ1dvcmtlcnNbZV0sY3x8KGQoKSxpKCJTdGFydGVkIHJ1biB3b3JrZXIgaW5zdGFuY2UgKGRlbGF5ZWQpICMiK2UpLGEuaW5zdGFuY2U9cixhLl9jb25uZWN0ZWQ9ITAsci5jaGFubmVsPW8sYS5wcm9taXNlPVEud2hlbihyKSxzJiZzKHIpLG4ocikpfSl9ZWxzZSBpKCJTdGFydGVkIHJ1biB3b3JrZXIgaW5zdGFuY2UgKGltbWVkaWF0ZSkgIyIrZSksYS5pbnN0YW5jZT1yLGEucHJvbWlzZT1RLndoZW4ociksbihyKX0pfWNhdGNoKGEpe28oYSl9fSl9KSxuLnByb21pc2V9LHJlcG9ydENvbnNvbGVPdXRwdXQ6ZnVuY3Rpb24oZSl7fSxyZWN5Y2xlV29ya2VyOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dHJ5e3ZhciBuPXQuX3dvcmtlcnNbZV07biYmbi5pbnN0YW5jZSYmdC5fZXh0ZW5zaW9uLnJlY3ljbGUobi5pbnN0YW5jZSl9Y2F0Y2gobyl7aSgiRXJyb3Igd2hpbGUgcmVjeWNsaW5nIHJ1biB3b3JrZXIgaW5zdGFuY2UgIyVzOiAlcyIsZSxvJiYoby5zdGFja3x8by5tZXNzYWdlKSl9ZmluYWxseXtkZWxldGUgdC5fd29ya2Vyc1tlXSxkZWxldGUgdC5fd29ya2VyUGVuZGluZ0NsZWFudXBbZV19fSxzdG9wOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztfLmVhY2goZS5fd29ya2VycyxmdW5jdGlvbih0LG4pe2UucmVjeWNsZVdvcmtlcihuKX0pO3RyeXtlLl93c3MmJmUuX3dzcy5jbG9zZSgpfWNhdGNoKHQpe310cnl7ZS5faHR0cFNlcnZlciYmZS5faHR0cFNlcnZlci5jbG9zZSgpfWNhdGNoKHQpe319LF9jYWxjdWxhdGVOdW1iZXJPZlBhcmFsbGVsV29ya2VyczpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fbWF4V29ya2Vycz1NYXRoLm1heCgxLGUuX29wdHMud29ya2Vycy5pbml0aWFsfHxNYXRoLm1heChvLmNwdXMoKS5sZW5ndGgtMiwyKSksYyYmIWUuX29wdHMud29ya2Vycy5pbml0aWFsJiYicGhhbnRvbWpzIj09PWUuX29wdHMuZW52LmtpbmQmJihlLl9tYXhXb3JrZXJzPU1hdGgubWluKDE2LGUuX21heFdvcmtlcnMpKSxlLl9taW5Xb3JrZXJzPU1hdGgubWF4KDEsZS5fb3B0cy53b3JrZXJzLnJlZ3VsYXJ8fE1hdGgubWF4KE1hdGguZmxvb3IoZS5fbWF4V29ya2Vycy8yKSwyKSksaSgiUGFyYWxsZWxpc20gZm9yIGluaXRpYWwgcnVuOiAlcywgZm9yIHJlZ3VsYXIgcnVuOiAlcyIsZS5fbWF4V29ya2VycyxlLl9taW5Xb3JrZXJzKX19LHQuZXhwb3J0cz1tfSx7Ii4vdXRpbHMiOjI3LGRlYnVnOnZvaWQgMCxodHRwOnZvaWQgMCxvczp2b2lkIDAscGF0aDp2b2lkIDAsd3M6dm9pZCAwfV0sMjc6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaT1lKCJwYXRoIiksbz0vXlxzKihcL1wqXCo/KC58XHI/XG4pKj9cKlwvKS8scj0vXlxzKi8sYT0vW1x1MDAxYlx1MDA5Yl1bWygpIzs/XSooPzpbMC05XXsxLDR9KD86O1swLTldezAsNH0pKik/WzAtOUEtUFJaY2YtbnFyeT0+PF0vZzt0LmV4cG9ydHM9e3JhbmRvbUlkOmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLDUpfSxub29wVHJ1ZTpmdW5jdGlvbigpe3JldHVybiEwfSxub29wVHJ1ZVByb21pc2U6ZnVuY3Rpb24oKXtyZXR1cm4gUS5mY2FsbCh0aGlzLm5vb3BUcnVlKX0saXNQYXRjaDpmdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5sZW5ndGg+MiYmIkAiPT09ZVswXSYmIkAiPT09ZVsxXX0saXNMZXZlbFVwUmVsYXRpdmVQYXRoOmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiLiI9PT1lWzBdJiYiLiI9PT1lWzFdfSxkb2NCbG9ja0NvbW1lbnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5tYXRjaChvKTtyZXR1cm4gdD90WzBdLnJlcGxhY2UociwiIil8fCIiOiIifSx0ZXh0SW5kZXhQb3NpdGlvbjpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMudGV4dExpbmVzKGUsdCk7cmV0dXJue2xpbmU6bi5sZW5ndGgsY29sdW1uOm5bbi5sZW5ndGgtMV0ubGVuZ3RofX0sdGV4dExpbmVzOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9Xy5pc1VuZGVmaW5lZCh0KT9lOmUuc3Vic3RyKDAsdCksZS5zcGxpdCgvXHJcbnxccnxcbi8pfSx2ZXJpZnlMb2NhbE9yaWdpbjpmdW5jdGlvbih0LG4pe2lmKCF0KXJldHVybiEwO3ZhciBpPSExO3RyeXt2YXIgbz1lKCJ1cmwiKS5wYXJzZSh0KS5ob3N0bmFtZTtpPSJsb2NhbGhvc3QiPT09b3x8IjAuMC4wLjAiPT09b3x8IjEyNy4wLjAuMSI9PT1vfHwiOjoxIj09PW99Y2F0Y2gocil7fXJldHVybiBpfHxufHxjb25zb2xlLmVycm9yKCJ3YWxsYWJ5LmpzIHJlZnVzZWQgdG8gYWNjZXB0IGNvbm5lY3Rpb24gZnJvbSAiK3QpLGl9LHBhdGNoTW9kdWxlOmZ1bmN0aW9uKHQsbil7dmFyIGk9ZSgibW9kdWxlIikuTW9kdWxlLnByb3RvdHlwZSxvPWkucmVxdWlyZTtpLnJlcXVpcmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT10P24oby5iaW5kKHRoaXMpKTpvLmNhbGwodGhpcyxlKX19LHJlcXVpcmVNb2R1bGVGcm9tOmZ1bmN0aW9uKHQsbil7dHJ5e3JldHVybiBlKGkuam9pbih0LCJub2RlX21vZHVsZXMiLG4pKX1jYXRjaChvKXt2YXIgcj1lKCJtb2R1bGUiKSxhPW5ldyByKCIuIixudWxsKTtyZXR1cm4gYS5maWxlbmFtZT1pLmpvaW4odCwid2FsbGFieS5qcyIpLGEucGF0aHM9ci5fbm9kZU1vZHVsZVBhdGhzKHQpLHIuX2xvYWQobixhLCExKX19LHJlc29sdmVNb2R1bGVQYXRoRnJvbTpmdW5jdGlvbih0LG4pe3ZhciBvPWUoIm1vZHVsZSIpLHI9bmV3IG8oIi4iLG51bGwpO3JldHVybiByLmZpbGVuYW1lPWkuam9pbih0LCJ3YWxsYWJ5LmpzIiksci5wYXRocz1vLl9ub2RlTW9kdWxlUGF0aHModCksby5fcmVzb2x2ZUZpbGVuYW1lKG4sciwhMSl9LG5vZGVNb2R1bGVzTG9va3VwOmZ1bmN0aW9uKHQsbil7dmFyIGk9ZSgibW9kdWxlIikuTW9kdWxlLG89aS5wcm90b3R5cGUscj1pLl9ub2RlTW9kdWxlUGF0aHMsYT1vLnJlcXVpcmU7aS5fbm9kZU1vZHVsZVBhdGhzPWZ1bmN0aW9uKGUpe3ZhciBuPXIuY2FsbCh0aGlzLGUpO3JldHVybiB0KG4sZSxyLHRoaXMpLG59LG4mJihvLnJlcXVpcmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGEuY2FsbCh0aGlzLG4oZSkpfSl9LG5vZGVNb2R1bGVQYXRoczpmdW5jdGlvbih0KXt2YXIgbj1lKCJtb2R1bGUiKTtyZXR1cm4gbi5fbm9kZU1vZHVsZVBhdGhzKHQpfSxwYXRjaEJhYmVsUmVzb2x2ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLm5vZGVNb2R1bGVQYXRocyhlKTt0aGlzLnBhdGNoTW9kdWxlKCJyZXNvbHZlIixmdW5jdGlvbihlKXt2YXIgbj1lKCJyZXNvbHZlIiksaT1uLnN5bmM7cmV0dXJuIG4uc3luYz1mdW5jdGlvbihlLG4pe3JldHVybn5lLmluZGV4T2YoImJhYmVsIikmJm4mJihhcmd1bWVudHNbMV0ucGF0aHM9KG4ucGF0aHN8fFtdKS5jb25jYXQodCkpLGkuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxufSl9LGhhc0Fuc2k6ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJzdHJpbmciPT10eXBlb2YgZSYmZS5tYXRjaChhKX0scmVtb3ZlQW5zaTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmInN0cmluZyI9PXR5cGVvZiBlP2UucmVwbGFjZShhLCIiKTplfSxjb3B5VG9DbGlwYm9hcmQ6ZnVuY3Rpb24odCl7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmNvbnNvbGUud2FybigiRmFpbGVkIHRvIGNvcHkgdG8gY2xpcGJvYXJkLiAiKyhlJiZlLm1lc3NhZ2UpKX07dHJ5e2UoImNvcHktcGFzdGUiKS5jb3B5KHQsbil9Y2F0Y2goaSl7bihpKX19LGluaXRTZXJ2ZXJPcHRpb25zOmZ1bmN0aW9uKHQpe3ZhciBuPWUoImdyYWNlZnVsLWZzIiksaT1lKCJmcy1leHRyYSIpO3QucnVubmVyUmVzb2x2ZXI9ZnVuY3Rpb24odCxuKXtyZXR1cm4gZSgiYnJvd3NlciI9PT10PyJlbGVjdHJvbiI9PT1uPyIuL2VsZWN0cm9uUnVubmVyLmpzIjoiY2hyb21lIj09PW4/Ii4vY2hyb21lUnVubmVyLmpzIjoiLi9waGFudG9tUnVubmVyLmpzIjoiLi9ub2RlUnVubmVyLmpzIil9LHQucHJvY2Vzc29yUG9vbD1lKCIuL3Byb2Nlc3NQb29sIiksdC5maWxlU3RydWN0dXJlQ2FjaGVQcm9taXNlPWZ1bmN0aW9uKGUpe3JldHVybiBRLm5mY2FsbChuLnJlYWRGaWxlLGUpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIFEud2hlbihKU09OLnBhcnNlKGUpKX0pfSx0LmZpbGVTdGF0UHJvbWlzZT1mdW5jdGlvbihlKXtyZXR1cm4gUS5uZmNhbGwobi5zdGF0LGUpfSx0LnJlYWRGaWxlUHJvbWlzZT1mdW5jdGlvbihlKXtyZXR1cm4gUS5uZmNhbGwobi5yZWFkRmlsZSxlKX0sdC53cml0ZUZpbGVQcm9taXNlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIFEubmZjYWxsKG4ud3JpdGVGaWxlLGUsdCl9LHQudW5saW5rRmlsZVByb21pc2U9ZnVuY3Rpb24oZSl7cmV0dXJuIFEubmZjYWxsKG4udW5saW5rLGUpfSx0LnVubGlua0ZpbGVTeW5jPWZ1bmN0aW9uKGUpe3JldHVybiBuLnVubGlua1N5bmMoZSl9LHQud3JpdGVGaWxlU3luYz1mdW5jdGlvbihlLHQpe3JldHVybiBuLndyaXRlRmlsZVN5bmMoZSx0KX0sdC5yZWFkRmlsZVN5bmM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4ucmVhZEZpbGVTeW5jKGUpLnRvU3RyaW5nKCJ1dGY4Iil9LHQuZmlsZUV4aXN0c1N5bmM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4uZXhpc3RzU3luYyhlKX0sdC5yZWFscGF0aFN5bmM9ZnVuY3Rpb24oZSl7cmV0dXJuIG4ucmVhbHBhdGhTeW5jKGUpfSx0LmRpclJlbW92ZVByb21pc2U9ZnVuY3Rpb24oZSl7cmV0dXJuIFEubmZjYWxsKGkucmVtb3ZlLGUpfSx0LmRpclJlbW92ZVN5bmM9ZnVuY3Rpb24oZSl7cmV0dXJuIGkucmVtb3ZlU3luYyhlKX0sdC5kaXJFbnN1cmVQcm9taXNlPWZ1bmN0aW9uKGUpe3JldHVybiBRLm5mY2FsbChpLmVuc3VyZURpcixlKX0sdC5kaXJFbnN1cmVTeW5jPWZ1bmN0aW9uKGUpe3JldHVybiBpLmVuc3VyZURpclN5bmMoZSl9LHQubm9kZU1vZHVsZXNMb29rdXA9dGhpcy5ub2RlTW9kdWxlc0xvb2t1cH19fSx7Ii4vY2hyb21lUnVubmVyLmpzIjoyLCIuL2VsZWN0cm9uUnVubmVyLmpzIjozLCIuL25vZGVSdW5uZXIuanMiOjIzLCIuL3BoYW50b21SdW5uZXIuanMiOjI0LCIuL3Byb2Nlc3NQb29sIjoyNSwiY29weS1wYXN0ZSI6dm9pZCAwLCJmcy1leHRyYSI6dm9pZCAwLCJncmFjZWZ1bC1mcyI6dm9pZCAwLG1vZHVsZTp2b2lkIDAscGF0aDp2b2lkIDAsdXJsOnZvaWQgMH1dfSx7fSxbNF0pOw==